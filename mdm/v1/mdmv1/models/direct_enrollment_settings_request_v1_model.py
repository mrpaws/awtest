# coding: utf-8

"""
    MDM API V1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv1.configuration import Configuration


class DirectEnrollmentSettingsRequestV1Model(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'assigned_user_group': 'str',
        'enable_work_space_one_direct_enrollment': 'bool',
        'enable_work_space_one_direct_enrollment_for_android_enterprise': 'bool',
        'enable_work_space_one_direct_enrollment_for_android_legacy': 'bool',
        'enable_work_space_one_direct_enrollment_for_ios': 'bool'
    }

    attribute_map = {
        'assigned_user_group': 'assignedUserGroup',
        'enable_work_space_one_direct_enrollment': 'enableWorkSpaceOneDirectEnrollment',
        'enable_work_space_one_direct_enrollment_for_android_enterprise': 'enableWorkSpaceOneDirectEnrollmentForAndroidEnterprise',
        'enable_work_space_one_direct_enrollment_for_android_legacy': 'enableWorkSpaceOneDirectEnrollmentForAndroidLegacy',
        'enable_work_space_one_direct_enrollment_for_ios': 'enableWorkSpaceOneDirectEnrollmentForIos'
    }

    def __init__(self, assigned_user_group=None, enable_work_space_one_direct_enrollment=None, enable_work_space_one_direct_enrollment_for_android_enterprise=None, enable_work_space_one_direct_enrollment_for_android_legacy=None, enable_work_space_one_direct_enrollment_for_ios=None, _configuration=None):  # noqa: E501
        """DirectEnrollmentSettingsRequestV1Model - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._assigned_user_group = None
        self._enable_work_space_one_direct_enrollment = None
        self._enable_work_space_one_direct_enrollment_for_android_enterprise = None
        self._enable_work_space_one_direct_enrollment_for_android_legacy = None
        self._enable_work_space_one_direct_enrollment_for_ios = None
        self.discriminator = None

        if assigned_user_group is not None:
            self.assigned_user_group = assigned_user_group
        if enable_work_space_one_direct_enrollment is not None:
            self.enable_work_space_one_direct_enrollment = enable_work_space_one_direct_enrollment
        if enable_work_space_one_direct_enrollment_for_android_enterprise is not None:
            self.enable_work_space_one_direct_enrollment_for_android_enterprise = enable_work_space_one_direct_enrollment_for_android_enterprise
        if enable_work_space_one_direct_enrollment_for_android_legacy is not None:
            self.enable_work_space_one_direct_enrollment_for_android_legacy = enable_work_space_one_direct_enrollment_for_android_legacy
        if enable_work_space_one_direct_enrollment_for_ios is not None:
            self.enable_work_space_one_direct_enrollment_for_ios = enable_work_space_one_direct_enrollment_for_ios

    @property
    def assigned_user_group(self):
        """Gets the assigned_user_group of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501

        User group assigned to direct enrollment.  # noqa: E501

        :return: The assigned_user_group of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :rtype: str
        """
        return self._assigned_user_group

    @assigned_user_group.setter
    def assigned_user_group(self, assigned_user_group):
        """Sets the assigned_user_group of this DirectEnrollmentSettingsRequestV1Model.

        User group assigned to direct enrollment.  # noqa: E501

        :param assigned_user_group: The assigned_user_group of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :type: str
        """

        self._assigned_user_group = assigned_user_group

    @property
    def enable_work_space_one_direct_enrollment(self):
        """Gets the enable_work_space_one_direct_enrollment of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501

        Flag to check whether direct enrollment is enabled for Workspace ONE.  # noqa: E501

        :return: The enable_work_space_one_direct_enrollment of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :rtype: bool
        """
        return self._enable_work_space_one_direct_enrollment

    @enable_work_space_one_direct_enrollment.setter
    def enable_work_space_one_direct_enrollment(self, enable_work_space_one_direct_enrollment):
        """Sets the enable_work_space_one_direct_enrollment of this DirectEnrollmentSettingsRequestV1Model.

        Flag to check whether direct enrollment is enabled for Workspace ONE.  # noqa: E501

        :param enable_work_space_one_direct_enrollment: The enable_work_space_one_direct_enrollment of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :type: bool
        """

        self._enable_work_space_one_direct_enrollment = enable_work_space_one_direct_enrollment

    @property
    def enable_work_space_one_direct_enrollment_for_android_enterprise(self):
        """Gets the enable_work_space_one_direct_enrollment_for_android_enterprise of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501

        Flag to check whether direct enrollment is enabled for Workspace ONE android enterprise devices.  # noqa: E501

        :return: The enable_work_space_one_direct_enrollment_for_android_enterprise of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :rtype: bool
        """
        return self._enable_work_space_one_direct_enrollment_for_android_enterprise

    @enable_work_space_one_direct_enrollment_for_android_enterprise.setter
    def enable_work_space_one_direct_enrollment_for_android_enterprise(self, enable_work_space_one_direct_enrollment_for_android_enterprise):
        """Sets the enable_work_space_one_direct_enrollment_for_android_enterprise of this DirectEnrollmentSettingsRequestV1Model.

        Flag to check whether direct enrollment is enabled for Workspace ONE android enterprise devices.  # noqa: E501

        :param enable_work_space_one_direct_enrollment_for_android_enterprise: The enable_work_space_one_direct_enrollment_for_android_enterprise of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :type: bool
        """

        self._enable_work_space_one_direct_enrollment_for_android_enterprise = enable_work_space_one_direct_enrollment_for_android_enterprise

    @property
    def enable_work_space_one_direct_enrollment_for_android_legacy(self):
        """Gets the enable_work_space_one_direct_enrollment_for_android_legacy of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501

        Flag to check whether direct enrollment is enabled for Workspace ONE legacy Android devices.  # noqa: E501

        :return: The enable_work_space_one_direct_enrollment_for_android_legacy of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :rtype: bool
        """
        return self._enable_work_space_one_direct_enrollment_for_android_legacy

    @enable_work_space_one_direct_enrollment_for_android_legacy.setter
    def enable_work_space_one_direct_enrollment_for_android_legacy(self, enable_work_space_one_direct_enrollment_for_android_legacy):
        """Sets the enable_work_space_one_direct_enrollment_for_android_legacy of this DirectEnrollmentSettingsRequestV1Model.

        Flag to check whether direct enrollment is enabled for Workspace ONE legacy Android devices.  # noqa: E501

        :param enable_work_space_one_direct_enrollment_for_android_legacy: The enable_work_space_one_direct_enrollment_for_android_legacy of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :type: bool
        """

        self._enable_work_space_one_direct_enrollment_for_android_legacy = enable_work_space_one_direct_enrollment_for_android_legacy

    @property
    def enable_work_space_one_direct_enrollment_for_ios(self):
        """Gets the enable_work_space_one_direct_enrollment_for_ios of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501

        Flag to check whether direct enrollment is enabled for Workspace ONE iOS devices.  # noqa: E501

        :return: The enable_work_space_one_direct_enrollment_for_ios of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :rtype: bool
        """
        return self._enable_work_space_one_direct_enrollment_for_ios

    @enable_work_space_one_direct_enrollment_for_ios.setter
    def enable_work_space_one_direct_enrollment_for_ios(self, enable_work_space_one_direct_enrollment_for_ios):
        """Sets the enable_work_space_one_direct_enrollment_for_ios of this DirectEnrollmentSettingsRequestV1Model.

        Flag to check whether direct enrollment is enabled for Workspace ONE iOS devices.  # noqa: E501

        :param enable_work_space_one_direct_enrollment_for_ios: The enable_work_space_one_direct_enrollment_for_ios of this DirectEnrollmentSettingsRequestV1Model.  # noqa: E501
        :type: bool
        """

        self._enable_work_space_one_direct_enrollment_for_ios = enable_work_space_one_direct_enrollment_for_ios

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DirectEnrollmentSettingsRequestV1Model, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DirectEnrollmentSettingsRequestV1Model):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DirectEnrollmentSettingsRequestV1Model):
            return True

        return self.to_dict() != other.to_dict()

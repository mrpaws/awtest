# coding: utf-8

"""
    System API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from systemv2.configuration import Configuration


class CreateEnrollmentUserV2Model(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'external_id': 'str',
        'user_name': 'str',
        'password': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'display_name': 'str',
        'user_principal_name': 'str',
        'email_address': 'str',
        'email_username': 'str',
        'phone_number': 'str',
        'mobile_number': 'str',
        'message_type': 'str',
        'message_template_uuid': 'str',
        'enrollment_role_uuid': 'str',
        'status': 'bool',
        'security_type': 'str',
        'device_staging_enabled': 'bool',
        'device_staging_type': 'str',
        'organization_group_uuid': 'str',
        'enrollment_organization_group_uuid': 'str',
        'custom_attribute1': 'str',
        'custom_attribute2': 'str',
        'custom_attribute3': 'str',
        'custom_attribute4': 'str',
        'custom_attribute5': 'str',
        'aad_mapping_attribute': 'str',
        'department': 'str',
        'employee_identifier': 'str',
        'cost_center': 'str',
        'android_shared_device_mode': 'str',
        'android_shared_device_admin_mode_passcode': 'str',
        'android_shared_device_system_apps_enabled': 'bool'
    }

    attribute_map = {
        'external_id': 'externalId',
        'user_name': 'userName',
        'password': 'password',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'display_name': 'displayName',
        'user_principal_name': 'userPrincipalName',
        'email_address': 'emailAddress',
        'email_username': 'emailUsername',
        'phone_number': 'phoneNumber',
        'mobile_number': 'mobileNumber',
        'message_type': 'messageType',
        'message_template_uuid': 'messageTemplateUuid',
        'enrollment_role_uuid': 'enrollmentRoleUuid',
        'status': 'status',
        'security_type': 'securityType',
        'device_staging_enabled': 'deviceStagingEnabled',
        'device_staging_type': 'deviceStagingType',
        'organization_group_uuid': 'organizationGroupUuid',
        'enrollment_organization_group_uuid': 'enrollmentOrganizationGroupUuid',
        'custom_attribute1': 'customAttribute1',
        'custom_attribute2': 'customAttribute2',
        'custom_attribute3': 'customAttribute3',
        'custom_attribute4': 'customAttribute4',
        'custom_attribute5': 'customAttribute5',
        'aad_mapping_attribute': 'aadMappingAttribute',
        'department': 'department',
        'employee_identifier': 'employeeIdentifier',
        'cost_center': 'costCenter',
        'android_shared_device_mode': 'androidSharedDeviceMode',
        'android_shared_device_admin_mode_passcode': 'androidSharedDeviceAdminModePasscode',
        'android_shared_device_system_apps_enabled': 'androidSharedDeviceSystemAppsEnabled'
    }

    def __init__(self, external_id=None, user_name=None, password=None, first_name=None, last_name=None, display_name=None, user_principal_name=None, email_address=None, email_username=None, phone_number=None, mobile_number=None, message_type=None, message_template_uuid=None, enrollment_role_uuid=None, status=None, security_type=None, device_staging_enabled=None, device_staging_type=None, organization_group_uuid=None, enrollment_organization_group_uuid=None, custom_attribute1=None, custom_attribute2=None, custom_attribute3=None, custom_attribute4=None, custom_attribute5=None, aad_mapping_attribute=None, department=None, employee_identifier=None, cost_center=None, android_shared_device_mode=None, android_shared_device_admin_mode_passcode=None, android_shared_device_system_apps_enabled=None, _configuration=None):  # noqa: E501
        """CreateEnrollmentUserV2Model - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._external_id = None
        self._user_name = None
        self._password = None
        self._first_name = None
        self._last_name = None
        self._display_name = None
        self._user_principal_name = None
        self._email_address = None
        self._email_username = None
        self._phone_number = None
        self._mobile_number = None
        self._message_type = None
        self._message_template_uuid = None
        self._enrollment_role_uuid = None
        self._status = None
        self._security_type = None
        self._device_staging_enabled = None
        self._device_staging_type = None
        self._organization_group_uuid = None
        self._enrollment_organization_group_uuid = None
        self._custom_attribute1 = None
        self._custom_attribute2 = None
        self._custom_attribute3 = None
        self._custom_attribute4 = None
        self._custom_attribute5 = None
        self._aad_mapping_attribute = None
        self._department = None
        self._employee_identifier = None
        self._cost_center = None
        self._android_shared_device_mode = None
        self._android_shared_device_admin_mode_passcode = None
        self._android_shared_device_system_apps_enabled = None
        self.discriminator = None

        if external_id is not None:
            self.external_id = external_id
        self.user_name = user_name
        if password is not None:
            self.password = password
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if display_name is not None:
            self.display_name = display_name
        if user_principal_name is not None:
            self.user_principal_name = user_principal_name
        if email_address is not None:
            self.email_address = email_address
        if email_username is not None:
            self.email_username = email_username
        if phone_number is not None:
            self.phone_number = phone_number
        if mobile_number is not None:
            self.mobile_number = mobile_number
        if message_type is not None:
            self.message_type = message_type
        if message_template_uuid is not None:
            self.message_template_uuid = message_template_uuid
        if enrollment_role_uuid is not None:
            self.enrollment_role_uuid = enrollment_role_uuid
        if status is not None:
            self.status = status
        self.security_type = security_type
        if device_staging_enabled is not None:
            self.device_staging_enabled = device_staging_enabled
        if device_staging_type is not None:
            self.device_staging_type = device_staging_type
        if organization_group_uuid is not None:
            self.organization_group_uuid = organization_group_uuid
        if enrollment_organization_group_uuid is not None:
            self.enrollment_organization_group_uuid = enrollment_organization_group_uuid
        if custom_attribute1 is not None:
            self.custom_attribute1 = custom_attribute1
        if custom_attribute2 is not None:
            self.custom_attribute2 = custom_attribute2
        if custom_attribute3 is not None:
            self.custom_attribute3 = custom_attribute3
        if custom_attribute4 is not None:
            self.custom_attribute4 = custom_attribute4
        if custom_attribute5 is not None:
            self.custom_attribute5 = custom_attribute5
        if aad_mapping_attribute is not None:
            self.aad_mapping_attribute = aad_mapping_attribute
        if department is not None:
            self.department = department
        if employee_identifier is not None:
            self.employee_identifier = employee_identifier
        if cost_center is not None:
            self.cost_center = cost_center
        if android_shared_device_mode is not None:
            self.android_shared_device_mode = android_shared_device_mode
        if android_shared_device_admin_mode_passcode is not None:
            self.android_shared_device_admin_mode_passcode = android_shared_device_admin_mode_passcode
        if android_shared_device_system_apps_enabled is not None:
            self.android_shared_device_system_apps_enabled = android_shared_device_system_apps_enabled

    @property
    def external_id(self):
        """Gets the external_id of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user external id  # noqa: E501

        :return: The external_id of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this CreateEnrollmentUserV2Model.

        Enrollment user external id  # noqa: E501

        :param external_id: The external_id of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._external_id = external_id

    @property
    def user_name(self):
        """Gets the user_name of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user username  # noqa: E501

        :return: The user_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this CreateEnrollmentUserV2Model.

        Enrollment user username  # noqa: E501

        :param user_name: The user_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and user_name is None:
            raise ValueError("Invalid value for `user_name`, must not be `None`")  # noqa: E501

        self._user_name = user_name

    @property
    def password(self):
        """Gets the password of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user password  # noqa: E501

        :return: The password of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this CreateEnrollmentUserV2Model.

        Enrollment user password  # noqa: E501

        :param password: The password of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._password = password

    @property
    def first_name(self):
        """Gets the first_name of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user firstname  # noqa: E501

        :return: The first_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this CreateEnrollmentUserV2Model.

        Enrollment user firstname  # noqa: E501

        :param first_name: The first_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user lastname  # noqa: E501

        :return: The last_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this CreateEnrollmentUserV2Model.

        Enrollment user lastname  # noqa: E501

        :param last_name: The last_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def display_name(self):
        """Gets the display_name of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user displayname  # noqa: E501

        :return: The display_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CreateEnrollmentUserV2Model.

        Enrollment user displayname  # noqa: E501

        :param display_name: The display_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def user_principal_name(self):
        """Gets the user_principal_name of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user userprincipalname  # noqa: E501

        :return: The user_principal_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._user_principal_name

    @user_principal_name.setter
    def user_principal_name(self, user_principal_name):
        """Sets the user_principal_name of this CreateEnrollmentUserV2Model.

        Enrollment user userprincipalname  # noqa: E501

        :param user_principal_name: The user_principal_name of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._user_principal_name = user_principal_name

    @property
    def email_address(self):
        """Gets the email_address of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user email address  # noqa: E501

        :return: The email_address of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this CreateEnrollmentUserV2Model.

        Enrollment user email address  # noqa: E501

        :param email_address: The email_address of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._email_address = email_address

    @property
    def email_username(self):
        """Gets the email_username of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user email username  # noqa: E501

        :return: The email_username of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._email_username

    @email_username.setter
    def email_username(self, email_username):
        """Sets the email_username of this CreateEnrollmentUserV2Model.

        Enrollment user email username  # noqa: E501

        :param email_username: The email_username of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._email_username = email_username

    @property
    def phone_number(self):
        """Gets the phone_number of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user phone number  # noqa: E501

        :return: The phone_number of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this CreateEnrollmentUserV2Model.

        Enrollment user phone number  # noqa: E501

        :param phone_number: The phone_number of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._phone_number = phone_number

    @property
    def mobile_number(self):
        """Gets the mobile_number of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user mobile number  # noqa: E501

        :return: The mobile_number of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._mobile_number

    @mobile_number.setter
    def mobile_number(self, mobile_number):
        """Sets the mobile_number of this CreateEnrollmentUserV2Model.

        Enrollment user mobile number  # noqa: E501

        :param mobile_number: The mobile_number of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._mobile_number = mobile_number

    @property
    def message_type(self):
        """Gets the message_type of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user message type, available options are None, Email and SMS.  # noqa: E501

        :return: The message_type of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this CreateEnrollmentUserV2Model.

        Enrollment user message type, available options are None, Email and SMS.  # noqa: E501

        :param message_type: The message_type of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._message_type = message_type

    @property
    def message_template_uuid(self):
        """Gets the message_template_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user message template uuid  # noqa: E501

        :return: The message_template_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._message_template_uuid

    @message_template_uuid.setter
    def message_template_uuid(self, message_template_uuid):
        """Sets the message_template_uuid of this CreateEnrollmentUserV2Model.

        Enrollment user message template uuid  # noqa: E501

        :param message_template_uuid: The message_template_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._message_template_uuid = message_template_uuid

    @property
    def enrollment_role_uuid(self):
        """Gets the enrollment_role_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user role uuid  # noqa: E501

        :return: The enrollment_role_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._enrollment_role_uuid

    @enrollment_role_uuid.setter
    def enrollment_role_uuid(self, enrollment_role_uuid):
        """Sets the enrollment_role_uuid of this CreateEnrollmentUserV2Model.

        Enrollment user role uuid  # noqa: E501

        :param enrollment_role_uuid: The enrollment_role_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._enrollment_role_uuid = enrollment_role_uuid

    @property
    def status(self):
        """Gets the status of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user status, indicating whether enrollment user is active  # noqa: E501

        :return: The status of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: bool
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateEnrollmentUserV2Model.

        Enrollment user status, indicating whether enrollment user is active  # noqa: E501

        :param status: The status of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: bool
        """

        self._status = status

    @property
    def security_type(self):
        """Gets the security_type of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user security type, available options are basic, directory and authenticationProxy.  # noqa: E501

        :return: The security_type of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._security_type

    @security_type.setter
    def security_type(self, security_type):
        """Sets the security_type of this CreateEnrollmentUserV2Model.

        Enrollment user security type, available options are basic, directory and authenticationProxy.  # noqa: E501

        :param security_type: The security_type of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and security_type is None:
            raise ValueError("Invalid value for `security_type`, must not be `None`")  # noqa: E501

        self._security_type = security_type

    @property
    def device_staging_enabled(self):
        """Gets the device_staging_enabled of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user device staging enabled  # noqa: E501

        :return: The device_staging_enabled of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: bool
        """
        return self._device_staging_enabled

    @device_staging_enabled.setter
    def device_staging_enabled(self, device_staging_enabled):
        """Sets the device_staging_enabled of this CreateEnrollmentUserV2Model.

        Enrollment user device staging enabled  # noqa: E501

        :param device_staging_enabled: The device_staging_enabled of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: bool
        """

        self._device_staging_enabled = device_staging_enabled

    @property
    def device_staging_type(self):
        """Gets the device_staging_type of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user device staging type, available options are StagingDisabled, SingleUserStagingStandard, SingleUserStagingAdvanced, MultipleUserStaging, MultipleUserStagingSingleUserStandard and MultipleUserStagingSingleUserAdvanced.  # noqa: E501

        :return: The device_staging_type of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._device_staging_type

    @device_staging_type.setter
    def device_staging_type(self, device_staging_type):
        """Sets the device_staging_type of this CreateEnrollmentUserV2Model.

        Enrollment user device staging type, available options are StagingDisabled, SingleUserStagingStandard, SingleUserStagingAdvanced, MultipleUserStaging, MultipleUserStagingSingleUserStandard and MultipleUserStagingSingleUserAdvanced.  # noqa: E501

        :param device_staging_type: The device_staging_type of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._device_staging_type = device_staging_type

    @property
    def organization_group_uuid(self):
        """Gets the organization_group_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user organization group uuid  # noqa: E501

        :return: The organization_group_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._organization_group_uuid

    @organization_group_uuid.setter
    def organization_group_uuid(self, organization_group_uuid):
        """Sets the organization_group_uuid of this CreateEnrollmentUserV2Model.

        Enrollment user organization group uuid  # noqa: E501

        :param organization_group_uuid: The organization_group_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._organization_group_uuid = organization_group_uuid

    @property
    def enrollment_organization_group_uuid(self):
        """Gets the enrollment_organization_group_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501

        Enrollment user enrollment organization group uuid  # noqa: E501

        :return: The enrollment_organization_group_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._enrollment_organization_group_uuid

    @enrollment_organization_group_uuid.setter
    def enrollment_organization_group_uuid(self, enrollment_organization_group_uuid):
        """Sets the enrollment_organization_group_uuid of this CreateEnrollmentUserV2Model.

        Enrollment user enrollment organization group uuid  # noqa: E501

        :param enrollment_organization_group_uuid: The enrollment_organization_group_uuid of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._enrollment_organization_group_uuid = enrollment_organization_group_uuid

    @property
    def custom_attribute1(self):
        """Gets the custom_attribute1 of this CreateEnrollmentUserV2Model.  # noqa: E501

        The enrollment user customAttribute1  # noqa: E501

        :return: The custom_attribute1 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._custom_attribute1

    @custom_attribute1.setter
    def custom_attribute1(self, custom_attribute1):
        """Sets the custom_attribute1 of this CreateEnrollmentUserV2Model.

        The enrollment user customAttribute1  # noqa: E501

        :param custom_attribute1: The custom_attribute1 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._custom_attribute1 = custom_attribute1

    @property
    def custom_attribute2(self):
        """Gets the custom_attribute2 of this CreateEnrollmentUserV2Model.  # noqa: E501

        The enrollment user customAttribute2  # noqa: E501

        :return: The custom_attribute2 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._custom_attribute2

    @custom_attribute2.setter
    def custom_attribute2(self, custom_attribute2):
        """Sets the custom_attribute2 of this CreateEnrollmentUserV2Model.

        The enrollment user customAttribute2  # noqa: E501

        :param custom_attribute2: The custom_attribute2 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._custom_attribute2 = custom_attribute2

    @property
    def custom_attribute3(self):
        """Gets the custom_attribute3 of this CreateEnrollmentUserV2Model.  # noqa: E501

        The enrollment user customAttribute3  # noqa: E501

        :return: The custom_attribute3 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._custom_attribute3

    @custom_attribute3.setter
    def custom_attribute3(self, custom_attribute3):
        """Sets the custom_attribute3 of this CreateEnrollmentUserV2Model.

        The enrollment user customAttribute3  # noqa: E501

        :param custom_attribute3: The custom_attribute3 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._custom_attribute3 = custom_attribute3

    @property
    def custom_attribute4(self):
        """Gets the custom_attribute4 of this CreateEnrollmentUserV2Model.  # noqa: E501

        The enrollment user customAttribute4  # noqa: E501

        :return: The custom_attribute4 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._custom_attribute4

    @custom_attribute4.setter
    def custom_attribute4(self, custom_attribute4):
        """Sets the custom_attribute4 of this CreateEnrollmentUserV2Model.

        The enrollment user customAttribute4  # noqa: E501

        :param custom_attribute4: The custom_attribute4 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._custom_attribute4 = custom_attribute4

    @property
    def custom_attribute5(self):
        """Gets the custom_attribute5 of this CreateEnrollmentUserV2Model.  # noqa: E501

        The enrollment user customAttribute5  # noqa: E501

        :return: The custom_attribute5 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._custom_attribute5

    @custom_attribute5.setter
    def custom_attribute5(self, custom_attribute5):
        """Sets the custom_attribute5 of this CreateEnrollmentUserV2Model.

        The enrollment user customAttribute5  # noqa: E501

        :param custom_attribute5: The custom_attribute5 of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._custom_attribute5 = custom_attribute5

    @property
    def aad_mapping_attribute(self):
        """Gets the aad_mapping_attribute of this CreateEnrollmentUserV2Model.  # noqa: E501

        When using the AirWatch Provisioning Adapter inside of Workspace ONE Access or using the UEM APIs to create users from 3rd party identity stores to create enrollment users, provide AadMappingAttribute to supports Win10 Azure Compliance/OOBE flow.  # noqa: E501

        :return: The aad_mapping_attribute of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._aad_mapping_attribute

    @aad_mapping_attribute.setter
    def aad_mapping_attribute(self, aad_mapping_attribute):
        """Sets the aad_mapping_attribute of this CreateEnrollmentUserV2Model.

        When using the AirWatch Provisioning Adapter inside of Workspace ONE Access or using the UEM APIs to create users from 3rd party identity stores to create enrollment users, provide AadMappingAttribute to supports Win10 Azure Compliance/OOBE flow.  # noqa: E501

        :param aad_mapping_attribute: The aad_mapping_attribute of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._aad_mapping_attribute = aad_mapping_attribute

    @property
    def department(self):
        """Gets the department of this CreateEnrollmentUserV2Model.  # noqa: E501

        The department that the enrollment user belongs to.  # noqa: E501

        :return: The department of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this CreateEnrollmentUserV2Model.

        The department that the enrollment user belongs to.  # noqa: E501

        :param department: The department of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._department = department

    @property
    def employee_identifier(self):
        """Gets the employee_identifier of this CreateEnrollmentUserV2Model.  # noqa: E501

        The employee identifier of enrollment user.  # noqa: E501

        :return: The employee_identifier of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._employee_identifier

    @employee_identifier.setter
    def employee_identifier(self, employee_identifier):
        """Sets the employee_identifier of this CreateEnrollmentUserV2Model.

        The employee identifier of enrollment user.  # noqa: E501

        :param employee_identifier: The employee_identifier of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._employee_identifier = employee_identifier

    @property
    def cost_center(self):
        """Gets the cost_center of this CreateEnrollmentUserV2Model.  # noqa: E501

        The cost center associated to the enrollment user.  # noqa: E501

        :return: The cost_center of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._cost_center

    @cost_center.setter
    def cost_center(self, cost_center):
        """Sets the cost_center of this CreateEnrollmentUserV2Model.

        The cost center associated to the enrollment user.  # noqa: E501

        :param cost_center: The cost_center of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._cost_center = cost_center

    @property
    def android_shared_device_mode(self):
        """Gets the android_shared_device_mode of this CreateEnrollmentUserV2Model.  # noqa: E501

        A value indicating the mode used to manage android shared devices. Applicable only for android platform with multi staging enabled. Defaults to Launcher.  # noqa: E501

        :return: The android_shared_device_mode of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._android_shared_device_mode

    @android_shared_device_mode.setter
    def android_shared_device_mode(self, android_shared_device_mode):
        """Sets the android_shared_device_mode of this CreateEnrollmentUserV2Model.

        A value indicating the mode used to manage android shared devices. Applicable only for android platform with multi staging enabled. Defaults to Launcher.  # noqa: E501

        :param android_shared_device_mode: The android_shared_device_mode of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._android_shared_device_mode = android_shared_device_mode

    @property
    def android_shared_device_admin_mode_passcode(self):
        """Gets the android_shared_device_admin_mode_passcode of this CreateEnrollmentUserV2Model.  # noqa: E501

        The Android Shared device admin mode passcode for native check out.  # noqa: E501

        :return: The android_shared_device_admin_mode_passcode of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: str
        """
        return self._android_shared_device_admin_mode_passcode

    @android_shared_device_admin_mode_passcode.setter
    def android_shared_device_admin_mode_passcode(self, android_shared_device_admin_mode_passcode):
        """Sets the android_shared_device_admin_mode_passcode of this CreateEnrollmentUserV2Model.

        The Android Shared device admin mode passcode for native check out.  # noqa: E501

        :param android_shared_device_admin_mode_passcode: The android_shared_device_admin_mode_passcode of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: str
        """

        self._android_shared_device_admin_mode_passcode = android_shared_device_admin_mode_passcode

    @property
    def android_shared_device_system_apps_enabled(self):
        """Gets the android_shared_device_system_apps_enabled of this CreateEnrollmentUserV2Model.  # noqa: E501

        Android Shared device system apps enabled for native check out.  # noqa: E501

        :return: The android_shared_device_system_apps_enabled of this CreateEnrollmentUserV2Model.  # noqa: E501
        :rtype: bool
        """
        return self._android_shared_device_system_apps_enabled

    @android_shared_device_system_apps_enabled.setter
    def android_shared_device_system_apps_enabled(self, android_shared_device_system_apps_enabled):
        """Sets the android_shared_device_system_apps_enabled of this CreateEnrollmentUserV2Model.

        Android Shared device system apps enabled for native check out.  # noqa: E501

        :param android_shared_device_system_apps_enabled: The android_shared_device_system_apps_enabled of this CreateEnrollmentUserV2Model.  # noqa: E501
        :type: bool
        """

        self._android_shared_device_system_apps_enabled = android_shared_device_system_apps_enabled

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateEnrollmentUserV2Model, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateEnrollmentUserV2Model):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CreateEnrollmentUserV2Model):
            return True

        return self.to_dict() != other.to_dict()

# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class AndroidEmailPayloadV2Entity(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'email_account': 'str',
        'email_address': 'str',
        'email_sync_interval': 'int',
        'senders_name': 'str',
        'email_signature': 'str',
        'set_as_default_account': 'bool',
        'max_emails_to_show': 'int',
        'allow_attachments': 'bool',
        'maximum_attachment_size_mb': 'str',
        'use_ssl': 'bool',
        'use_tls': 'bool',
        'incoming_mail_server_protocol': 'str',
        'incoming_mail_server_host_name': 'str',
        'incoming_mail_server_port_number': 'str',
        'incoming_mail_server_username': 'str',
        'incoming_mail_server_password': 'str',
        'incoming_mail_server_path_prefix': 'str',
        'ignore_ssl_errors_for_incoming_email': 'bool',
        'outgoing_mail_server_use_ssl': 'bool',
        'outgoing_mail_server_use_tls': 'bool',
        'outgoing_mail_server_protocol': 'str',
        'outgoing_mail_server_hostname': 'str',
        'outgoing_mail_server_port_number': 'str',
        'outgoing_mail_server_username': 'str',
        'outgoing_mail_server_password': 'str',
        'outgoing_mail_server_path_prefix': 'str',
        'ignore_ssl_errors_for_outgoing_email': 'bool'
    }

    attribute_map = {
        'email_account': 'EmailAccount',
        'email_address': 'EmailAddress',
        'email_sync_interval': 'EmailSyncInterval',
        'senders_name': 'SendersName',
        'email_signature': 'EmailSignature',
        'set_as_default_account': 'SetAsDefaultAccount',
        'max_emails_to_show': 'MaxEmailsToShow',
        'allow_attachments': 'AllowAttachments',
        'maximum_attachment_size_mb': 'MaximumAttachmentSizeMb',
        'use_ssl': 'UseSSL',
        'use_tls': 'UseTLS',
        'incoming_mail_server_protocol': 'IncomingMailServerProtocol',
        'incoming_mail_server_host_name': 'IncomingMailServerHostName',
        'incoming_mail_server_port_number': 'IncomingMailServerPortNumber',
        'incoming_mail_server_username': 'IncomingMailServerUsername',
        'incoming_mail_server_password': 'IncomingMailServerPassword',
        'incoming_mail_server_path_prefix': 'IncomingMailServerPathPrefix',
        'ignore_ssl_errors_for_incoming_email': 'IgnoreSSLErrorsForIncomingEmail',
        'outgoing_mail_server_use_ssl': 'OutgoingMailServerUseSSL',
        'outgoing_mail_server_use_tls': 'OutgoingMailServerUseTLS',
        'outgoing_mail_server_protocol': 'OutgoingMailServerProtocol',
        'outgoing_mail_server_hostname': 'OutgoingMailServerHostname',
        'outgoing_mail_server_port_number': 'OutgoingMailServerPortNumber',
        'outgoing_mail_server_username': 'OutgoingMailServerUsername',
        'outgoing_mail_server_password': 'OutgoingMailServerPassword',
        'outgoing_mail_server_path_prefix': 'OutgoingMailServerPathPrefix',
        'ignore_ssl_errors_for_outgoing_email': 'IgnoreSSLErrorsForOutgoingEmail'
    }

    def __init__(self, email_account=None, email_address=None, email_sync_interval=None, senders_name=None, email_signature=None, set_as_default_account=None, max_emails_to_show=None, allow_attachments=None, maximum_attachment_size_mb=None, use_ssl=None, use_tls=None, incoming_mail_server_protocol=None, incoming_mail_server_host_name=None, incoming_mail_server_port_number=None, incoming_mail_server_username=None, incoming_mail_server_password=None, incoming_mail_server_path_prefix=None, ignore_ssl_errors_for_incoming_email=None, outgoing_mail_server_use_ssl=None, outgoing_mail_server_use_tls=None, outgoing_mail_server_protocol=None, outgoing_mail_server_hostname=None, outgoing_mail_server_port_number=None, outgoing_mail_server_username=None, outgoing_mail_server_password=None, outgoing_mail_server_path_prefix=None, ignore_ssl_errors_for_outgoing_email=None, _configuration=None):  # noqa: E501
        """AndroidEmailPayloadV2Entity - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._email_account = None
        self._email_address = None
        self._email_sync_interval = None
        self._senders_name = None
        self._email_signature = None
        self._set_as_default_account = None
        self._max_emails_to_show = None
        self._allow_attachments = None
        self._maximum_attachment_size_mb = None
        self._use_ssl = None
        self._use_tls = None
        self._incoming_mail_server_protocol = None
        self._incoming_mail_server_host_name = None
        self._incoming_mail_server_port_number = None
        self._incoming_mail_server_username = None
        self._incoming_mail_server_password = None
        self._incoming_mail_server_path_prefix = None
        self._ignore_ssl_errors_for_incoming_email = None
        self._outgoing_mail_server_use_ssl = None
        self._outgoing_mail_server_use_tls = None
        self._outgoing_mail_server_protocol = None
        self._outgoing_mail_server_hostname = None
        self._outgoing_mail_server_port_number = None
        self._outgoing_mail_server_username = None
        self._outgoing_mail_server_password = None
        self._outgoing_mail_server_path_prefix = None
        self._ignore_ssl_errors_for_outgoing_email = None
        self.discriminator = None

        if email_account is not None:
            self.email_account = email_account
        if email_address is not None:
            self.email_address = email_address
        if email_sync_interval is not None:
            self.email_sync_interval = email_sync_interval
        if senders_name is not None:
            self.senders_name = senders_name
        if email_signature is not None:
            self.email_signature = email_signature
        if set_as_default_account is not None:
            self.set_as_default_account = set_as_default_account
        if max_emails_to_show is not None:
            self.max_emails_to_show = max_emails_to_show
        if allow_attachments is not None:
            self.allow_attachments = allow_attachments
        if maximum_attachment_size_mb is not None:
            self.maximum_attachment_size_mb = maximum_attachment_size_mb
        if use_ssl is not None:
            self.use_ssl = use_ssl
        if use_tls is not None:
            self.use_tls = use_tls
        if incoming_mail_server_protocol is not None:
            self.incoming_mail_server_protocol = incoming_mail_server_protocol
        if incoming_mail_server_host_name is not None:
            self.incoming_mail_server_host_name = incoming_mail_server_host_name
        if incoming_mail_server_port_number is not None:
            self.incoming_mail_server_port_number = incoming_mail_server_port_number
        if incoming_mail_server_username is not None:
            self.incoming_mail_server_username = incoming_mail_server_username
        if incoming_mail_server_password is not None:
            self.incoming_mail_server_password = incoming_mail_server_password
        if incoming_mail_server_path_prefix is not None:
            self.incoming_mail_server_path_prefix = incoming_mail_server_path_prefix
        if ignore_ssl_errors_for_incoming_email is not None:
            self.ignore_ssl_errors_for_incoming_email = ignore_ssl_errors_for_incoming_email
        if outgoing_mail_server_use_ssl is not None:
            self.outgoing_mail_server_use_ssl = outgoing_mail_server_use_ssl
        if outgoing_mail_server_use_tls is not None:
            self.outgoing_mail_server_use_tls = outgoing_mail_server_use_tls
        if outgoing_mail_server_protocol is not None:
            self.outgoing_mail_server_protocol = outgoing_mail_server_protocol
        if outgoing_mail_server_hostname is not None:
            self.outgoing_mail_server_hostname = outgoing_mail_server_hostname
        if outgoing_mail_server_port_number is not None:
            self.outgoing_mail_server_port_number = outgoing_mail_server_port_number
        if outgoing_mail_server_username is not None:
            self.outgoing_mail_server_username = outgoing_mail_server_username
        if outgoing_mail_server_password is not None:
            self.outgoing_mail_server_password = outgoing_mail_server_password
        if outgoing_mail_server_path_prefix is not None:
            self.outgoing_mail_server_path_prefix = outgoing_mail_server_path_prefix
        if ignore_ssl_errors_for_outgoing_email is not None:
            self.ignore_ssl_errors_for_outgoing_email = ignore_ssl_errors_for_outgoing_email

    @property
    def email_account(self):
        """Gets the email_account of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the name of the email account.  # noqa: E501

        :return: The email_account of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._email_account

    @email_account.setter
    def email_account(self, email_account):
        """Sets the email_account of this AndroidEmailPayloadV2Entity.

        Gets or sets the name of the email account.  # noqa: E501

        :param email_account: The email_account of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._email_account = email_account

    @property
    def email_address(self):
        """Gets the email_address of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the email address.  # noqa: E501

        :return: The email_address of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this AndroidEmailPayloadV2Entity.

        Gets or sets the email address.  # noqa: E501

        :param email_address: The email_address of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._email_address = email_address

    @property
    def email_sync_interval(self):
        """Gets the email_sync_interval of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the email synchronize interval.  # noqa: E501

        :return: The email_sync_interval of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: int
        """
        return self._email_sync_interval

    @email_sync_interval.setter
    def email_sync_interval(self, email_sync_interval):
        """Sets the email_sync_interval of this AndroidEmailPayloadV2Entity.

        Gets or sets the email synchronize interval.  # noqa: E501

        :param email_sync_interval: The email_sync_interval of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: int
        """

        self._email_sync_interval = email_sync_interval

    @property
    def senders_name(self):
        """Gets the senders_name of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the name of the email sender.  # noqa: E501

        :return: The senders_name of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._senders_name

    @senders_name.setter
    def senders_name(self, senders_name):
        """Sets the senders_name of this AndroidEmailPayloadV2Entity.

        Gets or sets the name of the email sender.  # noqa: E501

        :param senders_name: The senders_name of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._senders_name = senders_name

    @property
    def email_signature(self):
        """Gets the email_signature of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the email signature.  # noqa: E501

        :return: The email_signature of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._email_signature

    @email_signature.setter
    def email_signature(self, email_signature):
        """Sets the email_signature of this AndroidEmailPayloadV2Entity.

        Gets or sets the email signature.  # noqa: E501

        :param email_signature: The email_signature of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._email_signature = email_signature

    @property
    def set_as_default_account(self):
        """Gets the set_as_default_account of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets a value indicating whether [email default account].  # noqa: E501

        :return: The set_as_default_account of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: bool
        """
        return self._set_as_default_account

    @set_as_default_account.setter
    def set_as_default_account(self, set_as_default_account):
        """Sets the set_as_default_account of this AndroidEmailPayloadV2Entity.

        Gets or sets a value indicating whether [email default account].  # noqa: E501

        :param set_as_default_account: The set_as_default_account of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: bool
        """

        self._set_as_default_account = set_as_default_account

    @property
    def max_emails_to_show(self):
        """Gets the max_emails_to_show of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the maximum mails to show.  # noqa: E501

        :return: The max_emails_to_show of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: int
        """
        return self._max_emails_to_show

    @max_emails_to_show.setter
    def max_emails_to_show(self, max_emails_to_show):
        """Sets the max_emails_to_show of this AndroidEmailPayloadV2Entity.

        Gets or sets the maximum mails to show.  # noqa: E501

        :param max_emails_to_show: The max_emails_to_show of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: int
        """

        self._max_emails_to_show = max_emails_to_show

    @property
    def allow_attachments(self):
        """Gets the allow_attachments of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets a value indicating whether [enabled attachment].  # noqa: E501

        :return: The allow_attachments of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: bool
        """
        return self._allow_attachments

    @allow_attachments.setter
    def allow_attachments(self, allow_attachments):
        """Sets the allow_attachments of this AndroidEmailPayloadV2Entity.

        Gets or sets a value indicating whether [enabled attachment].  # noqa: E501

        :param allow_attachments: The allow_attachments of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: bool
        """

        self._allow_attachments = allow_attachments

    @property
    def maximum_attachment_size_mb(self):
        """Gets the maximum_attachment_size_mb of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the maximum size of the attachment.  # noqa: E501

        :return: The maximum_attachment_size_mb of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._maximum_attachment_size_mb

    @maximum_attachment_size_mb.setter
    def maximum_attachment_size_mb(self, maximum_attachment_size_mb):
        """Sets the maximum_attachment_size_mb of this AndroidEmailPayloadV2Entity.

        Gets or sets the maximum size of the attachment.  # noqa: E501

        :param maximum_attachment_size_mb: The maximum_attachment_size_mb of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._maximum_attachment_size_mb = maximum_attachment_size_mb

    @property
    def use_ssl(self):
        """Gets the use_ssl of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets a value indicating whether [incoming mail server use SSL].  # noqa: E501

        :return: The use_ssl of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: bool
        """
        return self._use_ssl

    @use_ssl.setter
    def use_ssl(self, use_ssl):
        """Sets the use_ssl of this AndroidEmailPayloadV2Entity.

        Gets or sets a value indicating whether [incoming mail server use SSL].  # noqa: E501

        :param use_ssl: The use_ssl of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: bool
        """

        self._use_ssl = use_ssl

    @property
    def use_tls(self):
        """Gets the use_tls of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets a value indicating whether [incoming mail server use TLS].  # noqa: E501

        :return: The use_tls of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: bool
        """
        return self._use_tls

    @use_tls.setter
    def use_tls(self, use_tls):
        """Sets the use_tls of this AndroidEmailPayloadV2Entity.

        Gets or sets a value indicating whether [incoming mail server use TLS].  # noqa: E501

        :param use_tls: The use_tls of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: bool
        """

        self._use_tls = use_tls

    @property
    def incoming_mail_server_protocol(self):
        """Gets the incoming_mail_server_protocol of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the incoming mail server protocol.  # noqa: E501

        :return: The incoming_mail_server_protocol of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._incoming_mail_server_protocol

    @incoming_mail_server_protocol.setter
    def incoming_mail_server_protocol(self, incoming_mail_server_protocol):
        """Sets the incoming_mail_server_protocol of this AndroidEmailPayloadV2Entity.

        Gets or sets the incoming mail server protocol.  # noqa: E501

        :param incoming_mail_server_protocol: The incoming_mail_server_protocol of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._incoming_mail_server_protocol = incoming_mail_server_protocol

    @property
    def incoming_mail_server_host_name(self):
        """Gets the incoming_mail_server_host_name of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the name of the incoming mail server host.  # noqa: E501

        :return: The incoming_mail_server_host_name of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._incoming_mail_server_host_name

    @incoming_mail_server_host_name.setter
    def incoming_mail_server_host_name(self, incoming_mail_server_host_name):
        """Sets the incoming_mail_server_host_name of this AndroidEmailPayloadV2Entity.

        Gets or sets the name of the incoming mail server host.  # noqa: E501

        :param incoming_mail_server_host_name: The incoming_mail_server_host_name of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._incoming_mail_server_host_name = incoming_mail_server_host_name

    @property
    def incoming_mail_server_port_number(self):
        """Gets the incoming_mail_server_port_number of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the incoming mail server port number.  # noqa: E501

        :return: The incoming_mail_server_port_number of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._incoming_mail_server_port_number

    @incoming_mail_server_port_number.setter
    def incoming_mail_server_port_number(self, incoming_mail_server_port_number):
        """Sets the incoming_mail_server_port_number of this AndroidEmailPayloadV2Entity.

        Gets or sets the incoming mail server port number.  # noqa: E501

        :param incoming_mail_server_port_number: The incoming_mail_server_port_number of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._incoming_mail_server_port_number = incoming_mail_server_port_number

    @property
    def incoming_mail_server_username(self):
        """Gets the incoming_mail_server_username of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the incoming mail server username.  # noqa: E501

        :return: The incoming_mail_server_username of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._incoming_mail_server_username

    @incoming_mail_server_username.setter
    def incoming_mail_server_username(self, incoming_mail_server_username):
        """Sets the incoming_mail_server_username of this AndroidEmailPayloadV2Entity.

        Gets or sets the incoming mail server username.  # noqa: E501

        :param incoming_mail_server_username: The incoming_mail_server_username of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._incoming_mail_server_username = incoming_mail_server_username

    @property
    def incoming_mail_server_password(self):
        """Gets the incoming_mail_server_password of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the incoming mail server password.  # noqa: E501

        :return: The incoming_mail_server_password of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._incoming_mail_server_password

    @incoming_mail_server_password.setter
    def incoming_mail_server_password(self, incoming_mail_server_password):
        """Sets the incoming_mail_server_password of this AndroidEmailPayloadV2Entity.

        Gets or sets the incoming mail server password.  # noqa: E501

        :param incoming_mail_server_password: The incoming_mail_server_password of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._incoming_mail_server_password = incoming_mail_server_password

    @property
    def incoming_mail_server_path_prefix(self):
        """Gets the incoming_mail_server_path_prefix of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the incoming mail server path prefix.  # noqa: E501

        :return: The incoming_mail_server_path_prefix of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._incoming_mail_server_path_prefix

    @incoming_mail_server_path_prefix.setter
    def incoming_mail_server_path_prefix(self, incoming_mail_server_path_prefix):
        """Sets the incoming_mail_server_path_prefix of this AndroidEmailPayloadV2Entity.

        Gets or sets the incoming mail server path prefix.  # noqa: E501

        :param incoming_mail_server_path_prefix: The incoming_mail_server_path_prefix of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._incoming_mail_server_path_prefix = incoming_mail_server_path_prefix

    @property
    def ignore_ssl_errors_for_incoming_email(self):
        """Gets the ignore_ssl_errors_for_incoming_email of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets a value indicating whether [incoming mail server accept certs].  # noqa: E501

        :return: The ignore_ssl_errors_for_incoming_email of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: bool
        """
        return self._ignore_ssl_errors_for_incoming_email

    @ignore_ssl_errors_for_incoming_email.setter
    def ignore_ssl_errors_for_incoming_email(self, ignore_ssl_errors_for_incoming_email):
        """Sets the ignore_ssl_errors_for_incoming_email of this AndroidEmailPayloadV2Entity.

        Gets or sets a value indicating whether [incoming mail server accept certs].  # noqa: E501

        :param ignore_ssl_errors_for_incoming_email: The ignore_ssl_errors_for_incoming_email of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: bool
        """

        self._ignore_ssl_errors_for_incoming_email = ignore_ssl_errors_for_incoming_email

    @property
    def outgoing_mail_server_use_ssl(self):
        """Gets the outgoing_mail_server_use_ssl of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets a value indicating whether [outgoing mail server use SSL].  # noqa: E501

        :return: The outgoing_mail_server_use_ssl of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: bool
        """
        return self._outgoing_mail_server_use_ssl

    @outgoing_mail_server_use_ssl.setter
    def outgoing_mail_server_use_ssl(self, outgoing_mail_server_use_ssl):
        """Sets the outgoing_mail_server_use_ssl of this AndroidEmailPayloadV2Entity.

        Gets or sets a value indicating whether [outgoing mail server use SSL].  # noqa: E501

        :param outgoing_mail_server_use_ssl: The outgoing_mail_server_use_ssl of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: bool
        """

        self._outgoing_mail_server_use_ssl = outgoing_mail_server_use_ssl

    @property
    def outgoing_mail_server_use_tls(self):
        """Gets the outgoing_mail_server_use_tls of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets a value indicating whether [outgoing mail server use TLS].  # noqa: E501

        :return: The outgoing_mail_server_use_tls of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: bool
        """
        return self._outgoing_mail_server_use_tls

    @outgoing_mail_server_use_tls.setter
    def outgoing_mail_server_use_tls(self, outgoing_mail_server_use_tls):
        """Sets the outgoing_mail_server_use_tls of this AndroidEmailPayloadV2Entity.

        Gets or sets a value indicating whether [outgoing mail server use TLS].  # noqa: E501

        :param outgoing_mail_server_use_tls: The outgoing_mail_server_use_tls of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: bool
        """

        self._outgoing_mail_server_use_tls = outgoing_mail_server_use_tls

    @property
    def outgoing_mail_server_protocol(self):
        """Gets the outgoing_mail_server_protocol of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the outgoing mail server protocol.  # noqa: E501

        :return: The outgoing_mail_server_protocol of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._outgoing_mail_server_protocol

    @outgoing_mail_server_protocol.setter
    def outgoing_mail_server_protocol(self, outgoing_mail_server_protocol):
        """Sets the outgoing_mail_server_protocol of this AndroidEmailPayloadV2Entity.

        Gets or sets the outgoing mail server protocol.  # noqa: E501

        :param outgoing_mail_server_protocol: The outgoing_mail_server_protocol of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._outgoing_mail_server_protocol = outgoing_mail_server_protocol

    @property
    def outgoing_mail_server_hostname(self):
        """Gets the outgoing_mail_server_hostname of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the outgoing mail server hostname.  # noqa: E501

        :return: The outgoing_mail_server_hostname of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._outgoing_mail_server_hostname

    @outgoing_mail_server_hostname.setter
    def outgoing_mail_server_hostname(self, outgoing_mail_server_hostname):
        """Sets the outgoing_mail_server_hostname of this AndroidEmailPayloadV2Entity.

        Gets or sets the outgoing mail server hostname.  # noqa: E501

        :param outgoing_mail_server_hostname: The outgoing_mail_server_hostname of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._outgoing_mail_server_hostname = outgoing_mail_server_hostname

    @property
    def outgoing_mail_server_port_number(self):
        """Gets the outgoing_mail_server_port_number of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the outgoing mail server port number.  # noqa: E501

        :return: The outgoing_mail_server_port_number of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._outgoing_mail_server_port_number

    @outgoing_mail_server_port_number.setter
    def outgoing_mail_server_port_number(self, outgoing_mail_server_port_number):
        """Sets the outgoing_mail_server_port_number of this AndroidEmailPayloadV2Entity.

        Gets or sets the outgoing mail server port number.  # noqa: E501

        :param outgoing_mail_server_port_number: The outgoing_mail_server_port_number of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._outgoing_mail_server_port_number = outgoing_mail_server_port_number

    @property
    def outgoing_mail_server_username(self):
        """Gets the outgoing_mail_server_username of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the outgoing mail server username.  # noqa: E501

        :return: The outgoing_mail_server_username of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._outgoing_mail_server_username

    @outgoing_mail_server_username.setter
    def outgoing_mail_server_username(self, outgoing_mail_server_username):
        """Sets the outgoing_mail_server_username of this AndroidEmailPayloadV2Entity.

        Gets or sets the outgoing mail server username.  # noqa: E501

        :param outgoing_mail_server_username: The outgoing_mail_server_username of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._outgoing_mail_server_username = outgoing_mail_server_username

    @property
    def outgoing_mail_server_password(self):
        """Gets the outgoing_mail_server_password of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the outgoing mail server password.  # noqa: E501

        :return: The outgoing_mail_server_password of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._outgoing_mail_server_password

    @outgoing_mail_server_password.setter
    def outgoing_mail_server_password(self, outgoing_mail_server_password):
        """Sets the outgoing_mail_server_password of this AndroidEmailPayloadV2Entity.

        Gets or sets the outgoing mail server password.  # noqa: E501

        :param outgoing_mail_server_password: The outgoing_mail_server_password of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._outgoing_mail_server_password = outgoing_mail_server_password

    @property
    def outgoing_mail_server_path_prefix(self):
        """Gets the outgoing_mail_server_path_prefix of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets the outgoing mail server path prefix.  # noqa: E501

        :return: The outgoing_mail_server_path_prefix of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: str
        """
        return self._outgoing_mail_server_path_prefix

    @outgoing_mail_server_path_prefix.setter
    def outgoing_mail_server_path_prefix(self, outgoing_mail_server_path_prefix):
        """Sets the outgoing_mail_server_path_prefix of this AndroidEmailPayloadV2Entity.

        Gets or sets the outgoing mail server path prefix.  # noqa: E501

        :param outgoing_mail_server_path_prefix: The outgoing_mail_server_path_prefix of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: str
        """

        self._outgoing_mail_server_path_prefix = outgoing_mail_server_path_prefix

    @property
    def ignore_ssl_errors_for_outgoing_email(self):
        """Gets the ignore_ssl_errors_for_outgoing_email of this AndroidEmailPayloadV2Entity.  # noqa: E501

        Gets or sets a value indicating whether [outgoing mail server accept certs].  # noqa: E501

        :return: The ignore_ssl_errors_for_outgoing_email of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :rtype: bool
        """
        return self._ignore_ssl_errors_for_outgoing_email

    @ignore_ssl_errors_for_outgoing_email.setter
    def ignore_ssl_errors_for_outgoing_email(self, ignore_ssl_errors_for_outgoing_email):
        """Sets the ignore_ssl_errors_for_outgoing_email of this AndroidEmailPayloadV2Entity.

        Gets or sets a value indicating whether [outgoing mail server accept certs].  # noqa: E501

        :param ignore_ssl_errors_for_outgoing_email: The ignore_ssl_errors_for_outgoing_email of this AndroidEmailPayloadV2Entity.  # noqa: E501
        :type: bool
        """

        self._ignore_ssl_errors_for_outgoing_email = ignore_ssl_errors_for_outgoing_email

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AndroidEmailPayloadV2Entity, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AndroidEmailPayloadV2Entity):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AndroidEmailPayloadV2Entity):
            return True

        return self.to_dict() != other.to_dict()

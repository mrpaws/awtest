# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class AndroidDeviceProfileV2Entity(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'general': 'GeneralPayloadV2Entity',
        'passcode': 'AndroidPasscodePayloadV2Entity_',
        'date_time': 'AndroidDateTimePayloadV2Entity_',
        'wifi_list': 'list[AndroidWifiPayloadV2Entity]',
        'credentials_list': 'list[AndroidCredentialsPayloadV2Entity]',
        'email_list': 'list[AndroidEmailPayloadV2Entity]',
        'restrictions': 'AndroidRestrictionsPayloadV2Entity_',
        'vpn_list': 'list[AndroidVpnPayloadV2Entity]',
        'custom_settings_list': 'list[AndroidCustomSettingsPayloadV2Entity]',
        'exchange_active_sync': 'AndroidEASPayloadV2Entity_',
        'android_for_work_system_updates': 'AndroidForWorkSystemUpdatesV2Entity_',
        'android_for_work_exchange_active_sync': 'AndroidForWorkEASPayloadV2Entity_',
        'android_for_work_chrome_browser': 'AndroidForWorkChromeBrowserPayloadV2Entity_',
        'android_for_work_restrictions': 'AndroidForWorkRestrictionsPayloadV2Entity_',
        'android_for_work_vpn': 'AndroidForWorkVPNPayloadV2Entity_',
        'android_for_work_passcode': 'AndroidForWorkPasscodePayloadV2Entity_',
        'android_for_work_permissions': 'AndroidForWorkPermissionsPayloadV2Entity_',
        'android_for_work_single_app_mode': 'AndroidForWorkSingleAppModePayloadV2Entity_',
        'android_for_work_auto_update': 'AndroidForWorkAutoUpdatePayloadV2Entity_',
        'android_for_work_custom_messages': 'AndroidForWorkCustomMessagesPayloadV2Entity_',
        'android_for_work_application_control': 'AndroidForWorkApplicationControlPayloadV2Entity_',
        'android_container_passcode': 'AndroidContainerPasscodePayloadV2Entity_',
        'android_container_browser': 'AndroidContainerBrowserPayloadV2Entity_',
        'android_container_eas': 'AndroidContainerEasPayloadV2Entity_',
        'android_container_email': 'AndroidContainerEmailPayloadV2Entity_',
        'android_container_vpn_list': 'list[AndroidConatinerVPNPayloadV2Entity_]',
        'android_container_credentials_list': 'list[AndroidContainerCredentialsPayloadV2Entity_]',
        'bookmark_settings': 'AndroidBookmarkSettingsPayloadV2Entity_',
        'android_container_single_sign_on': 'AndroidContainerSingleSignOnPayloadV2Entity_',
        'android_container_smart_card': 'AndroidContainerSmartCardPayloadV2Entity_',
        'android_container_app_control': 'AndroidContainerAppControlPayloadV2Entity_',
        'android_container_book_mark': 'AndroidContainerBookmarkPayloadV2Entity_',
        'android_application_control': 'AndroidApplicationControlPayloadV2Entity_',
        'android_kiosk': 'AndroidKioskPayloadV2Entity_',
        'android_for_work_kiosk': 'AndroidForWorkKioskPayloadV2Entity_',
        'android_for_work_zebra_mx': 'AndroidForWorkZebraMxPayloadV2Entity_',
        'android_for_work_samsung_date_time': 'AndroidForWorkSamsungDateTimePayloadV2Entity_',
        'android_for_work_samsung_apn': 'AndroidForWorkSamsungAPNPayloadV2Entity_',
        'android_for_work_samsung_firewall': 'AndroidForWorkSamsungFirewallPayloadV2Entity_',
        'android_for_work_factory_reset_protection': 'AndroidForWorkFactoryResetProtectionPayloadV2Entity_',
        'android_for_work_credentials_list': 'list[AndroidForWorkCredentialsPayloadV2Entity]',
        'android_for_work_wifi_list': 'list[AndroidForWorkWifiPayloadV2Entity]',
        'android_for_work_custom_settings_list': 'list[AndroidForWorkCustomSettingsPayloadV2Entity]',
        'android_for_work_proxy': 'AndroidForWorkProxyPayloadV2Entity_'
    }

    attribute_map = {
        'general': 'General',
        'passcode': 'Passcode',
        'date_time': 'DateTime',
        'wifi_list': 'WifiList',
        'credentials_list': 'CredentialsList',
        'email_list': 'EmailList',
        'restrictions': 'Restrictions',
        'vpn_list': 'VpnList',
        'custom_settings_list': 'CustomSettingsList',
        'exchange_active_sync': 'ExchangeActiveSync',
        'android_for_work_system_updates': 'AndroidForWorkSystemUpdates',
        'android_for_work_exchange_active_sync': 'AndroidForWorkExchangeActiveSync',
        'android_for_work_chrome_browser': 'AndroidForWorkChromeBrowser',
        'android_for_work_restrictions': 'AndroidForWorkRestrictions',
        'android_for_work_vpn': 'AndroidForWorkVpn',
        'android_for_work_passcode': 'AndroidForWorkPasscode',
        'android_for_work_permissions': 'AndroidForWorkPermissions',
        'android_for_work_single_app_mode': 'AndroidForWorkSingleAppMode',
        'android_for_work_auto_update': 'AndroidForWorkAutoUpdate',
        'android_for_work_custom_messages': 'AndroidForWorkCustomMessages',
        'android_for_work_application_control': 'AndroidForWorkApplicationControl',
        'android_container_passcode': 'AndroidContainerPasscode',
        'android_container_browser': 'AndroidContainerBrowser',
        'android_container_eas': 'AndroidContainerEas',
        'android_container_email': 'AndroidContainerEmail',
        'android_container_vpn_list': 'AndroidContainerVpnList',
        'android_container_credentials_list': 'AndroidContainerCredentialsList',
        'bookmark_settings': 'BookmarkSettings',
        'android_container_single_sign_on': 'AndroidContainerSingleSignOn',
        'android_container_smart_card': 'AndroidContainerSmartCard',
        'android_container_app_control': 'AndroidContainerAppControl',
        'android_container_book_mark': 'AndroidContainerBookMark',
        'android_application_control': 'AndroidApplicationControl',
        'android_kiosk': 'AndroidKiosk',
        'android_for_work_kiosk': 'AndroidForWorkKiosk',
        'android_for_work_zebra_mx': 'AndroidForWorkZebraMx',
        'android_for_work_samsung_date_time': 'AndroidForWorkSamsungDateTime',
        'android_for_work_samsung_apn': 'AndroidForWorkSamsungAPN',
        'android_for_work_samsung_firewall': 'AndroidForWorkSamsungFirewall',
        'android_for_work_factory_reset_protection': 'AndroidForWorkFactoryResetProtection',
        'android_for_work_credentials_list': 'AndroidForWorkCredentialsList',
        'android_for_work_wifi_list': 'AndroidForWorkWifiList',
        'android_for_work_custom_settings_list': 'AndroidForWorkCustomSettingsList',
        'android_for_work_proxy': 'AndroidForWorkProxy'
    }

    def __init__(self, general=None, passcode=None, date_time=None, wifi_list=None, credentials_list=None, email_list=None, restrictions=None, vpn_list=None, custom_settings_list=None, exchange_active_sync=None, android_for_work_system_updates=None, android_for_work_exchange_active_sync=None, android_for_work_chrome_browser=None, android_for_work_restrictions=None, android_for_work_vpn=None, android_for_work_passcode=None, android_for_work_permissions=None, android_for_work_single_app_mode=None, android_for_work_auto_update=None, android_for_work_custom_messages=None, android_for_work_application_control=None, android_container_passcode=None, android_container_browser=None, android_container_eas=None, android_container_email=None, android_container_vpn_list=None, android_container_credentials_list=None, bookmark_settings=None, android_container_single_sign_on=None, android_container_smart_card=None, android_container_app_control=None, android_container_book_mark=None, android_application_control=None, android_kiosk=None, android_for_work_kiosk=None, android_for_work_zebra_mx=None, android_for_work_samsung_date_time=None, android_for_work_samsung_apn=None, android_for_work_samsung_firewall=None, android_for_work_factory_reset_protection=None, android_for_work_credentials_list=None, android_for_work_wifi_list=None, android_for_work_custom_settings_list=None, android_for_work_proxy=None, _configuration=None):  # noqa: E501
        """AndroidDeviceProfileV2Entity - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._general = None
        self._passcode = None
        self._date_time = None
        self._wifi_list = None
        self._credentials_list = None
        self._email_list = None
        self._restrictions = None
        self._vpn_list = None
        self._custom_settings_list = None
        self._exchange_active_sync = None
        self._android_for_work_system_updates = None
        self._android_for_work_exchange_active_sync = None
        self._android_for_work_chrome_browser = None
        self._android_for_work_restrictions = None
        self._android_for_work_vpn = None
        self._android_for_work_passcode = None
        self._android_for_work_permissions = None
        self._android_for_work_single_app_mode = None
        self._android_for_work_auto_update = None
        self._android_for_work_custom_messages = None
        self._android_for_work_application_control = None
        self._android_container_passcode = None
        self._android_container_browser = None
        self._android_container_eas = None
        self._android_container_email = None
        self._android_container_vpn_list = None
        self._android_container_credentials_list = None
        self._bookmark_settings = None
        self._android_container_single_sign_on = None
        self._android_container_smart_card = None
        self._android_container_app_control = None
        self._android_container_book_mark = None
        self._android_application_control = None
        self._android_kiosk = None
        self._android_for_work_kiosk = None
        self._android_for_work_zebra_mx = None
        self._android_for_work_samsung_date_time = None
        self._android_for_work_samsung_apn = None
        self._android_for_work_samsung_firewall = None
        self._android_for_work_factory_reset_protection = None
        self._android_for_work_credentials_list = None
        self._android_for_work_wifi_list = None
        self._android_for_work_custom_settings_list = None
        self._android_for_work_proxy = None
        self.discriminator = None

        if general is not None:
            self.general = general
        if passcode is not None:
            self.passcode = passcode
        if date_time is not None:
            self.date_time = date_time
        if wifi_list is not None:
            self.wifi_list = wifi_list
        if credentials_list is not None:
            self.credentials_list = credentials_list
        if email_list is not None:
            self.email_list = email_list
        if restrictions is not None:
            self.restrictions = restrictions
        if vpn_list is not None:
            self.vpn_list = vpn_list
        if custom_settings_list is not None:
            self.custom_settings_list = custom_settings_list
        if exchange_active_sync is not None:
            self.exchange_active_sync = exchange_active_sync
        if android_for_work_system_updates is not None:
            self.android_for_work_system_updates = android_for_work_system_updates
        if android_for_work_exchange_active_sync is not None:
            self.android_for_work_exchange_active_sync = android_for_work_exchange_active_sync
        if android_for_work_chrome_browser is not None:
            self.android_for_work_chrome_browser = android_for_work_chrome_browser
        if android_for_work_restrictions is not None:
            self.android_for_work_restrictions = android_for_work_restrictions
        if android_for_work_vpn is not None:
            self.android_for_work_vpn = android_for_work_vpn
        if android_for_work_passcode is not None:
            self.android_for_work_passcode = android_for_work_passcode
        if android_for_work_permissions is not None:
            self.android_for_work_permissions = android_for_work_permissions
        if android_for_work_single_app_mode is not None:
            self.android_for_work_single_app_mode = android_for_work_single_app_mode
        if android_for_work_auto_update is not None:
            self.android_for_work_auto_update = android_for_work_auto_update
        if android_for_work_custom_messages is not None:
            self.android_for_work_custom_messages = android_for_work_custom_messages
        if android_for_work_application_control is not None:
            self.android_for_work_application_control = android_for_work_application_control
        if android_container_passcode is not None:
            self.android_container_passcode = android_container_passcode
        if android_container_browser is not None:
            self.android_container_browser = android_container_browser
        if android_container_eas is not None:
            self.android_container_eas = android_container_eas
        if android_container_email is not None:
            self.android_container_email = android_container_email
        if android_container_vpn_list is not None:
            self.android_container_vpn_list = android_container_vpn_list
        if android_container_credentials_list is not None:
            self.android_container_credentials_list = android_container_credentials_list
        if bookmark_settings is not None:
            self.bookmark_settings = bookmark_settings
        if android_container_single_sign_on is not None:
            self.android_container_single_sign_on = android_container_single_sign_on
        if android_container_smart_card is not None:
            self.android_container_smart_card = android_container_smart_card
        if android_container_app_control is not None:
            self.android_container_app_control = android_container_app_control
        if android_container_book_mark is not None:
            self.android_container_book_mark = android_container_book_mark
        if android_application_control is not None:
            self.android_application_control = android_application_control
        if android_kiosk is not None:
            self.android_kiosk = android_kiosk
        if android_for_work_kiosk is not None:
            self.android_for_work_kiosk = android_for_work_kiosk
        if android_for_work_zebra_mx is not None:
            self.android_for_work_zebra_mx = android_for_work_zebra_mx
        if android_for_work_samsung_date_time is not None:
            self.android_for_work_samsung_date_time = android_for_work_samsung_date_time
        if android_for_work_samsung_apn is not None:
            self.android_for_work_samsung_apn = android_for_work_samsung_apn
        if android_for_work_samsung_firewall is not None:
            self.android_for_work_samsung_firewall = android_for_work_samsung_firewall
        if android_for_work_factory_reset_protection is not None:
            self.android_for_work_factory_reset_protection = android_for_work_factory_reset_protection
        if android_for_work_credentials_list is not None:
            self.android_for_work_credentials_list = android_for_work_credentials_list
        if android_for_work_wifi_list is not None:
            self.android_for_work_wifi_list = android_for_work_wifi_list
        if android_for_work_custom_settings_list is not None:
            self.android_for_work_custom_settings_list = android_for_work_custom_settings_list
        if android_for_work_proxy is not None:
            self.android_for_work_proxy = android_for_work_proxy

    @property
    def general(self):
        """Gets the general of this AndroidDeviceProfileV2Entity.  # noqa: E501


        :return: The general of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: GeneralPayloadV2Entity
        """
        return self._general

    @general.setter
    def general(self, general):
        """Sets the general of this AndroidDeviceProfileV2Entity.


        :param general: The general of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: GeneralPayloadV2Entity
        """

        self._general = general

    @property
    def passcode(self):
        """Gets the passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the passcode.  # noqa: E501

        :return: The passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidPasscodePayloadV2Entity_
        """
        return self._passcode

    @passcode.setter
    def passcode(self, passcode):
        """Sets the passcode of this AndroidDeviceProfileV2Entity.

        Gets or sets the passcode.  # noqa: E501

        :param passcode: The passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidPasscodePayloadV2Entity_
        """

        self._passcode = passcode

    @property
    def date_time(self):
        """Gets the date_time of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the DateTime.  # noqa: E501

        :return: The date_time of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidDateTimePayloadV2Entity_
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this AndroidDeviceProfileV2Entity.

        Gets or sets the DateTime.  # noqa: E501

        :param date_time: The date_time of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidDateTimePayloadV2Entity_
        """

        self._date_time = date_time

    @property
    def wifi_list(self):
        """Gets the wifi_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the wifi list.  # noqa: E501

        :return: The wifi_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidWifiPayloadV2Entity]
        """
        return self._wifi_list

    @wifi_list.setter
    def wifi_list(self, wifi_list):
        """Sets the wifi_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the wifi list.  # noqa: E501

        :param wifi_list: The wifi_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidWifiPayloadV2Entity]
        """

        self._wifi_list = wifi_list

    @property
    def credentials_list(self):
        """Gets the credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the credentials list.  # noqa: E501

        :return: The credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidCredentialsPayloadV2Entity]
        """
        return self._credentials_list

    @credentials_list.setter
    def credentials_list(self, credentials_list):
        """Sets the credentials_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the credentials list.  # noqa: E501

        :param credentials_list: The credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidCredentialsPayloadV2Entity]
        """

        self._credentials_list = credentials_list

    @property
    def email_list(self):
        """Gets the email_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the email list.  # noqa: E501

        :return: The email_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidEmailPayloadV2Entity]
        """
        return self._email_list

    @email_list.setter
    def email_list(self, email_list):
        """Sets the email_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the email list.  # noqa: E501

        :param email_list: The email_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidEmailPayloadV2Entity]
        """

        self._email_list = email_list

    @property
    def restrictions(self):
        """Gets the restrictions of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the restrictions.  # noqa: E501

        :return: The restrictions of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidRestrictionsPayloadV2Entity_
        """
        return self._restrictions

    @restrictions.setter
    def restrictions(self, restrictions):
        """Sets the restrictions of this AndroidDeviceProfileV2Entity.

        Gets or sets the restrictions.  # noqa: E501

        :param restrictions: The restrictions of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidRestrictionsPayloadV2Entity_
        """

        self._restrictions = restrictions

    @property
    def vpn_list(self):
        """Gets the vpn_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the VPN list.  # noqa: E501

        :return: The vpn_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidVpnPayloadV2Entity]
        """
        return self._vpn_list

    @vpn_list.setter
    def vpn_list(self, vpn_list):
        """Sets the vpn_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the VPN list.  # noqa: E501

        :param vpn_list: The vpn_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidVpnPayloadV2Entity]
        """

        self._vpn_list = vpn_list

    @property
    def custom_settings_list(self):
        """Gets the custom_settings_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the custom settings list.  # noqa: E501

        :return: The custom_settings_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidCustomSettingsPayloadV2Entity]
        """
        return self._custom_settings_list

    @custom_settings_list.setter
    def custom_settings_list(self, custom_settings_list):
        """Sets the custom_settings_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the custom settings list.  # noqa: E501

        :param custom_settings_list: The custom_settings_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidCustomSettingsPayloadV2Entity]
        """

        self._custom_settings_list = custom_settings_list

    @property
    def exchange_active_sync(self):
        """Gets the exchange_active_sync of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the exchange active synchronize.  # noqa: E501

        :return: The exchange_active_sync of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidEASPayloadV2Entity_
        """
        return self._exchange_active_sync

    @exchange_active_sync.setter
    def exchange_active_sync(self, exchange_active_sync):
        """Sets the exchange_active_sync of this AndroidDeviceProfileV2Entity.

        Gets or sets the exchange active synchronize.  # noqa: E501

        :param exchange_active_sync: The exchange_active_sync of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidEASPayloadV2Entity_
        """

        self._exchange_active_sync = exchange_active_sync

    @property
    def android_for_work_system_updates(self):
        """Gets the android_for_work_system_updates of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work system updates.  # noqa: E501

        :return: The android_for_work_system_updates of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkSystemUpdatesV2Entity_
        """
        return self._android_for_work_system_updates

    @android_for_work_system_updates.setter
    def android_for_work_system_updates(self, android_for_work_system_updates):
        """Sets the android_for_work_system_updates of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work system updates.  # noqa: E501

        :param android_for_work_system_updates: The android_for_work_system_updates of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkSystemUpdatesV2Entity_
        """

        self._android_for_work_system_updates = android_for_work_system_updates

    @property
    def android_for_work_exchange_active_sync(self):
        """Gets the android_for_work_exchange_active_sync of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work exchange active synchronize.  # noqa: E501

        :return: The android_for_work_exchange_active_sync of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkEASPayloadV2Entity_
        """
        return self._android_for_work_exchange_active_sync

    @android_for_work_exchange_active_sync.setter
    def android_for_work_exchange_active_sync(self, android_for_work_exchange_active_sync):
        """Sets the android_for_work_exchange_active_sync of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work exchange active synchronize.  # noqa: E501

        :param android_for_work_exchange_active_sync: The android_for_work_exchange_active_sync of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkEASPayloadV2Entity_
        """

        self._android_for_work_exchange_active_sync = android_for_work_exchange_active_sync

    @property
    def android_for_work_chrome_browser(self):
        """Gets the android_for_work_chrome_browser of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work chrome browser.  # noqa: E501

        :return: The android_for_work_chrome_browser of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkChromeBrowserPayloadV2Entity_
        """
        return self._android_for_work_chrome_browser

    @android_for_work_chrome_browser.setter
    def android_for_work_chrome_browser(self, android_for_work_chrome_browser):
        """Sets the android_for_work_chrome_browser of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work chrome browser.  # noqa: E501

        :param android_for_work_chrome_browser: The android_for_work_chrome_browser of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkChromeBrowserPayloadV2Entity_
        """

        self._android_for_work_chrome_browser = android_for_work_chrome_browser

    @property
    def android_for_work_restrictions(self):
        """Gets the android_for_work_restrictions of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work restrictions.  # noqa: E501

        :return: The android_for_work_restrictions of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkRestrictionsPayloadV2Entity_
        """
        return self._android_for_work_restrictions

    @android_for_work_restrictions.setter
    def android_for_work_restrictions(self, android_for_work_restrictions):
        """Sets the android_for_work_restrictions of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work restrictions.  # noqa: E501

        :param android_for_work_restrictions: The android_for_work_restrictions of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkRestrictionsPayloadV2Entity_
        """

        self._android_for_work_restrictions = android_for_work_restrictions

    @property
    def android_for_work_vpn(self):
        """Gets the android_for_work_vpn of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work VPN.  # noqa: E501

        :return: The android_for_work_vpn of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkVPNPayloadV2Entity_
        """
        return self._android_for_work_vpn

    @android_for_work_vpn.setter
    def android_for_work_vpn(self, android_for_work_vpn):
        """Sets the android_for_work_vpn of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work VPN.  # noqa: E501

        :param android_for_work_vpn: The android_for_work_vpn of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkVPNPayloadV2Entity_
        """

        self._android_for_work_vpn = android_for_work_vpn

    @property
    def android_for_work_passcode(self):
        """Gets the android_for_work_passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work passcode.  # noqa: E501

        :return: The android_for_work_passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkPasscodePayloadV2Entity_
        """
        return self._android_for_work_passcode

    @android_for_work_passcode.setter
    def android_for_work_passcode(self, android_for_work_passcode):
        """Sets the android_for_work_passcode of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work passcode.  # noqa: E501

        :param android_for_work_passcode: The android_for_work_passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkPasscodePayloadV2Entity_
        """

        self._android_for_work_passcode = android_for_work_passcode

    @property
    def android_for_work_permissions(self):
        """Gets the android_for_work_permissions of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work permissions.  # noqa: E501

        :return: The android_for_work_permissions of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkPermissionsPayloadV2Entity_
        """
        return self._android_for_work_permissions

    @android_for_work_permissions.setter
    def android_for_work_permissions(self, android_for_work_permissions):
        """Sets the android_for_work_permissions of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work permissions.  # noqa: E501

        :param android_for_work_permissions: The android_for_work_permissions of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkPermissionsPayloadV2Entity_
        """

        self._android_for_work_permissions = android_for_work_permissions

    @property
    def android_for_work_single_app_mode(self):
        """Gets the android_for_work_single_app_mode of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work single application mode.  # noqa: E501

        :return: The android_for_work_single_app_mode of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkSingleAppModePayloadV2Entity_
        """
        return self._android_for_work_single_app_mode

    @android_for_work_single_app_mode.setter
    def android_for_work_single_app_mode(self, android_for_work_single_app_mode):
        """Sets the android_for_work_single_app_mode of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work single application mode.  # noqa: E501

        :param android_for_work_single_app_mode: The android_for_work_single_app_mode of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkSingleAppModePayloadV2Entity_
        """

        self._android_for_work_single_app_mode = android_for_work_single_app_mode

    @property
    def android_for_work_auto_update(self):
        """Gets the android_for_work_auto_update of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work automatic update.  # noqa: E501

        :return: The android_for_work_auto_update of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkAutoUpdatePayloadV2Entity_
        """
        return self._android_for_work_auto_update

    @android_for_work_auto_update.setter
    def android_for_work_auto_update(self, android_for_work_auto_update):
        """Sets the android_for_work_auto_update of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work automatic update.  # noqa: E501

        :param android_for_work_auto_update: The android_for_work_auto_update of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkAutoUpdatePayloadV2Entity_
        """

        self._android_for_work_auto_update = android_for_work_auto_update

    @property
    def android_for_work_custom_messages(self):
        """Gets the android_for_work_custom_messages of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work custom messages.  # noqa: E501

        :return: The android_for_work_custom_messages of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkCustomMessagesPayloadV2Entity_
        """
        return self._android_for_work_custom_messages

    @android_for_work_custom_messages.setter
    def android_for_work_custom_messages(self, android_for_work_custom_messages):
        """Sets the android_for_work_custom_messages of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work custom messages.  # noqa: E501

        :param android_for_work_custom_messages: The android_for_work_custom_messages of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkCustomMessagesPayloadV2Entity_
        """

        self._android_for_work_custom_messages = android_for_work_custom_messages

    @property
    def android_for_work_application_control(self):
        """Gets the android_for_work_application_control of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work application control.  # noqa: E501

        :return: The android_for_work_application_control of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkApplicationControlPayloadV2Entity_
        """
        return self._android_for_work_application_control

    @android_for_work_application_control.setter
    def android_for_work_application_control(self, android_for_work_application_control):
        """Sets the android_for_work_application_control of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work application control.  # noqa: E501

        :param android_for_work_application_control: The android_for_work_application_control of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkApplicationControlPayloadV2Entity_
        """

        self._android_for_work_application_control = android_for_work_application_control

    @property
    def android_container_passcode(self):
        """Gets the android_container_passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container passcode.  # noqa: E501

        :return: The android_container_passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidContainerPasscodePayloadV2Entity_
        """
        return self._android_container_passcode

    @android_container_passcode.setter
    def android_container_passcode(self, android_container_passcode):
        """Sets the android_container_passcode of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container passcode.  # noqa: E501

        :param android_container_passcode: The android_container_passcode of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidContainerPasscodePayloadV2Entity_
        """

        self._android_container_passcode = android_container_passcode

    @property
    def android_container_browser(self):
        """Gets the android_container_browser of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container browser.  # noqa: E501

        :return: The android_container_browser of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidContainerBrowserPayloadV2Entity_
        """
        return self._android_container_browser

    @android_container_browser.setter
    def android_container_browser(self, android_container_browser):
        """Sets the android_container_browser of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container browser.  # noqa: E501

        :param android_container_browser: The android_container_browser of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidContainerBrowserPayloadV2Entity_
        """

        self._android_container_browser = android_container_browser

    @property
    def android_container_eas(self):
        """Gets the android_container_eas of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container eas.  # noqa: E501

        :return: The android_container_eas of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidContainerEasPayloadV2Entity_
        """
        return self._android_container_eas

    @android_container_eas.setter
    def android_container_eas(self, android_container_eas):
        """Sets the android_container_eas of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container eas.  # noqa: E501

        :param android_container_eas: The android_container_eas of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidContainerEasPayloadV2Entity_
        """

        self._android_container_eas = android_container_eas

    @property
    def android_container_email(self):
        """Gets the android_container_email of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container email.  # noqa: E501

        :return: The android_container_email of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidContainerEmailPayloadV2Entity_
        """
        return self._android_container_email

    @android_container_email.setter
    def android_container_email(self, android_container_email):
        """Sets the android_container_email of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container email.  # noqa: E501

        :param android_container_email: The android_container_email of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidContainerEmailPayloadV2Entity_
        """

        self._android_container_email = android_container_email

    @property
    def android_container_vpn_list(self):
        """Gets the android_container_vpn_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container VPN list.  # noqa: E501

        :return: The android_container_vpn_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidConatinerVPNPayloadV2Entity_]
        """
        return self._android_container_vpn_list

    @android_container_vpn_list.setter
    def android_container_vpn_list(self, android_container_vpn_list):
        """Sets the android_container_vpn_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container VPN list.  # noqa: E501

        :param android_container_vpn_list: The android_container_vpn_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidConatinerVPNPayloadV2Entity_]
        """

        self._android_container_vpn_list = android_container_vpn_list

    @property
    def android_container_credentials_list(self):
        """Gets the android_container_credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container credentials list.  # noqa: E501

        :return: The android_container_credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidContainerCredentialsPayloadV2Entity_]
        """
        return self._android_container_credentials_list

    @android_container_credentials_list.setter
    def android_container_credentials_list(self, android_container_credentials_list):
        """Sets the android_container_credentials_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container credentials list.  # noqa: E501

        :param android_container_credentials_list: The android_container_credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidContainerCredentialsPayloadV2Entity_]
        """

        self._android_container_credentials_list = android_container_credentials_list

    @property
    def bookmark_settings(self):
        """Gets the bookmark_settings of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the bookmark settings.  # noqa: E501

        :return: The bookmark_settings of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidBookmarkSettingsPayloadV2Entity_
        """
        return self._bookmark_settings

    @bookmark_settings.setter
    def bookmark_settings(self, bookmark_settings):
        """Sets the bookmark_settings of this AndroidDeviceProfileV2Entity.

        Gets or sets the bookmark settings.  # noqa: E501

        :param bookmark_settings: The bookmark_settings of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidBookmarkSettingsPayloadV2Entity_
        """

        self._bookmark_settings = bookmark_settings

    @property
    def android_container_single_sign_on(self):
        """Gets the android_container_single_sign_on of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container single sign on.  # noqa: E501

        :return: The android_container_single_sign_on of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidContainerSingleSignOnPayloadV2Entity_
        """
        return self._android_container_single_sign_on

    @android_container_single_sign_on.setter
    def android_container_single_sign_on(self, android_container_single_sign_on):
        """Sets the android_container_single_sign_on of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container single sign on.  # noqa: E501

        :param android_container_single_sign_on: The android_container_single_sign_on of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidContainerSingleSignOnPayloadV2Entity_
        """

        self._android_container_single_sign_on = android_container_single_sign_on

    @property
    def android_container_smart_card(self):
        """Gets the android_container_smart_card of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container smart card.  # noqa: E501

        :return: The android_container_smart_card of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidContainerSmartCardPayloadV2Entity_
        """
        return self._android_container_smart_card

    @android_container_smart_card.setter
    def android_container_smart_card(self, android_container_smart_card):
        """Sets the android_container_smart_card of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container smart card.  # noqa: E501

        :param android_container_smart_card: The android_container_smart_card of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidContainerSmartCardPayloadV2Entity_
        """

        self._android_container_smart_card = android_container_smart_card

    @property
    def android_container_app_control(self):
        """Gets the android_container_app_control of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container application control.  # noqa: E501

        :return: The android_container_app_control of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidContainerAppControlPayloadV2Entity_
        """
        return self._android_container_app_control

    @android_container_app_control.setter
    def android_container_app_control(self, android_container_app_control):
        """Sets the android_container_app_control of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container application control.  # noqa: E501

        :param android_container_app_control: The android_container_app_control of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidContainerAppControlPayloadV2Entity_
        """

        self._android_container_app_control = android_container_app_control

    @property
    def android_container_book_mark(self):
        """Gets the android_container_book_mark of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android container book mark.  # noqa: E501

        :return: The android_container_book_mark of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidContainerBookmarkPayloadV2Entity_
        """
        return self._android_container_book_mark

    @android_container_book_mark.setter
    def android_container_book_mark(self, android_container_book_mark):
        """Sets the android_container_book_mark of this AndroidDeviceProfileV2Entity.

        Gets or sets the android container book mark.  # noqa: E501

        :param android_container_book_mark: The android_container_book_mark of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidContainerBookmarkPayloadV2Entity_
        """

        self._android_container_book_mark = android_container_book_mark

    @property
    def android_application_control(self):
        """Gets the android_application_control of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android application control.  # noqa: E501

        :return: The android_application_control of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidApplicationControlPayloadV2Entity_
        """
        return self._android_application_control

    @android_application_control.setter
    def android_application_control(self, android_application_control):
        """Sets the android_application_control of this AndroidDeviceProfileV2Entity.

        Gets or sets the android application control.  # noqa: E501

        :param android_application_control: The android_application_control of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidApplicationControlPayloadV2Entity_
        """

        self._android_application_control = android_application_control

    @property
    def android_kiosk(self):
        """Gets the android_kiosk of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android kiosk.  # noqa: E501

        :return: The android_kiosk of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidKioskPayloadV2Entity_
        """
        return self._android_kiosk

    @android_kiosk.setter
    def android_kiosk(self, android_kiosk):
        """Sets the android_kiosk of this AndroidDeviceProfileV2Entity.

        Gets or sets the android kiosk.  # noqa: E501

        :param android_kiosk: The android_kiosk of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidKioskPayloadV2Entity_
        """

        self._android_kiosk = android_kiosk

    @property
    def android_for_work_kiosk(self):
        """Gets the android_for_work_kiosk of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work kiosk.  # noqa: E501

        :return: The android_for_work_kiosk of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkKioskPayloadV2Entity_
        """
        return self._android_for_work_kiosk

    @android_for_work_kiosk.setter
    def android_for_work_kiosk(self, android_for_work_kiosk):
        """Sets the android_for_work_kiosk of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work kiosk.  # noqa: E501

        :param android_for_work_kiosk: The android_for_work_kiosk of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkKioskPayloadV2Entity_
        """

        self._android_for_work_kiosk = android_for_work_kiosk

    @property
    def android_for_work_zebra_mx(self):
        """Gets the android_for_work_zebra_mx of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work zebra mx.  # noqa: E501

        :return: The android_for_work_zebra_mx of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkZebraMxPayloadV2Entity_
        """
        return self._android_for_work_zebra_mx

    @android_for_work_zebra_mx.setter
    def android_for_work_zebra_mx(self, android_for_work_zebra_mx):
        """Sets the android_for_work_zebra_mx of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work zebra mx.  # noqa: E501

        :param android_for_work_zebra_mx: The android_for_work_zebra_mx of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkZebraMxPayloadV2Entity_
        """

        self._android_for_work_zebra_mx = android_for_work_zebra_mx

    @property
    def android_for_work_samsung_date_time(self):
        """Gets the android_for_work_samsung_date_time of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work samsung date time.  # noqa: E501

        :return: The android_for_work_samsung_date_time of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkSamsungDateTimePayloadV2Entity_
        """
        return self._android_for_work_samsung_date_time

    @android_for_work_samsung_date_time.setter
    def android_for_work_samsung_date_time(self, android_for_work_samsung_date_time):
        """Sets the android_for_work_samsung_date_time of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work samsung date time.  # noqa: E501

        :param android_for_work_samsung_date_time: The android_for_work_samsung_date_time of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkSamsungDateTimePayloadV2Entity_
        """

        self._android_for_work_samsung_date_time = android_for_work_samsung_date_time

    @property
    def android_for_work_samsung_apn(self):
        """Gets the android_for_work_samsung_apn of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work samsung apn.  # noqa: E501

        :return: The android_for_work_samsung_apn of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkSamsungAPNPayloadV2Entity_
        """
        return self._android_for_work_samsung_apn

    @android_for_work_samsung_apn.setter
    def android_for_work_samsung_apn(self, android_for_work_samsung_apn):
        """Sets the android_for_work_samsung_apn of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work samsung apn.  # noqa: E501

        :param android_for_work_samsung_apn: The android_for_work_samsung_apn of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkSamsungAPNPayloadV2Entity_
        """

        self._android_for_work_samsung_apn = android_for_work_samsung_apn

    @property
    def android_for_work_samsung_firewall(self):
        """Gets the android_for_work_samsung_firewall of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work samsung firewall.  # noqa: E501

        :return: The android_for_work_samsung_firewall of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkSamsungFirewallPayloadV2Entity_
        """
        return self._android_for_work_samsung_firewall

    @android_for_work_samsung_firewall.setter
    def android_for_work_samsung_firewall(self, android_for_work_samsung_firewall):
        """Sets the android_for_work_samsung_firewall of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work samsung firewall.  # noqa: E501

        :param android_for_work_samsung_firewall: The android_for_work_samsung_firewall of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkSamsungFirewallPayloadV2Entity_
        """

        self._android_for_work_samsung_firewall = android_for_work_samsung_firewall

    @property
    def android_for_work_factory_reset_protection(self):
        """Gets the android_for_work_factory_reset_protection of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work factory reset protection.  # noqa: E501

        :return: The android_for_work_factory_reset_protection of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkFactoryResetProtectionPayloadV2Entity_
        """
        return self._android_for_work_factory_reset_protection

    @android_for_work_factory_reset_protection.setter
    def android_for_work_factory_reset_protection(self, android_for_work_factory_reset_protection):
        """Sets the android_for_work_factory_reset_protection of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work factory reset protection.  # noqa: E501

        :param android_for_work_factory_reset_protection: The android_for_work_factory_reset_protection of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkFactoryResetProtectionPayloadV2Entity_
        """

        self._android_for_work_factory_reset_protection = android_for_work_factory_reset_protection

    @property
    def android_for_work_credentials_list(self):
        """Gets the android_for_work_credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work credentials list.  # noqa: E501

        :return: The android_for_work_credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidForWorkCredentialsPayloadV2Entity]
        """
        return self._android_for_work_credentials_list

    @android_for_work_credentials_list.setter
    def android_for_work_credentials_list(self, android_for_work_credentials_list):
        """Sets the android_for_work_credentials_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work credentials list.  # noqa: E501

        :param android_for_work_credentials_list: The android_for_work_credentials_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidForWorkCredentialsPayloadV2Entity]
        """

        self._android_for_work_credentials_list = android_for_work_credentials_list

    @property
    def android_for_work_wifi_list(self):
        """Gets the android_for_work_wifi_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work wifi list.  # noqa: E501

        :return: The android_for_work_wifi_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidForWorkWifiPayloadV2Entity]
        """
        return self._android_for_work_wifi_list

    @android_for_work_wifi_list.setter
    def android_for_work_wifi_list(self, android_for_work_wifi_list):
        """Sets the android_for_work_wifi_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work wifi list.  # noqa: E501

        :param android_for_work_wifi_list: The android_for_work_wifi_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidForWorkWifiPayloadV2Entity]
        """

        self._android_for_work_wifi_list = android_for_work_wifi_list

    @property
    def android_for_work_custom_settings_list(self):
        """Gets the android_for_work_custom_settings_list of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work custom settings list.  # noqa: E501

        :return: The android_for_work_custom_settings_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: list[AndroidForWorkCustomSettingsPayloadV2Entity]
        """
        return self._android_for_work_custom_settings_list

    @android_for_work_custom_settings_list.setter
    def android_for_work_custom_settings_list(self, android_for_work_custom_settings_list):
        """Sets the android_for_work_custom_settings_list of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work custom settings list.  # noqa: E501

        :param android_for_work_custom_settings_list: The android_for_work_custom_settings_list of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: list[AndroidForWorkCustomSettingsPayloadV2Entity]
        """

        self._android_for_work_custom_settings_list = android_for_work_custom_settings_list

    @property
    def android_for_work_proxy(self):
        """Gets the android_for_work_proxy of this AndroidDeviceProfileV2Entity.  # noqa: E501

        Gets or sets the android for work proxy.  # noqa: E501

        :return: The android_for_work_proxy of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :rtype: AndroidForWorkProxyPayloadV2Entity_
        """
        return self._android_for_work_proxy

    @android_for_work_proxy.setter
    def android_for_work_proxy(self, android_for_work_proxy):
        """Sets the android_for_work_proxy of this AndroidDeviceProfileV2Entity.

        Gets or sets the android for work proxy.  # noqa: E501

        :param android_for_work_proxy: The android_for_work_proxy of this AndroidDeviceProfileV2Entity.  # noqa: E501
        :type: AndroidForWorkProxyPayloadV2Entity_
        """

        self._android_for_work_proxy = android_for_work_proxy

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AndroidDeviceProfileV2Entity, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AndroidDeviceProfileV2Entity):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AndroidDeviceProfileV2Entity):
            return True

        return self.to_dict() != other.to_dict()

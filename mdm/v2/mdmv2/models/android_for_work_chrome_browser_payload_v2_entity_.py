# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class AndroidForWorkChromeBrowserPayloadV2Entity_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'default_cookies_setting': 'int',
        'cookies_allowed_for_urls': 'list[str]',
        'cookies_blocked_for_urls': 'list[str]',
        'cookies_session_only_for_urls': 'list[str]',
        'default_images_setting': 'int',
        'images_allowed_for_urls': 'list[str]',
        'images_blocked_for_urls': 'list[str]',
        'default_java_script_setting': 'int',
        'java_script_allowed_for_urls': 'list[str]',
        'java_script_blocked_for_urls': 'list[str]',
        'default_popups_setting': 'int',
        'popups_allowed_for_urls': 'list[str]',
        'popups_blocked_for_urls': 'list[str]',
        'default_geolocation_setting': 'int',
        'default_search_provider_enabled': 'bool',
        'default_search_provider_name': 'list[str]',
        'default_search_provider_keyword': 'list[str]',
        'default_search_provider_search_url': 'list[str]',
        'default_search_provider_suggest_url': 'list[str]',
        'default_search_provider_instant_url': 'list[str]',
        'default_search_provider_icon_url': 'list[str]',
        'default_search_provider_encodings': 'list[str]',
        'default_search_provider_alternate_urls': 'list[str]',
        'default_search_provider_search_terms_replacement_key': 'list[str]',
        'default_search_provider_image_url': 'list[str]',
        'default_search_provider_new_tab_url': 'list[str]',
        'default_search_provider_search_url_post_params': 'list[str]',
        'default_search_provider_suggest_url_post_params': 'list[str]',
        'default_search_provider_instant_url_post_params': 'list[str]',
        'default_search_provider_image_url_post_params': 'list[str]',
        'password_manager_enabled': 'bool',
        'alternate_error_pages_enabled': 'bool',
        'auto_fill_enabled': 'bool',
        'data_compression_proxy_enabled': 'bool',
        'safe_browsing_enabled': 'bool',
        'saving_browser_history_disabled': 'bool',
        'disable_safe_browsing_proceed_anyway': 'bool',
        'disable_spdy': 'bool',
        'dns_prefetching_enabled': 'bool',
        'edit_bookmarks_enabled': 'bool',
        'enable_deprecated_web_platform_features': 'list[str]',
        'force_safe_search': 'bool',
        'incognito_mode_availability': 'int',
        'network_prediction_options': 'int',
        'search_suggest_enabled': 'bool',
        'signin_allowed': 'bool',
        'translate_enabled': 'bool',
        'url_blocklist': 'list[str]',
        'url_allowlist': 'list[str]',
        'vendor_keys_enabled': 'bool',
        'vendor_config_key': 'list[str]',
        'vendor_config_value': 'list[str]',
        'proxy_mode': 'str',
        'proxy_server': 'str',
        'proxy_pac_url': 'str',
        'proxy_bypass_list': 'str',
        'force_google_safe_search': 'bool',
        'force_you_tube_safety_mode': 'bool',
        'contextual_search_enabled': 'bool',
        'printing_enabled': 'bool',
        'managed_bookmarks': 'list[str]',
        'ssl_version_min': 'str',
        'ssl_version_fallback_min': 'str'
    }

    attribute_map = {
        'default_cookies_setting': 'DefaultCookiesSetting',
        'cookies_allowed_for_urls': 'CookiesAllowedForUrls',
        'cookies_blocked_for_urls': 'CookiesBlockedForUrls',
        'cookies_session_only_for_urls': 'CookiesSessionOnlyForUrls',
        'default_images_setting': 'DefaultImagesSetting',
        'images_allowed_for_urls': 'ImagesAllowedForUrls',
        'images_blocked_for_urls': 'ImagesBlockedForUrls',
        'default_java_script_setting': 'DefaultJavaScriptSetting',
        'java_script_allowed_for_urls': 'JavaScriptAllowedForUrls',
        'java_script_blocked_for_urls': 'JavaScriptBlockedForUrls',
        'default_popups_setting': 'DefaultPopupsSetting',
        'popups_allowed_for_urls': 'PopupsAllowedForUrls',
        'popups_blocked_for_urls': 'PopupsBlockedForUrls',
        'default_geolocation_setting': 'DefaultGeolocationSetting',
        'default_search_provider_enabled': 'DefaultSearchProviderEnabled',
        'default_search_provider_name': 'DefaultSearchProviderName',
        'default_search_provider_keyword': 'DefaultSearchProviderKeyword',
        'default_search_provider_search_url': 'DefaultSearchProviderSearchURL',
        'default_search_provider_suggest_url': 'DefaultSearchProviderSuggestURL',
        'default_search_provider_instant_url': 'DefaultSearchProviderInstantURL',
        'default_search_provider_icon_url': 'DefaultSearchProviderIconURL',
        'default_search_provider_encodings': 'DefaultSearchProviderEncodings',
        'default_search_provider_alternate_urls': 'DefaultSearchProviderAlternateURLs',
        'default_search_provider_search_terms_replacement_key': 'DefaultSearchProviderSearchTermsReplacementKey',
        'default_search_provider_image_url': 'DefaultSearchProviderImageURL',
        'default_search_provider_new_tab_url': 'DefaultSearchProviderNewTabURL',
        'default_search_provider_search_url_post_params': 'DefaultSearchProviderSearchURLPostParams',
        'default_search_provider_suggest_url_post_params': 'DefaultSearchProviderSuggestURLPostParams',
        'default_search_provider_instant_url_post_params': 'DefaultSearchProviderInstantURLPostParams',
        'default_search_provider_image_url_post_params': 'DefaultSearchProviderImageURLPostParams',
        'password_manager_enabled': 'PasswordManagerEnabled',
        'alternate_error_pages_enabled': 'AlternateErrorPagesEnabled',
        'auto_fill_enabled': 'AutoFillEnabled',
        'data_compression_proxy_enabled': 'DataCompressionProxyEnabled',
        'safe_browsing_enabled': 'SafeBrowsingEnabled',
        'saving_browser_history_disabled': 'SavingBrowserHistoryDisabled',
        'disable_safe_browsing_proceed_anyway': 'DisableSafeBrowsingProceedAnyway',
        'disable_spdy': 'DisableSpdy',
        'dns_prefetching_enabled': 'DnsPrefetchingEnabled',
        'edit_bookmarks_enabled': 'EditBookmarksEnabled',
        'enable_deprecated_web_platform_features': 'EnableDeprecatedWebPlatformFeatures',
        'force_safe_search': 'ForceSafeSearch',
        'incognito_mode_availability': 'IncognitoModeAvailability',
        'network_prediction_options': 'NetworkPredictionOptions',
        'search_suggest_enabled': 'SearchSuggestEnabled',
        'signin_allowed': 'SigninAllowed',
        'translate_enabled': 'TranslateEnabled',
        'url_blocklist': 'URLBlocklist',
        'url_allowlist': 'URLAllowlist',
        'vendor_keys_enabled': 'VendorKeysEnabled',
        'vendor_config_key': 'VendorConfigKey',
        'vendor_config_value': 'VendorConfigValue',
        'proxy_mode': 'ProxyMode',
        'proxy_server': 'ProxyServer',
        'proxy_pac_url': 'ProxyPacUrl',
        'proxy_bypass_list': 'ProxyBypassList',
        'force_google_safe_search': 'ForceGoogleSafeSearch',
        'force_you_tube_safety_mode': 'ForceYouTubeSafetyMode',
        'contextual_search_enabled': 'ContextualSearchEnabled',
        'printing_enabled': 'PrintingEnabled',
        'managed_bookmarks': 'ManagedBookmarks',
        'ssl_version_min': 'SSLVersionMin',
        'ssl_version_fallback_min': 'SSLVersionFallbackMin'
    }

    def __init__(self, default_cookies_setting=None, cookies_allowed_for_urls=None, cookies_blocked_for_urls=None, cookies_session_only_for_urls=None, default_images_setting=None, images_allowed_for_urls=None, images_blocked_for_urls=None, default_java_script_setting=None, java_script_allowed_for_urls=None, java_script_blocked_for_urls=None, default_popups_setting=None, popups_allowed_for_urls=None, popups_blocked_for_urls=None, default_geolocation_setting=None, default_search_provider_enabled=None, default_search_provider_name=None, default_search_provider_keyword=None, default_search_provider_search_url=None, default_search_provider_suggest_url=None, default_search_provider_instant_url=None, default_search_provider_icon_url=None, default_search_provider_encodings=None, default_search_provider_alternate_urls=None, default_search_provider_search_terms_replacement_key=None, default_search_provider_image_url=None, default_search_provider_new_tab_url=None, default_search_provider_search_url_post_params=None, default_search_provider_suggest_url_post_params=None, default_search_provider_instant_url_post_params=None, default_search_provider_image_url_post_params=None, password_manager_enabled=None, alternate_error_pages_enabled=None, auto_fill_enabled=None, data_compression_proxy_enabled=None, safe_browsing_enabled=None, saving_browser_history_disabled=None, disable_safe_browsing_proceed_anyway=None, disable_spdy=None, dns_prefetching_enabled=None, edit_bookmarks_enabled=None, enable_deprecated_web_platform_features=None, force_safe_search=None, incognito_mode_availability=None, network_prediction_options=None, search_suggest_enabled=None, signin_allowed=None, translate_enabled=None, url_blocklist=None, url_allowlist=None, vendor_keys_enabled=None, vendor_config_key=None, vendor_config_value=None, proxy_mode=None, proxy_server=None, proxy_pac_url=None, proxy_bypass_list=None, force_google_safe_search=None, force_you_tube_safety_mode=None, contextual_search_enabled=None, printing_enabled=None, managed_bookmarks=None, ssl_version_min=None, ssl_version_fallback_min=None, _configuration=None):  # noqa: E501
        """AndroidForWorkChromeBrowserPayloadV2Entity_ - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._default_cookies_setting = None
        self._cookies_allowed_for_urls = None
        self._cookies_blocked_for_urls = None
        self._cookies_session_only_for_urls = None
        self._default_images_setting = None
        self._images_allowed_for_urls = None
        self._images_blocked_for_urls = None
        self._default_java_script_setting = None
        self._java_script_allowed_for_urls = None
        self._java_script_blocked_for_urls = None
        self._default_popups_setting = None
        self._popups_allowed_for_urls = None
        self._popups_blocked_for_urls = None
        self._default_geolocation_setting = None
        self._default_search_provider_enabled = None
        self._default_search_provider_name = None
        self._default_search_provider_keyword = None
        self._default_search_provider_search_url = None
        self._default_search_provider_suggest_url = None
        self._default_search_provider_instant_url = None
        self._default_search_provider_icon_url = None
        self._default_search_provider_encodings = None
        self._default_search_provider_alternate_urls = None
        self._default_search_provider_search_terms_replacement_key = None
        self._default_search_provider_image_url = None
        self._default_search_provider_new_tab_url = None
        self._default_search_provider_search_url_post_params = None
        self._default_search_provider_suggest_url_post_params = None
        self._default_search_provider_instant_url_post_params = None
        self._default_search_provider_image_url_post_params = None
        self._password_manager_enabled = None
        self._alternate_error_pages_enabled = None
        self._auto_fill_enabled = None
        self._data_compression_proxy_enabled = None
        self._safe_browsing_enabled = None
        self._saving_browser_history_disabled = None
        self._disable_safe_browsing_proceed_anyway = None
        self._disable_spdy = None
        self._dns_prefetching_enabled = None
        self._edit_bookmarks_enabled = None
        self._enable_deprecated_web_platform_features = None
        self._force_safe_search = None
        self._incognito_mode_availability = None
        self._network_prediction_options = None
        self._search_suggest_enabled = None
        self._signin_allowed = None
        self._translate_enabled = None
        self._url_blocklist = None
        self._url_allowlist = None
        self._vendor_keys_enabled = None
        self._vendor_config_key = None
        self._vendor_config_value = None
        self._proxy_mode = None
        self._proxy_server = None
        self._proxy_pac_url = None
        self._proxy_bypass_list = None
        self._force_google_safe_search = None
        self._force_you_tube_safety_mode = None
        self._contextual_search_enabled = None
        self._printing_enabled = None
        self._managed_bookmarks = None
        self._ssl_version_min = None
        self._ssl_version_fallback_min = None
        self.discriminator = None

        if default_cookies_setting is not None:
            self.default_cookies_setting = default_cookies_setting
        if cookies_allowed_for_urls is not None:
            self.cookies_allowed_for_urls = cookies_allowed_for_urls
        if cookies_blocked_for_urls is not None:
            self.cookies_blocked_for_urls = cookies_blocked_for_urls
        if cookies_session_only_for_urls is not None:
            self.cookies_session_only_for_urls = cookies_session_only_for_urls
        if default_images_setting is not None:
            self.default_images_setting = default_images_setting
        if images_allowed_for_urls is not None:
            self.images_allowed_for_urls = images_allowed_for_urls
        if images_blocked_for_urls is not None:
            self.images_blocked_for_urls = images_blocked_for_urls
        if default_java_script_setting is not None:
            self.default_java_script_setting = default_java_script_setting
        if java_script_allowed_for_urls is not None:
            self.java_script_allowed_for_urls = java_script_allowed_for_urls
        if java_script_blocked_for_urls is not None:
            self.java_script_blocked_for_urls = java_script_blocked_for_urls
        if default_popups_setting is not None:
            self.default_popups_setting = default_popups_setting
        if popups_allowed_for_urls is not None:
            self.popups_allowed_for_urls = popups_allowed_for_urls
        if popups_blocked_for_urls is not None:
            self.popups_blocked_for_urls = popups_blocked_for_urls
        if default_geolocation_setting is not None:
            self.default_geolocation_setting = default_geolocation_setting
        if default_search_provider_enabled is not None:
            self.default_search_provider_enabled = default_search_provider_enabled
        if default_search_provider_name is not None:
            self.default_search_provider_name = default_search_provider_name
        if default_search_provider_keyword is not None:
            self.default_search_provider_keyword = default_search_provider_keyword
        if default_search_provider_search_url is not None:
            self.default_search_provider_search_url = default_search_provider_search_url
        if default_search_provider_suggest_url is not None:
            self.default_search_provider_suggest_url = default_search_provider_suggest_url
        if default_search_provider_instant_url is not None:
            self.default_search_provider_instant_url = default_search_provider_instant_url
        if default_search_provider_icon_url is not None:
            self.default_search_provider_icon_url = default_search_provider_icon_url
        if default_search_provider_encodings is not None:
            self.default_search_provider_encodings = default_search_provider_encodings
        if default_search_provider_alternate_urls is not None:
            self.default_search_provider_alternate_urls = default_search_provider_alternate_urls
        if default_search_provider_search_terms_replacement_key is not None:
            self.default_search_provider_search_terms_replacement_key = default_search_provider_search_terms_replacement_key
        if default_search_provider_image_url is not None:
            self.default_search_provider_image_url = default_search_provider_image_url
        if default_search_provider_new_tab_url is not None:
            self.default_search_provider_new_tab_url = default_search_provider_new_tab_url
        if default_search_provider_search_url_post_params is not None:
            self.default_search_provider_search_url_post_params = default_search_provider_search_url_post_params
        if default_search_provider_suggest_url_post_params is not None:
            self.default_search_provider_suggest_url_post_params = default_search_provider_suggest_url_post_params
        if default_search_provider_instant_url_post_params is not None:
            self.default_search_provider_instant_url_post_params = default_search_provider_instant_url_post_params
        if default_search_provider_image_url_post_params is not None:
            self.default_search_provider_image_url_post_params = default_search_provider_image_url_post_params
        if password_manager_enabled is not None:
            self.password_manager_enabled = password_manager_enabled
        if alternate_error_pages_enabled is not None:
            self.alternate_error_pages_enabled = alternate_error_pages_enabled
        if auto_fill_enabled is not None:
            self.auto_fill_enabled = auto_fill_enabled
        if data_compression_proxy_enabled is not None:
            self.data_compression_proxy_enabled = data_compression_proxy_enabled
        if safe_browsing_enabled is not None:
            self.safe_browsing_enabled = safe_browsing_enabled
        if saving_browser_history_disabled is not None:
            self.saving_browser_history_disabled = saving_browser_history_disabled
        if disable_safe_browsing_proceed_anyway is not None:
            self.disable_safe_browsing_proceed_anyway = disable_safe_browsing_proceed_anyway
        if disable_spdy is not None:
            self.disable_spdy = disable_spdy
        if dns_prefetching_enabled is not None:
            self.dns_prefetching_enabled = dns_prefetching_enabled
        if edit_bookmarks_enabled is not None:
            self.edit_bookmarks_enabled = edit_bookmarks_enabled
        if enable_deprecated_web_platform_features is not None:
            self.enable_deprecated_web_platform_features = enable_deprecated_web_platform_features
        if force_safe_search is not None:
            self.force_safe_search = force_safe_search
        if incognito_mode_availability is not None:
            self.incognito_mode_availability = incognito_mode_availability
        if network_prediction_options is not None:
            self.network_prediction_options = network_prediction_options
        if search_suggest_enabled is not None:
            self.search_suggest_enabled = search_suggest_enabled
        if signin_allowed is not None:
            self.signin_allowed = signin_allowed
        if translate_enabled is not None:
            self.translate_enabled = translate_enabled
        if url_blocklist is not None:
            self.url_blocklist = url_blocklist
        if url_allowlist is not None:
            self.url_allowlist = url_allowlist
        if vendor_keys_enabled is not None:
            self.vendor_keys_enabled = vendor_keys_enabled
        if vendor_config_key is not None:
            self.vendor_config_key = vendor_config_key
        if vendor_config_value is not None:
            self.vendor_config_value = vendor_config_value
        if proxy_mode is not None:
            self.proxy_mode = proxy_mode
        if proxy_server is not None:
            self.proxy_server = proxy_server
        if proxy_pac_url is not None:
            self.proxy_pac_url = proxy_pac_url
        if proxy_bypass_list is not None:
            self.proxy_bypass_list = proxy_bypass_list
        if force_google_safe_search is not None:
            self.force_google_safe_search = force_google_safe_search
        if force_you_tube_safety_mode is not None:
            self.force_you_tube_safety_mode = force_you_tube_safety_mode
        if contextual_search_enabled is not None:
            self.contextual_search_enabled = contextual_search_enabled
        if printing_enabled is not None:
            self.printing_enabled = printing_enabled
        if managed_bookmarks is not None:
            self.managed_bookmarks = managed_bookmarks
        if ssl_version_min is not None:
            self.ssl_version_min = ssl_version_min
        if ssl_version_fallback_min is not None:
            self.ssl_version_fallback_min = ssl_version_fallback_min

    @property
    def default_cookies_setting(self):
        """Gets the default_cookies_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default cookies setting.  # noqa: E501

        :return: The default_cookies_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: int
        """
        return self._default_cookies_setting

    @default_cookies_setting.setter
    def default_cookies_setting(self, default_cookies_setting):
        """Sets the default_cookies_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default cookies setting.  # noqa: E501

        :param default_cookies_setting: The default_cookies_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: int
        """

        self._default_cookies_setting = default_cookies_setting

    @property
    def cookies_allowed_for_urls(self):
        """Gets the cookies_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the cookies allowed for urls.  # noqa: E501

        :return: The cookies_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._cookies_allowed_for_urls

    @cookies_allowed_for_urls.setter
    def cookies_allowed_for_urls(self, cookies_allowed_for_urls):
        """Sets the cookies_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the cookies allowed for urls.  # noqa: E501

        :param cookies_allowed_for_urls: The cookies_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._cookies_allowed_for_urls = cookies_allowed_for_urls

    @property
    def cookies_blocked_for_urls(self):
        """Gets the cookies_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the cookies blocked for urls.  # noqa: E501

        :return: The cookies_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._cookies_blocked_for_urls

    @cookies_blocked_for_urls.setter
    def cookies_blocked_for_urls(self, cookies_blocked_for_urls):
        """Sets the cookies_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the cookies blocked for urls.  # noqa: E501

        :param cookies_blocked_for_urls: The cookies_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._cookies_blocked_for_urls = cookies_blocked_for_urls

    @property
    def cookies_session_only_for_urls(self):
        """Gets the cookies_session_only_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the cookies session only for urls.  # noqa: E501

        :return: The cookies_session_only_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._cookies_session_only_for_urls

    @cookies_session_only_for_urls.setter
    def cookies_session_only_for_urls(self, cookies_session_only_for_urls):
        """Sets the cookies_session_only_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the cookies session only for urls.  # noqa: E501

        :param cookies_session_only_for_urls: The cookies_session_only_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._cookies_session_only_for_urls = cookies_session_only_for_urls

    @property
    def default_images_setting(self):
        """Gets the default_images_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default images setting.  # noqa: E501

        :return: The default_images_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: int
        """
        return self._default_images_setting

    @default_images_setting.setter
    def default_images_setting(self, default_images_setting):
        """Sets the default_images_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default images setting.  # noqa: E501

        :param default_images_setting: The default_images_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: int
        """

        self._default_images_setting = default_images_setting

    @property
    def images_allowed_for_urls(self):
        """Gets the images_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the images allowed for urls.  # noqa: E501

        :return: The images_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._images_allowed_for_urls

    @images_allowed_for_urls.setter
    def images_allowed_for_urls(self, images_allowed_for_urls):
        """Sets the images_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the images allowed for urls.  # noqa: E501

        :param images_allowed_for_urls: The images_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._images_allowed_for_urls = images_allowed_for_urls

    @property
    def images_blocked_for_urls(self):
        """Gets the images_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the images blocked for urls.  # noqa: E501

        :return: The images_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._images_blocked_for_urls

    @images_blocked_for_urls.setter
    def images_blocked_for_urls(self, images_blocked_for_urls):
        """Sets the images_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the images blocked for urls.  # noqa: E501

        :param images_blocked_for_urls: The images_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._images_blocked_for_urls = images_blocked_for_urls

    @property
    def default_java_script_setting(self):
        """Gets the default_java_script_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default java script setting.  # noqa: E501

        :return: The default_java_script_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: int
        """
        return self._default_java_script_setting

    @default_java_script_setting.setter
    def default_java_script_setting(self, default_java_script_setting):
        """Sets the default_java_script_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default java script setting.  # noqa: E501

        :param default_java_script_setting: The default_java_script_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: int
        """

        self._default_java_script_setting = default_java_script_setting

    @property
    def java_script_allowed_for_urls(self):
        """Gets the java_script_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the java script allowed for urls.  # noqa: E501

        :return: The java_script_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._java_script_allowed_for_urls

    @java_script_allowed_for_urls.setter
    def java_script_allowed_for_urls(self, java_script_allowed_for_urls):
        """Sets the java_script_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the java script allowed for urls.  # noqa: E501

        :param java_script_allowed_for_urls: The java_script_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._java_script_allowed_for_urls = java_script_allowed_for_urls

    @property
    def java_script_blocked_for_urls(self):
        """Gets the java_script_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the java script blocked for urls.  # noqa: E501

        :return: The java_script_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._java_script_blocked_for_urls

    @java_script_blocked_for_urls.setter
    def java_script_blocked_for_urls(self, java_script_blocked_for_urls):
        """Sets the java_script_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the java script blocked for urls.  # noqa: E501

        :param java_script_blocked_for_urls: The java_script_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._java_script_blocked_for_urls = java_script_blocked_for_urls

    @property
    def default_popups_setting(self):
        """Gets the default_popups_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default popups setting.  # noqa: E501

        :return: The default_popups_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: int
        """
        return self._default_popups_setting

    @default_popups_setting.setter
    def default_popups_setting(self, default_popups_setting):
        """Sets the default_popups_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default popups setting.  # noqa: E501

        :param default_popups_setting: The default_popups_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: int
        """

        self._default_popups_setting = default_popups_setting

    @property
    def popups_allowed_for_urls(self):
        """Gets the popups_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the popups allowed for urls.  # noqa: E501

        :return: The popups_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._popups_allowed_for_urls

    @popups_allowed_for_urls.setter
    def popups_allowed_for_urls(self, popups_allowed_for_urls):
        """Sets the popups_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the popups allowed for urls.  # noqa: E501

        :param popups_allowed_for_urls: The popups_allowed_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._popups_allowed_for_urls = popups_allowed_for_urls

    @property
    def popups_blocked_for_urls(self):
        """Gets the popups_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the popups blocked for urls.  # noqa: E501

        :return: The popups_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._popups_blocked_for_urls

    @popups_blocked_for_urls.setter
    def popups_blocked_for_urls(self, popups_blocked_for_urls):
        """Sets the popups_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the popups blocked for urls.  # noqa: E501

        :param popups_blocked_for_urls: The popups_blocked_for_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._popups_blocked_for_urls = popups_blocked_for_urls

    @property
    def default_geolocation_setting(self):
        """Gets the default_geolocation_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default geolocation setting.  # noqa: E501

        :return: The default_geolocation_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: int
        """
        return self._default_geolocation_setting

    @default_geolocation_setting.setter
    def default_geolocation_setting(self, default_geolocation_setting):
        """Sets the default_geolocation_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default geolocation setting.  # noqa: E501

        :param default_geolocation_setting: The default_geolocation_setting of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: int
        """

        self._default_geolocation_setting = default_geolocation_setting

    @property
    def default_search_provider_enabled(self):
        """Gets the default_search_provider_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [default search provider enabled].  # noqa: E501

        :return: The default_search_provider_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._default_search_provider_enabled

    @default_search_provider_enabled.setter
    def default_search_provider_enabled(self, default_search_provider_enabled):
        """Sets the default_search_provider_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [default search provider enabled].  # noqa: E501

        :param default_search_provider_enabled: The default_search_provider_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._default_search_provider_enabled = default_search_provider_enabled

    @property
    def default_search_provider_name(self):
        """Gets the default_search_provider_name of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default name of the search provider.  # noqa: E501

        :return: The default_search_provider_name of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_name

    @default_search_provider_name.setter
    def default_search_provider_name(self, default_search_provider_name):
        """Sets the default_search_provider_name of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default name of the search provider.  # noqa: E501

        :param default_search_provider_name: The default_search_provider_name of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_name = default_search_provider_name

    @property
    def default_search_provider_keyword(self):
        """Gets the default_search_provider_keyword of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider keyword.  # noqa: E501

        :return: The default_search_provider_keyword of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_keyword

    @default_search_provider_keyword.setter
    def default_search_provider_keyword(self, default_search_provider_keyword):
        """Sets the default_search_provider_keyword of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider keyword.  # noqa: E501

        :param default_search_provider_keyword: The default_search_provider_keyword of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_keyword = default_search_provider_keyword

    @property
    def default_search_provider_search_url(self):
        """Gets the default_search_provider_search_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider search URL.  # noqa: E501

        :return: The default_search_provider_search_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_search_url

    @default_search_provider_search_url.setter
    def default_search_provider_search_url(self, default_search_provider_search_url):
        """Sets the default_search_provider_search_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider search URL.  # noqa: E501

        :param default_search_provider_search_url: The default_search_provider_search_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_search_url = default_search_provider_search_url

    @property
    def default_search_provider_suggest_url(self):
        """Gets the default_search_provider_suggest_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider suggest URL.  # noqa: E501

        :return: The default_search_provider_suggest_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_suggest_url

    @default_search_provider_suggest_url.setter
    def default_search_provider_suggest_url(self, default_search_provider_suggest_url):
        """Sets the default_search_provider_suggest_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider suggest URL.  # noqa: E501

        :param default_search_provider_suggest_url: The default_search_provider_suggest_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_suggest_url = default_search_provider_suggest_url

    @property
    def default_search_provider_instant_url(self):
        """Gets the default_search_provider_instant_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider instant URL.  # noqa: E501

        :return: The default_search_provider_instant_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_instant_url

    @default_search_provider_instant_url.setter
    def default_search_provider_instant_url(self, default_search_provider_instant_url):
        """Sets the default_search_provider_instant_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider instant URL.  # noqa: E501

        :param default_search_provider_instant_url: The default_search_provider_instant_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_instant_url = default_search_provider_instant_url

    @property
    def default_search_provider_icon_url(self):
        """Gets the default_search_provider_icon_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider icon URL.  # noqa: E501

        :return: The default_search_provider_icon_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_icon_url

    @default_search_provider_icon_url.setter
    def default_search_provider_icon_url(self, default_search_provider_icon_url):
        """Sets the default_search_provider_icon_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider icon URL.  # noqa: E501

        :param default_search_provider_icon_url: The default_search_provider_icon_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_icon_url = default_search_provider_icon_url

    @property
    def default_search_provider_encodings(self):
        """Gets the default_search_provider_encodings of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider encodings.  # noqa: E501

        :return: The default_search_provider_encodings of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_encodings

    @default_search_provider_encodings.setter
    def default_search_provider_encodings(self, default_search_provider_encodings):
        """Sets the default_search_provider_encodings of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider encodings.  # noqa: E501

        :param default_search_provider_encodings: The default_search_provider_encodings of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_encodings = default_search_provider_encodings

    @property
    def default_search_provider_alternate_urls(self):
        """Gets the default_search_provider_alternate_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider alternate ur ls.  # noqa: E501

        :return: The default_search_provider_alternate_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_alternate_urls

    @default_search_provider_alternate_urls.setter
    def default_search_provider_alternate_urls(self, default_search_provider_alternate_urls):
        """Sets the default_search_provider_alternate_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider alternate ur ls.  # noqa: E501

        :param default_search_provider_alternate_urls: The default_search_provider_alternate_urls of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_alternate_urls = default_search_provider_alternate_urls

    @property
    def default_search_provider_search_terms_replacement_key(self):
        """Gets the default_search_provider_search_terms_replacement_key of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider search terms replacement key.  # noqa: E501

        :return: The default_search_provider_search_terms_replacement_key of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_search_terms_replacement_key

    @default_search_provider_search_terms_replacement_key.setter
    def default_search_provider_search_terms_replacement_key(self, default_search_provider_search_terms_replacement_key):
        """Sets the default_search_provider_search_terms_replacement_key of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider search terms replacement key.  # noqa: E501

        :param default_search_provider_search_terms_replacement_key: The default_search_provider_search_terms_replacement_key of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_search_terms_replacement_key = default_search_provider_search_terms_replacement_key

    @property
    def default_search_provider_image_url(self):
        """Gets the default_search_provider_image_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider image URL.  # noqa: E501

        :return: The default_search_provider_image_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_image_url

    @default_search_provider_image_url.setter
    def default_search_provider_image_url(self, default_search_provider_image_url):
        """Sets the default_search_provider_image_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider image URL.  # noqa: E501

        :param default_search_provider_image_url: The default_search_provider_image_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_image_url = default_search_provider_image_url

    @property
    def default_search_provider_new_tab_url(self):
        """Gets the default_search_provider_new_tab_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider new tab URL.  # noqa: E501

        :return: The default_search_provider_new_tab_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_new_tab_url

    @default_search_provider_new_tab_url.setter
    def default_search_provider_new_tab_url(self, default_search_provider_new_tab_url):
        """Sets the default_search_provider_new_tab_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider new tab URL.  # noqa: E501

        :param default_search_provider_new_tab_url: The default_search_provider_new_tab_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_new_tab_url = default_search_provider_new_tab_url

    @property
    def default_search_provider_search_url_post_params(self):
        """Gets the default_search_provider_search_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider search URL post parameters.  # noqa: E501

        :return: The default_search_provider_search_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_search_url_post_params

    @default_search_provider_search_url_post_params.setter
    def default_search_provider_search_url_post_params(self, default_search_provider_search_url_post_params):
        """Sets the default_search_provider_search_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider search URL post parameters.  # noqa: E501

        :param default_search_provider_search_url_post_params: The default_search_provider_search_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_search_url_post_params = default_search_provider_search_url_post_params

    @property
    def default_search_provider_suggest_url_post_params(self):
        """Gets the default_search_provider_suggest_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider suggest URL post parameters.  # noqa: E501

        :return: The default_search_provider_suggest_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_suggest_url_post_params

    @default_search_provider_suggest_url_post_params.setter
    def default_search_provider_suggest_url_post_params(self, default_search_provider_suggest_url_post_params):
        """Sets the default_search_provider_suggest_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider suggest URL post parameters.  # noqa: E501

        :param default_search_provider_suggest_url_post_params: The default_search_provider_suggest_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_suggest_url_post_params = default_search_provider_suggest_url_post_params

    @property
    def default_search_provider_instant_url_post_params(self):
        """Gets the default_search_provider_instant_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider instant URL post parameters.  # noqa: E501

        :return: The default_search_provider_instant_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_instant_url_post_params

    @default_search_provider_instant_url_post_params.setter
    def default_search_provider_instant_url_post_params(self, default_search_provider_instant_url_post_params):
        """Sets the default_search_provider_instant_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider instant URL post parameters.  # noqa: E501

        :param default_search_provider_instant_url_post_params: The default_search_provider_instant_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_instant_url_post_params = default_search_provider_instant_url_post_params

    @property
    def default_search_provider_image_url_post_params(self):
        """Gets the default_search_provider_image_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the default search provider image URL post parameters.  # noqa: E501

        :return: The default_search_provider_image_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._default_search_provider_image_url_post_params

    @default_search_provider_image_url_post_params.setter
    def default_search_provider_image_url_post_params(self, default_search_provider_image_url_post_params):
        """Sets the default_search_provider_image_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the default search provider image URL post parameters.  # noqa: E501

        :param default_search_provider_image_url_post_params: The default_search_provider_image_url_post_params of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._default_search_provider_image_url_post_params = default_search_provider_image_url_post_params

    @property
    def password_manager_enabled(self):
        """Gets the password_manager_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [password manager enabled].  # noqa: E501

        :return: The password_manager_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._password_manager_enabled

    @password_manager_enabled.setter
    def password_manager_enabled(self, password_manager_enabled):
        """Sets the password_manager_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [password manager enabled].  # noqa: E501

        :param password_manager_enabled: The password_manager_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._password_manager_enabled = password_manager_enabled

    @property
    def alternate_error_pages_enabled(self):
        """Gets the alternate_error_pages_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [alternate error pages enabled].  # noqa: E501

        :return: The alternate_error_pages_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._alternate_error_pages_enabled

    @alternate_error_pages_enabled.setter
    def alternate_error_pages_enabled(self, alternate_error_pages_enabled):
        """Sets the alternate_error_pages_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [alternate error pages enabled].  # noqa: E501

        :param alternate_error_pages_enabled: The alternate_error_pages_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._alternate_error_pages_enabled = alternate_error_pages_enabled

    @property
    def auto_fill_enabled(self):
        """Gets the auto_fill_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [automatic fill enabled].  # noqa: E501

        :return: The auto_fill_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._auto_fill_enabled

    @auto_fill_enabled.setter
    def auto_fill_enabled(self, auto_fill_enabled):
        """Sets the auto_fill_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [automatic fill enabled].  # noqa: E501

        :param auto_fill_enabled: The auto_fill_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._auto_fill_enabled = auto_fill_enabled

    @property
    def data_compression_proxy_enabled(self):
        """Gets the data_compression_proxy_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [data compression proxy enabled].  # noqa: E501

        :return: The data_compression_proxy_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._data_compression_proxy_enabled

    @data_compression_proxy_enabled.setter
    def data_compression_proxy_enabled(self, data_compression_proxy_enabled):
        """Sets the data_compression_proxy_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [data compression proxy enabled].  # noqa: E501

        :param data_compression_proxy_enabled: The data_compression_proxy_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._data_compression_proxy_enabled = data_compression_proxy_enabled

    @property
    def safe_browsing_enabled(self):
        """Gets the safe_browsing_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [safe browsing enabled].  # noqa: E501

        :return: The safe_browsing_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._safe_browsing_enabled

    @safe_browsing_enabled.setter
    def safe_browsing_enabled(self, safe_browsing_enabled):
        """Sets the safe_browsing_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [safe browsing enabled].  # noqa: E501

        :param safe_browsing_enabled: The safe_browsing_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._safe_browsing_enabled = safe_browsing_enabled

    @property
    def saving_browser_history_disabled(self):
        """Gets the saving_browser_history_disabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [saving browser history disabled].  # noqa: E501

        :return: The saving_browser_history_disabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._saving_browser_history_disabled

    @saving_browser_history_disabled.setter
    def saving_browser_history_disabled(self, saving_browser_history_disabled):
        """Sets the saving_browser_history_disabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [saving browser history disabled].  # noqa: E501

        :param saving_browser_history_disabled: The saving_browser_history_disabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._saving_browser_history_disabled = saving_browser_history_disabled

    @property
    def disable_safe_browsing_proceed_anyway(self):
        """Gets the disable_safe_browsing_proceed_anyway of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [disable safe browsing proceed anyway].  # noqa: E501

        :return: The disable_safe_browsing_proceed_anyway of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._disable_safe_browsing_proceed_anyway

    @disable_safe_browsing_proceed_anyway.setter
    def disable_safe_browsing_proceed_anyway(self, disable_safe_browsing_proceed_anyway):
        """Sets the disable_safe_browsing_proceed_anyway of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [disable safe browsing proceed anyway].  # noqa: E501

        :param disable_safe_browsing_proceed_anyway: The disable_safe_browsing_proceed_anyway of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._disable_safe_browsing_proceed_anyway = disable_safe_browsing_proceed_anyway

    @property
    def disable_spdy(self):
        """Gets the disable_spdy of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [disable spdy].  # noqa: E501

        :return: The disable_spdy of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._disable_spdy

    @disable_spdy.setter
    def disable_spdy(self, disable_spdy):
        """Sets the disable_spdy of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [disable spdy].  # noqa: E501

        :param disable_spdy: The disable_spdy of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._disable_spdy = disable_spdy

    @property
    def dns_prefetching_enabled(self):
        """Gets the dns_prefetching_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [DNS prefetching enabled].  # noqa: E501

        :return: The dns_prefetching_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._dns_prefetching_enabled

    @dns_prefetching_enabled.setter
    def dns_prefetching_enabled(self, dns_prefetching_enabled):
        """Sets the dns_prefetching_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [DNS prefetching enabled].  # noqa: E501

        :param dns_prefetching_enabled: The dns_prefetching_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._dns_prefetching_enabled = dns_prefetching_enabled

    @property
    def edit_bookmarks_enabled(self):
        """Gets the edit_bookmarks_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [edit bookmarks enabled].  # noqa: E501

        :return: The edit_bookmarks_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._edit_bookmarks_enabled

    @edit_bookmarks_enabled.setter
    def edit_bookmarks_enabled(self, edit_bookmarks_enabled):
        """Sets the edit_bookmarks_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [edit bookmarks enabled].  # noqa: E501

        :param edit_bookmarks_enabled: The edit_bookmarks_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._edit_bookmarks_enabled = edit_bookmarks_enabled

    @property
    def enable_deprecated_web_platform_features(self):
        """Gets the enable_deprecated_web_platform_features of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the enable deprecated web platform features.  # noqa: E501

        :return: The enable_deprecated_web_platform_features of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._enable_deprecated_web_platform_features

    @enable_deprecated_web_platform_features.setter
    def enable_deprecated_web_platform_features(self, enable_deprecated_web_platform_features):
        """Sets the enable_deprecated_web_platform_features of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the enable deprecated web platform features.  # noqa: E501

        :param enable_deprecated_web_platform_features: The enable_deprecated_web_platform_features of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._enable_deprecated_web_platform_features = enable_deprecated_web_platform_features

    @property
    def force_safe_search(self):
        """Gets the force_safe_search of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [force safe search].  # noqa: E501

        :return: The force_safe_search of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._force_safe_search

    @force_safe_search.setter
    def force_safe_search(self, force_safe_search):
        """Sets the force_safe_search of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [force safe search].  # noqa: E501

        :param force_safe_search: The force_safe_search of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._force_safe_search = force_safe_search

    @property
    def incognito_mode_availability(self):
        """Gets the incognito_mode_availability of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the incognito mode availability.  # noqa: E501

        :return: The incognito_mode_availability of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: int
        """
        return self._incognito_mode_availability

    @incognito_mode_availability.setter
    def incognito_mode_availability(self, incognito_mode_availability):
        """Sets the incognito_mode_availability of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the incognito mode availability.  # noqa: E501

        :param incognito_mode_availability: The incognito_mode_availability of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: int
        """

        self._incognito_mode_availability = incognito_mode_availability

    @property
    def network_prediction_options(self):
        """Gets the network_prediction_options of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the network prediction options.  # noqa: E501

        :return: The network_prediction_options of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: int
        """
        return self._network_prediction_options

    @network_prediction_options.setter
    def network_prediction_options(self, network_prediction_options):
        """Sets the network_prediction_options of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the network prediction options.  # noqa: E501

        :param network_prediction_options: The network_prediction_options of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: int
        """

        self._network_prediction_options = network_prediction_options

    @property
    def search_suggest_enabled(self):
        """Gets the search_suggest_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [search suggest enabled].  # noqa: E501

        :return: The search_suggest_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._search_suggest_enabled

    @search_suggest_enabled.setter
    def search_suggest_enabled(self, search_suggest_enabled):
        """Sets the search_suggest_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [search suggest enabled].  # noqa: E501

        :param search_suggest_enabled: The search_suggest_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._search_suggest_enabled = search_suggest_enabled

    @property
    def signin_allowed(self):
        """Gets the signin_allowed of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [signin allowed].  # noqa: E501

        :return: The signin_allowed of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._signin_allowed

    @signin_allowed.setter
    def signin_allowed(self, signin_allowed):
        """Sets the signin_allowed of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [signin allowed].  # noqa: E501

        :param signin_allowed: The signin_allowed of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._signin_allowed = signin_allowed

    @property
    def translate_enabled(self):
        """Gets the translate_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [translate enabled].  # noqa: E501

        :return: The translate_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._translate_enabled

    @translate_enabled.setter
    def translate_enabled(self, translate_enabled):
        """Sets the translate_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [translate enabled].  # noqa: E501

        :param translate_enabled: The translate_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._translate_enabled = translate_enabled

    @property
    def url_blocklist(self):
        """Gets the url_blocklist of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the blocked URL list.  # noqa: E501

        :return: The url_blocklist of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._url_blocklist

    @url_blocklist.setter
    def url_blocklist(self, url_blocklist):
        """Sets the url_blocklist of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the blocked URL list.  # noqa: E501

        :param url_blocklist: The url_blocklist of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._url_blocklist = url_blocklist

    @property
    def url_allowlist(self):
        """Gets the url_allowlist of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the allowed URL list.  # noqa: E501

        :return: The url_allowlist of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._url_allowlist

    @url_allowlist.setter
    def url_allowlist(self, url_allowlist):
        """Sets the url_allowlist of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the allowed URL list.  # noqa: E501

        :param url_allowlist: The url_allowlist of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._url_allowlist = url_allowlist

    @property
    def vendor_keys_enabled(self):
        """Gets the vendor_keys_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [vendor keys enabled].  # noqa: E501

        :return: The vendor_keys_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._vendor_keys_enabled

    @vendor_keys_enabled.setter
    def vendor_keys_enabled(self, vendor_keys_enabled):
        """Sets the vendor_keys_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [vendor keys enabled].  # noqa: E501

        :param vendor_keys_enabled: The vendor_keys_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._vendor_keys_enabled = vendor_keys_enabled

    @property
    def vendor_config_key(self):
        """Gets the vendor_config_key of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the vendor configuration key.  # noqa: E501

        :return: The vendor_config_key of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._vendor_config_key

    @vendor_config_key.setter
    def vendor_config_key(self, vendor_config_key):
        """Sets the vendor_config_key of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the vendor configuration key.  # noqa: E501

        :param vendor_config_key: The vendor_config_key of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._vendor_config_key = vendor_config_key

    @property
    def vendor_config_value(self):
        """Gets the vendor_config_value of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the vendor configuration value.  # noqa: E501

        :return: The vendor_config_value of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._vendor_config_value

    @vendor_config_value.setter
    def vendor_config_value(self, vendor_config_value):
        """Sets the vendor_config_value of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the vendor configuration value.  # noqa: E501

        :param vendor_config_value: The vendor_config_value of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._vendor_config_value = vendor_config_value

    @property
    def proxy_mode(self):
        """Gets the proxy_mode of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the proxy mode.  # noqa: E501

        :return: The proxy_mode of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._proxy_mode

    @proxy_mode.setter
    def proxy_mode(self, proxy_mode):
        """Sets the proxy_mode of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the proxy mode.  # noqa: E501

        :param proxy_mode: The proxy_mode of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._proxy_mode = proxy_mode

    @property
    def proxy_server(self):
        """Gets the proxy_server of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the proxy server.  # noqa: E501

        :return: The proxy_server of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._proxy_server

    @proxy_server.setter
    def proxy_server(self, proxy_server):
        """Sets the proxy_server of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the proxy server.  # noqa: E501

        :param proxy_server: The proxy_server of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._proxy_server = proxy_server

    @property
    def proxy_pac_url(self):
        """Gets the proxy_pac_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the proxy pac URL.  # noqa: E501

        :return: The proxy_pac_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._proxy_pac_url

    @proxy_pac_url.setter
    def proxy_pac_url(self, proxy_pac_url):
        """Sets the proxy_pac_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the proxy pac URL.  # noqa: E501

        :param proxy_pac_url: The proxy_pac_url of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._proxy_pac_url = proxy_pac_url

    @property
    def proxy_bypass_list(self):
        """Gets the proxy_bypass_list of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the proxy bypass list.  # noqa: E501

        :return: The proxy_bypass_list of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._proxy_bypass_list

    @proxy_bypass_list.setter
    def proxy_bypass_list(self, proxy_bypass_list):
        """Sets the proxy_bypass_list of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the proxy bypass list.  # noqa: E501

        :param proxy_bypass_list: The proxy_bypass_list of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._proxy_bypass_list = proxy_bypass_list

    @property
    def force_google_safe_search(self):
        """Gets the force_google_safe_search of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [force google safe search].  # noqa: E501

        :return: The force_google_safe_search of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._force_google_safe_search

    @force_google_safe_search.setter
    def force_google_safe_search(self, force_google_safe_search):
        """Sets the force_google_safe_search of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [force google safe search].  # noqa: E501

        :param force_google_safe_search: The force_google_safe_search of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._force_google_safe_search = force_google_safe_search

    @property
    def force_you_tube_safety_mode(self):
        """Gets the force_you_tube_safety_mode of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [force you tube safety mode].  # noqa: E501

        :return: The force_you_tube_safety_mode of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._force_you_tube_safety_mode

    @force_you_tube_safety_mode.setter
    def force_you_tube_safety_mode(self, force_you_tube_safety_mode):
        """Sets the force_you_tube_safety_mode of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [force you tube safety mode].  # noqa: E501

        :param force_you_tube_safety_mode: The force_you_tube_safety_mode of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._force_you_tube_safety_mode = force_you_tube_safety_mode

    @property
    def contextual_search_enabled(self):
        """Gets the contextual_search_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [contextual search enabled].  # noqa: E501

        :return: The contextual_search_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._contextual_search_enabled

    @contextual_search_enabled.setter
    def contextual_search_enabled(self, contextual_search_enabled):
        """Sets the contextual_search_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [contextual search enabled].  # noqa: E501

        :param contextual_search_enabled: The contextual_search_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._contextual_search_enabled = contextual_search_enabled

    @property
    def printing_enabled(self):
        """Gets the printing_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether [printing enabled].  # noqa: E501

        :return: The printing_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._printing_enabled

    @printing_enabled.setter
    def printing_enabled(self, printing_enabled):
        """Sets the printing_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets a value indicating whether [printing enabled].  # noqa: E501

        :param printing_enabled: The printing_enabled of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._printing_enabled = printing_enabled

    @property
    def managed_bookmarks(self):
        """Gets the managed_bookmarks of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the managed bookmarks.  # noqa: E501

        :return: The managed_bookmarks of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: list[str]
        """
        return self._managed_bookmarks

    @managed_bookmarks.setter
    def managed_bookmarks(self, managed_bookmarks):
        """Sets the managed_bookmarks of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the managed bookmarks.  # noqa: E501

        :param managed_bookmarks: The managed_bookmarks of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: list[str]
        """

        self._managed_bookmarks = managed_bookmarks

    @property
    def ssl_version_min(self):
        """Gets the ssl_version_min of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the SSL version minimum.  # noqa: E501

        :return: The ssl_version_min of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._ssl_version_min

    @ssl_version_min.setter
    def ssl_version_min(self, ssl_version_min):
        """Sets the ssl_version_min of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the SSL version minimum.  # noqa: E501

        :param ssl_version_min: The ssl_version_min of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._ssl_version_min = ssl_version_min

    @property
    def ssl_version_fallback_min(self):
        """Gets the ssl_version_fallback_min of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501

        Gets or sets the SSL version fallback minimum.  # noqa: E501

        :return: The ssl_version_fallback_min of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._ssl_version_fallback_min

    @ssl_version_fallback_min.setter
    def ssl_version_fallback_min(self, ssl_version_fallback_min):
        """Sets the ssl_version_fallback_min of this AndroidForWorkChromeBrowserPayloadV2Entity_.

        Gets or sets the SSL version fallback minimum.  # noqa: E501

        :param ssl_version_fallback_min: The ssl_version_fallback_min of this AndroidForWorkChromeBrowserPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._ssl_version_fallback_min = ssl_version_fallback_min

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AndroidForWorkChromeBrowserPayloadV2Entity_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AndroidForWorkChromeBrowserPayloadV2Entity_):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AndroidForWorkChromeBrowserPayloadV2Entity_):
            return True

        return self.to_dict() != other.to_dict()

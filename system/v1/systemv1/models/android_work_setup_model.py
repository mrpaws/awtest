# coding: utf-8

"""
    System API V1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from systemv1.configuration import Configuration


class AndroidWorkSetupModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'service_account_email': 'str',
        'service_account_client_id': 'str',
        'service_account_admin_email': 'str',
        'enterprise_id': 'str',
        'android_work_set_up_mode': 'str',
        'certificate_subject_name': 'str',
        'primary_domain': 'str',
        'id': 'int',
        'uuid': 'str'
    }

    attribute_map = {
        'service_account_email': 'ServiceAccountEmail',
        'service_account_client_id': 'ServiceAccountClientId',
        'service_account_admin_email': 'ServiceAccountAdminEmail',
        'enterprise_id': 'EnterpriseId',
        'android_work_set_up_mode': 'AndroidWorkSetUpMode',
        'certificate_subject_name': 'CertificateSubjectName',
        'primary_domain': 'PrimaryDomain',
        'id': 'id',
        'uuid': 'uuid'
    }

    def __init__(self, service_account_email=None, service_account_client_id=None, service_account_admin_email=None, enterprise_id=None, android_work_set_up_mode=None, certificate_subject_name=None, primary_domain=None, id=None, uuid=None, _configuration=None):  # noqa: E501
        """AndroidWorkSetupModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._service_account_email = None
        self._service_account_client_id = None
        self._service_account_admin_email = None
        self._enterprise_id = None
        self._android_work_set_up_mode = None
        self._certificate_subject_name = None
        self._primary_domain = None
        self._id = None
        self._uuid = None
        self.discriminator = None

        if service_account_email is not None:
            self.service_account_email = service_account_email
        if service_account_client_id is not None:
            self.service_account_client_id = service_account_client_id
        if service_account_admin_email is not None:
            self.service_account_admin_email = service_account_admin_email
        if enterprise_id is not None:
            self.enterprise_id = enterprise_id
        if android_work_set_up_mode is not None:
            self.android_work_set_up_mode = android_work_set_up_mode
        if certificate_subject_name is not None:
            self.certificate_subject_name = certificate_subject_name
        if primary_domain is not None:
            self.primary_domain = primary_domain
        if id is not None:
            self.id = id
        if uuid is not None:
            self.uuid = uuid

    @property
    def service_account_email(self):
        """Gets the service_account_email of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets Service account email for AFW.  # noqa: E501

        :return: The service_account_email of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: str
        """
        return self._service_account_email

    @service_account_email.setter
    def service_account_email(self, service_account_email):
        """Sets the service_account_email of this AndroidWorkSetupModel.

        Gets or sets Service account email for AFW.  # noqa: E501

        :param service_account_email: The service_account_email of this AndroidWorkSetupModel.  # noqa: E501
        :type: str
        """

        self._service_account_email = service_account_email

    @property
    def service_account_client_id(self):
        """Gets the service_account_client_id of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets the Client Id for Afw.  # noqa: E501

        :return: The service_account_client_id of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: str
        """
        return self._service_account_client_id

    @service_account_client_id.setter
    def service_account_client_id(self, service_account_client_id):
        """Sets the service_account_client_id of this AndroidWorkSetupModel.

        Gets or sets the Client Id for Afw.  # noqa: E501

        :param service_account_client_id: The service_account_client_id of this AndroidWorkSetupModel.  # noqa: E501
        :type: str
        """

        self._service_account_client_id = service_account_client_id

    @property
    def service_account_admin_email(self):
        """Gets the service_account_admin_email of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets the service account admin email address.  # noqa: E501

        :return: The service_account_admin_email of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: str
        """
        return self._service_account_admin_email

    @service_account_admin_email.setter
    def service_account_admin_email(self, service_account_admin_email):
        """Sets the service_account_admin_email of this AndroidWorkSetupModel.

        Gets or sets the service account admin email address.  # noqa: E501

        :param service_account_admin_email: The service_account_admin_email of this AndroidWorkSetupModel.  # noqa: E501
        :type: str
        """

        self._service_account_admin_email = service_account_admin_email

    @property
    def enterprise_id(self):
        """Gets the enterprise_id of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets the enterprise ID.  # noqa: E501

        :return: The enterprise_id of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: str
        """
        return self._enterprise_id

    @enterprise_id.setter
    def enterprise_id(self, enterprise_id):
        """Sets the enterprise_id of this AndroidWorkSetupModel.

        Gets or sets the enterprise ID.  # noqa: E501

        :param enterprise_id: The enterprise_id of this AndroidWorkSetupModel.  # noqa: E501
        :type: str
        """

        self._enterprise_id = enterprise_id

    @property
    def android_work_set_up_mode(self):
        """Gets the android_work_set_up_mode of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets the android work set up mode.  # noqa: E501

        :return: The android_work_set_up_mode of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: str
        """
        return self._android_work_set_up_mode

    @android_work_set_up_mode.setter
    def android_work_set_up_mode(self, android_work_set_up_mode):
        """Sets the android_work_set_up_mode of this AndroidWorkSetupModel.

        Gets or sets the android work set up mode.  # noqa: E501

        :param android_work_set_up_mode: The android_work_set_up_mode of this AndroidWorkSetupModel.  # noqa: E501
        :type: str
        """

        self._android_work_set_up_mode = android_work_set_up_mode

    @property
    def certificate_subject_name(self):
        """Gets the certificate_subject_name of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets the android work set up mode.  # noqa: E501

        :return: The certificate_subject_name of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: str
        """
        return self._certificate_subject_name

    @certificate_subject_name.setter
    def certificate_subject_name(self, certificate_subject_name):
        """Sets the certificate_subject_name of this AndroidWorkSetupModel.

        Gets or sets the android work set up mode.  # noqa: E501

        :param certificate_subject_name: The certificate_subject_name of this AndroidWorkSetupModel.  # noqa: E501
        :type: str
        """

        self._certificate_subject_name = certificate_subject_name

    @property
    def primary_domain(self):
        """Gets the primary_domain of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets GSuite domain.  # noqa: E501

        :return: The primary_domain of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: str
        """
        return self._primary_domain

    @primary_domain.setter
    def primary_domain(self, primary_domain):
        """Sets the primary_domain of this AndroidWorkSetupModel.

        Gets or sets GSuite domain.  # noqa: E501

        :param primary_domain: The primary_domain of this AndroidWorkSetupModel.  # noqa: E501
        :type: str
        """

        self._primary_domain = primary_domain

    @property
    def id(self):
        """Gets the id of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets identifier.  # noqa: E501

        :return: The id of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AndroidWorkSetupModel.

        Gets or sets identifier.  # noqa: E501

        :param id: The id of this AndroidWorkSetupModel.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def uuid(self):
        """Gets the uuid of this AndroidWorkSetupModel.  # noqa: E501

        Gets or sets current objects UUID.  # noqa: E501

        :return: The uuid of this AndroidWorkSetupModel.  # noqa: E501
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this AndroidWorkSetupModel.

        Gets or sets current objects UUID.  # noqa: E501

        :param uuid: The uuid of this AndroidWorkSetupModel.  # noqa: E501
        :type: str
        """

        self._uuid = uuid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AndroidWorkSetupModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AndroidWorkSetupModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AndroidWorkSetupModel):
            return True

        return self.to_dict() != other.to_dict()

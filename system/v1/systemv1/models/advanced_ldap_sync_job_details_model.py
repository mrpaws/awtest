# coding: utf-8

"""
    System API V1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from systemv1.configuration import Configuration


class AdvancedLdapSyncJobDetailsModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'advanced_ldap_sync_job_uuid': 'str',
        'advanced_ldap_sync_job_status': 'int',
        'created_by': 'str',
        'created_date': 'datetime',
        'modified_by': 'str',
        'modified_date': 'datetime'
    }

    attribute_map = {
        'advanced_ldap_sync_job_uuid': 'advanced_ldap_sync_job_uuid',
        'advanced_ldap_sync_job_status': 'advanced_ldap_sync_job_status',
        'created_by': 'created_by',
        'created_date': 'created_date',
        'modified_by': 'modified_by',
        'modified_date': 'modified_date'
    }

    def __init__(self, advanced_ldap_sync_job_uuid=None, advanced_ldap_sync_job_status=None, created_by=None, created_date=None, modified_by=None, modified_date=None, _configuration=None):  # noqa: E501
        """AdvancedLdapSyncJobDetailsModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._advanced_ldap_sync_job_uuid = None
        self._advanced_ldap_sync_job_status = None
        self._created_by = None
        self._created_date = None
        self._modified_by = None
        self._modified_date = None
        self.discriminator = None

        if advanced_ldap_sync_job_uuid is not None:
            self.advanced_ldap_sync_job_uuid = advanced_ldap_sync_job_uuid
        if advanced_ldap_sync_job_status is not None:
            self.advanced_ldap_sync_job_status = advanced_ldap_sync_job_status
        if created_by is not None:
            self.created_by = created_by
        if created_date is not None:
            self.created_date = created_date
        if modified_by is not None:
            self.modified_by = modified_by
        if modified_date is not None:
            self.modified_date = modified_date

    @property
    def advanced_ldap_sync_job_uuid(self):
        """Gets the advanced_ldap_sync_job_uuid of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501

        Id number for advance ldap sync job.  # noqa: E501

        :return: The advanced_ldap_sync_job_uuid of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :rtype: str
        """
        return self._advanced_ldap_sync_job_uuid

    @advanced_ldap_sync_job_uuid.setter
    def advanced_ldap_sync_job_uuid(self, advanced_ldap_sync_job_uuid):
        """Sets the advanced_ldap_sync_job_uuid of this AdvancedLdapSyncJobDetailsModel.

        Id number for advance ldap sync job.  # noqa: E501

        :param advanced_ldap_sync_job_uuid: The advanced_ldap_sync_job_uuid of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :type: str
        """

        self._advanced_ldap_sync_job_uuid = advanced_ldap_sync_job_uuid

    @property
    def advanced_ldap_sync_job_status(self):
        """Gets the advanced_ldap_sync_job_status of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501

        The status of the advanced ldap sync job process.  # noqa: E501

        :return: The advanced_ldap_sync_job_status of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :rtype: int
        """
        return self._advanced_ldap_sync_job_status

    @advanced_ldap_sync_job_status.setter
    def advanced_ldap_sync_job_status(self, advanced_ldap_sync_job_status):
        """Sets the advanced_ldap_sync_job_status of this AdvancedLdapSyncJobDetailsModel.

        The status of the advanced ldap sync job process.  # noqa: E501

        :param advanced_ldap_sync_job_status: The advanced_ldap_sync_job_status of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :type: int
        """
        allowed_values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  # noqa: E501
        if (self._configuration.client_side_validation and
                advanced_ldap_sync_job_status not in allowed_values):
            raise ValueError(
                "Invalid value for `advanced_ldap_sync_job_status` ({0}), must be one of {1}"  # noqa: E501
                .format(advanced_ldap_sync_job_status, allowed_values)
            )

        self._advanced_ldap_sync_job_status = advanced_ldap_sync_job_status

    @property
    def created_by(self):
        """Gets the created_by of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501

        Name of the user created the job.  # noqa: E501

        :return: The created_by of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this AdvancedLdapSyncJobDetailsModel.

        Name of the user created the job.  # noqa: E501

        :param created_by: The created_by of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def created_date(self):
        """Gets the created_date of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501

        Timestamp of the job is created.  # noqa: E501

        :return: The created_date of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this AdvancedLdapSyncJobDetailsModel.

        Timestamp of the job is created.  # noqa: E501

        :param created_date: The created_date of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :type: datetime
        """

        self._created_date = created_date

    @property
    def modified_by(self):
        """Gets the modified_by of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501

        Name of the user modified the job.  # noqa: E501

        :return: The modified_by of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :rtype: str
        """
        return self._modified_by

    @modified_by.setter
    def modified_by(self, modified_by):
        """Sets the modified_by of this AdvancedLdapSyncJobDetailsModel.

        Name of the user modified the job.  # noqa: E501

        :param modified_by: The modified_by of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :type: str
        """

        self._modified_by = modified_by

    @property
    def modified_date(self):
        """Gets the modified_date of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501

        Timestamp of the job is modified.  # noqa: E501

        :return: The modified_date of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this AdvancedLdapSyncJobDetailsModel.

        Timestamp of the job is modified.  # noqa: E501

        :param modified_date: The modified_date of this AdvancedLdapSyncJobDetailsModel.  # noqa: E501
        :type: datetime
        """

        self._modified_date = modified_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AdvancedLdapSyncJobDetailsModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdvancedLdapSyncJobDetailsModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AdvancedLdapSyncJobDetailsModel):
            return True

        return self.to_dict() != other.to_dict()

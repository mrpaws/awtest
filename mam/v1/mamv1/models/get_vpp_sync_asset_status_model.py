# coding: utf-8

"""
    MAM API V1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mamv1.configuration import Configuration


class GetVppSyncAssetStatusModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'modified_by': 'str',
        'modified_on': 'datetime',
        'created_by': 'str',
        'created_on': 'datetime',
        'batch_status': 'StatusModel'
    }

    attribute_map = {
        'modified_by': 'ModifiedBy',
        'modified_on': 'ModifiedOn',
        'created_by': 'CreatedBy',
        'created_on': 'CreatedOn',
        'batch_status': 'BatchStatus'
    }

    def __init__(self, modified_by=None, modified_on=None, created_by=None, created_on=None, batch_status=None, _configuration=None):  # noqa: E501
        """GetVppSyncAssetStatusModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._modified_by = None
        self._modified_on = None
        self._created_by = None
        self._created_on = None
        self._batch_status = None
        self.discriminator = None

        if modified_by is not None:
            self.modified_by = modified_by
        if modified_on is not None:
            self.modified_on = modified_on
        if created_by is not None:
            self.created_by = created_by
        if created_on is not None:
            self.created_on = created_on
        if batch_status is not None:
            self.batch_status = batch_status

    @property
    def modified_by(self):
        """Gets the modified_by of this GetVppSyncAssetStatusModel.  # noqa: E501

        Gets or sets username who last Modified.  # noqa: E501

        :return: The modified_by of this GetVppSyncAssetStatusModel.  # noqa: E501
        :rtype: str
        """
        return self._modified_by

    @modified_by.setter
    def modified_by(self, modified_by):
        """Sets the modified_by of this GetVppSyncAssetStatusModel.

        Gets or sets username who last Modified.  # noqa: E501

        :param modified_by: The modified_by of this GetVppSyncAssetStatusModel.  # noqa: E501
        :type: str
        """

        self._modified_by = modified_by

    @property
    def modified_on(self):
        """Gets the modified_on of this GetVppSyncAssetStatusModel.  # noqa: E501

        Gets or sets last Modified Date and time.  # noqa: E501

        :return: The modified_on of this GetVppSyncAssetStatusModel.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_on

    @modified_on.setter
    def modified_on(self, modified_on):
        """Sets the modified_on of this GetVppSyncAssetStatusModel.

        Gets or sets last Modified Date and time.  # noqa: E501

        :param modified_on: The modified_on of this GetVppSyncAssetStatusModel.  # noqa: E501
        :type: datetime
        """

        self._modified_on = modified_on

    @property
    def created_by(self):
        """Gets the created_by of this GetVppSyncAssetStatusModel.  # noqa: E501

        Gets or sets username Created VPP Sync batch.  # noqa: E501

        :return: The created_by of this GetVppSyncAssetStatusModel.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this GetVppSyncAssetStatusModel.

        Gets or sets username Created VPP Sync batch.  # noqa: E501

        :param created_by: The created_by of this GetVppSyncAssetStatusModel.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def created_on(self):
        """Gets the created_on of this GetVppSyncAssetStatusModel.  # noqa: E501

        Gets or sets created Date and time.  # noqa: E501

        :return: The created_on of this GetVppSyncAssetStatusModel.  # noqa: E501
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this GetVppSyncAssetStatusModel.

        Gets or sets created Date and time.  # noqa: E501

        :param created_on: The created_on of this GetVppSyncAssetStatusModel.  # noqa: E501
        :type: datetime
        """

        self._created_on = created_on

    @property
    def batch_status(self):
        """Gets the batch_status of this GetVppSyncAssetStatusModel.  # noqa: E501

        Gets or sets vPP sync Batch status.  # noqa: E501

        :return: The batch_status of this GetVppSyncAssetStatusModel.  # noqa: E501
        :rtype: StatusModel
        """
        return self._batch_status

    @batch_status.setter
    def batch_status(self, batch_status):
        """Sets the batch_status of this GetVppSyncAssetStatusModel.

        Gets or sets vPP sync Batch status.  # noqa: E501

        :param batch_status: The batch_status of this GetVppSyncAssetStatusModel.  # noqa: E501
        :type: StatusModel
        """

        self._batch_status = batch_status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetVppSyncAssetStatusModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetVppSyncAssetStatusModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetVppSyncAssetStatusModel):
            return True

        return self.to_dict() != other.to_dict()

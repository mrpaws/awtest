# coding: utf-8

"""
    MDM API V1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv1.configuration import Configuration


class WorkflowEntitySearchListItemResponseV1Model(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'workflow_uuid': 'str',
        'name': 'str',
        'description': 'str',
        'version': 'str',
        'created_on': 'datetime',
        'entity_version': 'str',
        'assignment_group_uuids': 'list[str]'
    }

    attribute_map = {
        'workflow_uuid': 'workflow_uuid',
        'name': 'name',
        'description': 'description',
        'version': 'version',
        'created_on': 'created_on',
        'entity_version': 'entity_version',
        'assignment_group_uuids': 'assignment_group_uuids'
    }

    def __init__(self, workflow_uuid=None, name=None, description=None, version=None, created_on=None, entity_version=None, assignment_group_uuids=None, _configuration=None):  # noqa: E501
        """WorkflowEntitySearchListItemResponseV1Model - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._workflow_uuid = None
        self._name = None
        self._description = None
        self._version = None
        self._created_on = None
        self._entity_version = None
        self._assignment_group_uuids = None
        self.discriminator = None

        if workflow_uuid is not None:
            self.workflow_uuid = workflow_uuid
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if version is not None:
            self.version = version
        if created_on is not None:
            self.created_on = created_on
        if entity_version is not None:
            self.entity_version = entity_version
        if assignment_group_uuids is not None:
            self.assignment_group_uuids = assignment_group_uuids

    @property
    def workflow_uuid(self):
        """Gets the workflow_uuid of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501

        Identifier of the workflow.  # noqa: E501

        :return: The workflow_uuid of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :rtype: str
        """
        return self._workflow_uuid

    @workflow_uuid.setter
    def workflow_uuid(self, workflow_uuid):
        """Sets the workflow_uuid of this WorkflowEntitySearchListItemResponseV1Model.

        Identifier of the workflow.  # noqa: E501

        :param workflow_uuid: The workflow_uuid of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :type: str
        """

        self._workflow_uuid = workflow_uuid

    @property
    def name(self):
        """Gets the name of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501

        Name of the workflow.  # noqa: E501

        :return: The name of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WorkflowEntitySearchListItemResponseV1Model.

        Name of the workflow.  # noqa: E501

        :param name: The name of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501

        Description of the workflow.  # noqa: E501

        :return: The description of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this WorkflowEntitySearchListItemResponseV1Model.

        Description of the workflow.  # noqa: E501

        :param description: The description of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def version(self):
        """Gets the version of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501

        Workflow version.  # noqa: E501

        :return: The version of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this WorkflowEntitySearchListItemResponseV1Model.

        Workflow version.  # noqa: E501

        :param version: The version of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def created_on(self):
        """Gets the created_on of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501

        The date when the workflow was created.  # noqa: E501

        :return: The created_on of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this WorkflowEntitySearchListItemResponseV1Model.

        The date when the workflow was created.  # noqa: E501

        :param created_on: The created_on of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :type: datetime
        """

        self._created_on = created_on

    @property
    def entity_version(self):
        """Gets the entity_version of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501

        The version of the entity.  # noqa: E501

        :return: The entity_version of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :rtype: str
        """
        return self._entity_version

    @entity_version.setter
    def entity_version(self, entity_version):
        """Sets the entity_version of this WorkflowEntitySearchListItemResponseV1Model.

        The version of the entity.  # noqa: E501

        :param entity_version: The entity_version of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :type: str
        """

        self._entity_version = entity_version

    @property
    def assignment_group_uuids(self):
        """Gets the assignment_group_uuids of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501

        The assignment group UUIDs to which this workflow is assigned.  # noqa: E501

        :return: The assignment_group_uuids of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :rtype: list[str]
        """
        return self._assignment_group_uuids

    @assignment_group_uuids.setter
    def assignment_group_uuids(self, assignment_group_uuids):
        """Sets the assignment_group_uuids of this WorkflowEntitySearchListItemResponseV1Model.

        The assignment group UUIDs to which this workflow is assigned.  # noqa: E501

        :param assignment_group_uuids: The assignment_group_uuids of this WorkflowEntitySearchListItemResponseV1Model.  # noqa: E501
        :type: list[str]
        """

        self._assignment_group_uuids = assignment_group_uuids

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WorkflowEntitySearchListItemResponseV1Model, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WorkflowEntitySearchListItemResponseV1Model):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, WorkflowEntitySearchListItemResponseV1Model):
            return True

        return self.to_dict() != other.to_dict()

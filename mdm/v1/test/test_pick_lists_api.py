# coding: utf-8

"""
    MDM API V1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import mdmv1
from mdmv1.api.pick_lists_api import PickListsApi  # noqa: E501
from mdmv1.rest import ApiException


class TestPickListsApi(unittest.TestCase):
    """PickListsApi unit test stubs"""

    def setUp(self):
        self.api = mdmv1.api.pick_lists_api.PickListsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_pick_lists_get_allowed_geo_fencing_area_ids_by_lg(self):
        """Test case for pick_lists_get_allowed_geo_fencing_area_ids_by_lg

        Gets Geo Fencing Areas by Og Id.  # noqa: E501
        """
        pass

    def test_pick_lists_get_allowed_time_fencing_schedule_ids_by_lg(self):
        """Test case for pick_lists_get_allowed_time_fencing_schedule_ids_by_lg

        Gets Allowed Time Fencing Schedules by Og Id.  # noqa: E501
        """
        pass

    def test_pick_lists_get_certificate_authority_list(self):
        """Test case for pick_lists_get_certificate_authority_list

        Gets the list of Certificate Authorities (CA) for an organization group.  # noqa: E501
        """
        pass

    def test_pick_lists_get_certificate_store_for_windows_mobile(self):
        """Test case for pick_lists_get_certificate_store_for_windows_mobile

        Gets Certificate Store for WindowsMobile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_certificate_templates_for_certificate_authority(self):
        """Test case for pick_lists_get_certificate_templates_for_certificate_authority

        Gets Certificate Templates List for Certificate Authority.  # noqa: E501
        """
        pass

    def test_pick_lists_get_certificate_templates_list_for_certificate_authority(self):
        """Test case for pick_lists_get_certificate_templates_list_for_certificate_authority

        Gets the list of Certificate Templates for a Certificate Authority (CA).  # noqa: E501
        """
        pass

    def test_pick_lists_get_credential_certificate_store_for_windows_pc(self):
        """Test case for pick_lists_get_credential_certificate_store_for_windows_pc

        Returns Crdential Certificate Store for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_credential_smime_for_apple(self):
        """Test case for pick_lists_get_credential_smime_for_apple

        Gets the values that can be configured for the Credential Smime(Smime) for Apple Credentials profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_credential_source_for_android(self):
        """Test case for pick_lists_get_credential_source_for_android

        Gets Credential Source for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_credential_source_for_apple(self):
        """Test case for pick_lists_get_credential_source_for_apple

        Gets the values that can be configured for Credential Source(CertificateSource) for Apple Credentials profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_credential_source_for_apple_os_x(self):
        """Test case for pick_lists_get_credential_source_for_apple_os_x

        Gets valid CredentialSources(CertificateSource) for Apple macOS platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_credential_source_for_windows_mobile(self):
        """Test case for pick_lists_get_credential_source_for_windows_mobile

        Gets Credential Source for WindowsMobile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_credential_source_for_windows_pc(self):
        """Test case for pick_lists_get_credential_source_for_windows_pc

        Returns Crdential Source for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_credential_store_location_for_windows_pc(self):
        """Test case for pick_lists_get_credential_store_location_for_windows_pc

        Returns Crdential Store Location for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_device_category_list(self):
        """Test case for pick_lists_get_device_category_list

        Gets device category list.  # noqa: E501
        """
        pass

    def test_pick_lists_get_device_model_list(self):
        """Test case for pick_lists_get_device_model_list

        Gets device model list.  # noqa: E501
        """
        pass

    def test_pick_lists_get_device_type_list(self):
        """Test case for pick_lists_get_device_type_list

        Gets device type list.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_authentication_type_for_android(self):
        """Test case for pick_lists_get_eas_authentication_type_for_android

        Gets Eas Authentication Type for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_auto_lock_for_android(self):
        """Test case for pick_lists_get_eas_auto_lock_for_android

        Gets Eas Auto Lock for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_aw_email_client_complexity_for_apple(self):
        """Test case for pick_lists_get_eas_aw_email_client_complexity_for_apple

        Gets EAS AW Email Client Passcode Complexity for Apple.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_aw_email_client_email_notifications_for_apple(self):
        """Test case for pick_lists_get_eas_aw_email_client_email_notifications_for_apple

        Gets EAS AW Email Client Email Notifications(Notifications) for Apple AirWatch EAS profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_aw_email_client_history_for_apple(self):
        """Test case for pick_lists_get_eas_aw_email_client_history_for_apple

        Gets EAS AW Email Client Passcode History for Apple.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_aw_email_client_max_number_of_failed_attempts_for_apple(self):
        """Test case for pick_lists_get_eas_aw_email_client_max_number_of_failed_attempts_for_apple

        Gets EAS AW Email Client Maximum Failed Attempts for Apple.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_aw_email_client_passcode_type_for_apple(self):
        """Test case for pick_lists_get_eas_aw_email_client_passcode_type_for_apple

        Gets EAS AW Email Client Passcode Type for Apple.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_aw_email_client_past_days_of_calendar_to_sync_for_apple(self):
        """Test case for pick_lists_get_eas_aw_email_client_past_days_of_calendar_to_sync_for_apple

        Gets the number of days' calendar to sync.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_aw_email_client_past_days_of_mail_to_sync_for_apple(self):
        """Test case for pick_lists_get_eas_aw_email_client_past_days_of_mail_to_sync_for_apple

        Gets the number of days' mail to sync.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_aw_email_client_sync_interval_for_apple(self):
        """Test case for pick_lists_get_eas_aw_email_client_sync_interval_for_apple

        SyncInterval determines the sync interval for the email.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_calendar_application_for_android(self):
        """Test case for pick_lists_get_eas_calendar_application_for_android

        Gets Eas Calendar Application for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_contacts_application_for_android(self):
        """Test case for pick_lists_get_eas_contacts_application_for_android

        Gets Eas Contacts Application for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_mail_client_for_android(self):
        """Test case for pick_lists_get_eas_mail_client_for_android

        Gets Eas Mail Client for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_maximum_passcode_age_for_android(self):
        """Test case for pick_lists_get_eas_maximum_passcode_age_for_android

        Gets Eas Maximum Passcode Age for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_minimum_passcode_length_for_android(self):
        """Test case for pick_lists_get_eas_minimum_passcode_length_for_android

        Gets Eas Minimum Passcode length for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_passcode_complexity_for_android(self):
        """Test case for pick_lists_get_eas_passcode_complexity_for_android

        Gets Eas Passcode Complexity for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_past_days_of_calendar_to_sync_for_android(self):
        """Test case for pick_lists_get_eas_past_days_of_calendar_to_sync_for_android

        Gets Eas past days of calendar to sync for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_past_days_of_mail_to_sync_for_android(self):
        """Test case for pick_lists_get_eas_past_days_of_mail_to_sync_for_android

        Gets Eas past days of mail to sync for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_past_days_of_mail_to_sync_for_apple(self):
        """Test case for pick_lists_get_eas_past_days_of_mail_to_sync_for_apple

        Gets the the number of days' mail to be synced.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_peak_time_for_android(self):
        """Test case for pick_lists_get_eas_peak_time_for_android

        Gets Eas Peak Time for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_restriction_type_for_android(self):
        """Test case for pick_lists_get_eas_restriction_type_for_android

        Gets Eas Restriction Type for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_sync_interval_for_android(self):
        """Test case for pick_lists_get_eas_sync_interval_for_android

        Gets Eas Sync Interval for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_eas_sync_schedule_for_android(self):
        """Test case for pick_lists_get_eas_sync_schedule_for_android

        Gets Eas Sync Schedule for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_email_account_type_for_apple(self):
        """Test case for pick_lists_get_email_account_type_for_apple

        Gets the values that can be configured for Email Account Type(EmailAccountType).  # noqa: E501
        """
        pass

    def test_pick_lists_get_email_account_type_for_apple_os_x(self):
        """Test case for pick_lists_get_email_account_type_for_apple_os_x

        Gets valid Email Account types for Apple macOS Platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_email_authentication_type_for_apple_os_x(self):
        """Test case for pick_lists_get_email_authentication_type_for_apple_os_x

        Gets valid Email Authentication Types for Apple macOS Platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_email_sync_interval_for_android(self):
        """Test case for pick_lists_get_email_sync_interval_for_android

        Gets E-Mail Sync Intervals for android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_encrypted_volume_for_windows_pc(self):
        """Test case for pick_lists_get_encrypted_volume_for_windows_pc

        Returns Encrypted volume for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_font_size_for_android(self):
        """Test case for pick_lists_get_font_size_for_android

        Gets Font Size for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_grace_period_for_passcode_change_for_android(self):
        """Test case for pick_lists_get_grace_period_for_passcode_change_for_android

        Gets Android Grace Period for Passcode change.  # noqa: E501
        """
        pass

    def test_pick_lists_get_important_updates_for_windows_pc(self):
        """Test case for pick_lists_get_important_updates_for_windows_pc

        Returns Important Updates for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_incoming_mail_server_authentication_for_apple(self):
        """Test case for pick_lists_get_incoming_mail_server_authentication_for_apple

        Gets the values that can be configured for Incoming mail server authentication(IncomingMailServerAuthentication).  # noqa: E501
        """
        pass

    def test_pick_lists_get_incoming_mail_server_protocol_for_android(self):
        """Test case for pick_lists_get_incoming_mail_server_protocol_for_android

        Gets Incomming Mail Server Protocol for android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_inner_identity_for_apple(self):
        """Test case for pick_lists_get_inner_identity_for_apple

        Gets the values that can be configured for inner authentication(TTLSInnerAuthentication) in Apple WIFI profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_machine_authentication_for_apple(self):
        """Test case for pick_lists_get_machine_authentication_for_apple

        Gets values that can be configured for Machine Authentication (IPSecAuthenticationMode) for Apple VPN profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_max_mails_to_show_for_android(self):
        """Test case for pick_lists_get_max_mails_to_show_for_android

        Gets Maximum E-mails to show for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_min_wifi_security_for_android(self):
        """Test case for pick_lists_get_min_wifi_security_for_android

        Gets Minimum Wifi Security for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_network_inner_identity_for_apple_os_x(self):
        """Test case for pick_lists_get_network_inner_identity_for_apple_os_x

        Gets Network Inner Identity of TTLS protocol in Apple macOS Wi-Fi payload.  # noqa: E501
        """
        pass

    def test_pick_lists_get_network_interface_for_apple_os_x(self):
        """Test case for pick_lists_get_network_interface_for_apple_os_x

        Gets Network Interfaces for Apple macOS Platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_network_proxy_types_for_apple_os_x(self):
        """Test case for pick_lists_get_network_proxy_types_for_apple_os_x

        Gets Valid ProxyTypes for Apple macOS Wi-Fi Payload.  # noqa: E501
        """
        pass

    def test_pick_lists_get_network_security_type_for_apple_os_x(self):
        """Test case for pick_lists_get_network_security_type_for_apple_os_x

        Gets Network Security Protocols for Apple macOS Wi-Fi payload.  # noqa: E501
        """
        pass

    def test_pick_lists_get_operating_system_list(self):
        """Test case for pick_lists_get_operating_system_list

        Gets operating systems list.  # noqa: E501
        """
        pass

    def test_pick_lists_get_outgoing_mail_server_authentication_for_apple(self):
        """Test case for pick_lists_get_outgoing_mail_server_authentication_for_apple

        Gets the values that can be configured for Outgoing mail server authentication(IncomingMailServerAuthentication).  # noqa: E501
        """
        pass

    def test_pick_lists_get_outgoing_mail_server_protocol_for_android(self):
        """Test case for pick_lists_get_outgoing_mail_server_protocol_for_android

        Gets Outgoing Mail Server Protocol for android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_ownership_type_list(self):
        """Test case for pick_lists_get_ownership_type_list

        Gets ownership type list.  # noqa: E501
        """
        pass

    def test_pick_lists_get_passcode_auto_lock_for_apple(self):
        """Test case for pick_lists_get_passcode_auto_lock_for_apple

        Gets the values that can be configured for passcode autolock in minutes(maxInactivity) in Apple passcode profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_passcode_auto_lock_for_apple_os_x(self):
        """Test case for pick_lists_get_passcode_auto_lock_for_apple_os_x

        Gets the values that can be configured for passcode autolock in minutes(maxInactivity) in Apple macOS passcode profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_passcode_content_for_android(self):
        """Test case for pick_lists_get_passcode_content_for_android

        Gets Passcode Content for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_passcode_grace_period_for_apple(self):
        """Test case for pick_lists_get_passcode_grace_period_for_apple

        Gets the values that can be configured for maximum grace period(maxGracePeriod) in Apple passcode profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_proxy_type_for_apple(self):
        """Test case for pick_lists_get_proxy_type_for_apple

        Gets the values that can be configured for Vpn proxy type(HTTPProxyType) in Apple VPN profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_rating_apps_for_apple(self):
        """Test case for pick_lists_get_rating_apps_for_apple

        Gets the values that can be configured for rating apps (ratingApps) in Apple Restrictions profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_rating_movies_for_apple(self):
        """Test case for pick_lists_get_rating_movies_for_apple

        Gets the values that can be configured for rating movies (ratingMovies) in Apple Restrictions profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_rating_region_for_apple(self):
        """Test case for pick_lists_get_rating_region_for_apple

        Gets the values that can be configured for rating region (ratingRegion) in Apple Restrictions profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_rating_tv_shows_for_apple(self):
        """Test case for pick_lists_get_rating_tv_shows_for_apple

        Gets the values that can be configured for rating tv shows (ratingTVShows) in Apple Restrictions profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_restriction_allowed_applications_for_apple_os_x(self):
        """Test case for pick_lists_get_restriction_allowed_applications_for_apple_os_x

        Gets eligible applications to apply restriction of Apple macOS platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_restriction_allowed_widgets_for_apple_os_x(self):
        """Test case for pick_lists_get_restriction_allowed_widgets_for_apple_os_x

        Gets eligible widgets to apply restriction of Apple macOS platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_restriction_dataconnection_for_android(self):
        """Test case for pick_lists_get_restriction_dataconnection_for_android

        Gets Restriction Data Connection for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_safari_accept_cookies_for_apple(self):
        """Test case for pick_lists_get_safari_accept_cookies_for_apple

        Gets the values that can be configured for safari accept cookies(safariAcceptCookies) in Apple Restrictions profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_scep_credential_source_for_apple(self):
        """Test case for pick_lists_get_scep_credential_source_for_apple

        Gets the values that can be configured for Credential Source(CertificateSource) for Apple SCEP profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_scep_credential_source_for_apple_os_x(self):
        """Test case for pick_lists_get_scep_credential_source_for_apple_os_x

        Gets valid Scep CredentialSorces(CertificateSource) for Apple macOS platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_security_type_for_android_wifi(self):
        """Test case for pick_lists_get_security_type_for_android_wifi

        Gets Security Type for Android Wifi.  # noqa: E501
        """
        pass

    def test_pick_lists_get_security_type_for_windows_mobile_wifi(self):
        """Test case for pick_lists_get_security_type_for_windows_mobile_wifi

        Gets Security Type for Windows Mobile Wifi.  # noqa: E501
        """
        pass

    def test_pick_lists_get_sfa_type_for_android_wifi(self):
        """Test case for pick_lists_get_sfa_type_for_android_wifi

        Gets sfa Type for Androie Wifi.  # noqa: E501
        """
        pass

    def test_pick_lists_get_smime_certificate_type_for_android(self):
        """Test case for pick_lists_get_smime_certificate_type_for_android

        Gets SMIME certificate type for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_tfa_type_for_android_wifi(self):
        """Test case for pick_lists_get_tfa_type_for_android_wifi

        Gets Tfa Type for Android Wifi.  # noqa: E501
        """
        pass

    def test_pick_lists_get_user_authentication_type_for_apple(self):
        """Test case for pick_lists_get_user_authentication_type_for_apple

        Gets the values that can be configured for User Authentication Type for Apple VPN Profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_authentication_method_for_apple(self):
        """Test case for pick_lists_get_vpn_authentication_method_for_apple

        Gets the values that can be configured for Vpn authentication method(VpnAuthenticationMethod) in Apple VPN profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_encryption_level_for_apple(self):
        """Test case for pick_lists_get_vpn_encryption_level_for_apple

        Gets values that can be configured for VPN encryption level(PP2PEncryptionLevel) for Apple VPN profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_encryption_level_for_apple_os_x(self):
        """Test case for pick_lists_get_vpn_encryption_level_for_apple_os_x

        Gets values that can be configured for VPN encryption level(PP2PEncryptionLevel) for Apple macOS VPN profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_ike_id_type_for_android(self):
        """Test case for pick_lists_get_vpn_ike_id_type_for_android

        Gets Vpn IKE ID Type for Android.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_machine_authentication_for_apple_os_x(self):
        """Test case for pick_lists_get_vpn_machine_authentication_for_apple_os_x

        Gets MachineAuthentication For Apple macOS VPN Profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_on_demand_type_for_apple_os_x(self):
        """Test case for pick_lists_get_vpn_on_demand_type_for_apple_os_x

        Gets VPN OnDemandType values for Apple macOS platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_proxy_for_apple_os_x_platform(self):
        """Test case for pick_lists_get_vpn_proxy_for_apple_os_x_platform

        Gets VPN proxy types for Apple macOS platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_type(self):
        """Test case for pick_lists_get_vpn_type

        Gets Vpn Types by Platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_vpn_user_authentication_for_apple_os_x(self):
        """Test case for pick_lists_get_vpn_user_authentication_for_apple_os_x

        Gets Valid UserAuthentication for the specified VpnType.  # noqa: E501
        """
        pass

    def test_pick_lists_get_wifi_connection_mode_for_windows_pc(self):
        """Test case for pick_lists_get_wifi_connection_mode_for_windows_pc

        Returns Valid Wifi Connection Modes for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_wifi_connection_type_for_windows_pc(self):
        """Test case for pick_lists_get_wifi_connection_type_for_windows_pc

        Returns Valid Wifi Connection Types for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_wifi_encryption_for_windows_pc(self):
        """Test case for pick_lists_get_wifi_encryption_for_windows_pc

        Returns Valid Wifi Encryption Types for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_wifi_proxy_type_for_apple(self):
        """Test case for pick_lists_get_wifi_proxy_type_for_apple

        Gets the values that can be configured for WIFI proxy type(ProxyType) in Apple WIFI profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_wifi_security_type_for_apple(self):
        """Test case for pick_lists_get_wifi_security_type_for_apple

        Gets values that can be configured for encryption type(EncryptionType) for Apple WIFI profile.  # noqa: E501
        """
        pass

    def test_pick_lists_get_wifi_security_type_for_windows_pc(self):
        """Test case for pick_lists_get_wifi_security_type_for_windows_pc

        Returns Valid Wifi Security Types for Windows PC platform.  # noqa: E501
        """
        pass

    def test_pick_lists_get_windows_update_source_for_windows_pc(self):
        """Test case for pick_lists_get_windows_update_source_for_windows_pc

        Returns Windows Update Source for Windows PC platform.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()

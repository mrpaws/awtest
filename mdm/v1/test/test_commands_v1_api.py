# coding: utf-8

"""
    MDM API V1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import mdmv1
from mdmv1.api.commands_v1_api import CommandsV1Api  # noqa: E501
from mdmv1.rest import ApiException


class TestCommandsV1Api(unittest.TestCase):
    """CommandsV1Api unit test stubs"""

    def setUp(self):
        self.api = mdmv1.api.commands_v1_api.CommandsV1Api()  # noqa: E501

    def tearDown(self):
        pass

    def test_commands_v1_bulk_execute_async(self):
        """Test case for commands_v1_bulk_execute_async

        Executes command for multiple devices identified by alternate ID type.  # noqa: E501
        """
        pass

    def test_commands_v1_bulk_execute_schedule_os_update(self):
        """Test case for commands_v1_bulk_execute_schedule_os_update

        New - Executes Schedule OS Update command for devices in bulk.  # noqa: E501
        """
        pass

    def test_commands_v1_change_organization_group_async(self):
        """Test case for commands_v1_change_organization_group_async

        Changes the organization group to which the device is assigned.  # noqa: E501
        """
        pass

    def test_commands_v1_change_organization_group_by_alternate_id_async(self):
        """Test case for commands_v1_change_organization_group_by_alternate_id_async

        New - Changes the organization group to which the device identified by the alternate ID is assigned.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_async(self):
        """Test case for commands_v1_execute_async

        New - Executes commands for the specified device.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_by_alternate_id_async(self):
        """Test case for commands_v1_execute_by_alternate_id_async

        New - Executes a command for device by alternate ID.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_change_container_passcode_by_alternate_id_async(self):
        """Test case for commands_v1_execute_change_container_passcode_by_alternate_id_async

        New - Executes change passcode command for container device matching the filter criteria.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_change_device_passcode_async(self):
        """Test case for commands_v1_execute_change_device_passcode_async

        Executes change passcode command for device ID.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_change_device_passcode_by_alternate_id_async(self):
        """Test case for commands_v1_execute_change_device_passcode_by_alternate_id_async

        Executes command for change passcode of device by alternate ID.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_find_device_async(self):
        """Test case for commands_v1_execute_find_device_async

        Executes find device command for device by device id.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_find_device_by_alternate_id_async(self):
        """Test case for commands_v1_execute_find_device_by_alternate_id_async

        Executes finddevice command for device by alternate id.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_request_device_log_async(self):
        """Test case for commands_v1_execute_request_device_log_async

        New - Executes device log request command for device matching the filter criteria.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_schedule_os_update_by_alternate_id_async(self):
        """Test case for commands_v1_execute_schedule_os_update_by_alternate_id_async

        New - Schedule OS Update for supervised DEP devices  # noqa: E501
        """
        pass

    def test_commands_v1_execute_start_air_play_async(self):
        """Test case for commands_v1_execute_start_air_play_async

        Executes start airplay for a specific device.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_start_remote_view_by_alternate_id_async(self):
        """Test case for commands_v1_execute_start_remote_view_by_alternate_id_async

        New - Executes start remoteview command for device matching the filter criteria.  # noqa: E501
        """
        pass

    def test_commands_v1_execute_stop_device_log_async(self):
        """Test case for commands_v1_execute_stop_device_log_async

        New - Executes stop device log request command for device.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()

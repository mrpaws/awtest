# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class AppleOsXRestrictionGameCentrePayloadEntity_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'allow_use_of_game_center': 'bool',
        'allow_multiplayer_gaming': 'bool',
        'allow_adding_game_center_friends': 'bool',
        'allow_game_center_modification': 'bool'
    }

    attribute_map = {
        'allow_use_of_game_center': 'AllowUseOfGameCenter',
        'allow_multiplayer_gaming': 'AllowMultiplayerGaming',
        'allow_adding_game_center_friends': 'AllowAddingGameCenterFriends',
        'allow_game_center_modification': 'AllowGameCenterModification'
    }

    def __init__(self, allow_use_of_game_center=None, allow_multiplayer_gaming=None, allow_adding_game_center_friends=None, allow_game_center_modification=None, _configuration=None):  # noqa: E501
        """AppleOsXRestrictionGameCentrePayloadEntity_ - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._allow_use_of_game_center = None
        self._allow_multiplayer_gaming = None
        self._allow_adding_game_center_friends = None
        self._allow_game_center_modification = None
        self.discriminator = None

        if allow_use_of_game_center is not None:
            self.allow_use_of_game_center = allow_use_of_game_center
        if allow_multiplayer_gaming is not None:
            self.allow_multiplayer_gaming = allow_multiplayer_gaming
        if allow_adding_game_center_friends is not None:
            self.allow_adding_game_center_friends = allow_adding_game_center_friends
        if allow_game_center_modification is not None:
            self.allow_game_center_modification = allow_game_center_modification

    @property
    def allow_use_of_game_center(self):
        """Gets the allow_use_of_game_center of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501

        Gets or sets a value indicating whether if set to false, disables the Game Center.  # noqa: E501

        :return: The allow_use_of_game_center of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501
        :rtype: bool
        """
        return self._allow_use_of_game_center

    @allow_use_of_game_center.setter
    def allow_use_of_game_center(self, allow_use_of_game_center):
        """Sets the allow_use_of_game_center of this AppleOsXRestrictionGameCentrePayloadEntity_.

        Gets or sets a value indicating whether if set to false, disables the Game Center.  # noqa: E501

        :param allow_use_of_game_center: The allow_use_of_game_center of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501
        :type: bool
        """

        self._allow_use_of_game_center = allow_use_of_game_center

    @property
    def allow_multiplayer_gaming(self):
        """Gets the allow_multiplayer_gaming of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501

        Gets or sets a value indicating whether if set to false, disables multiplayer gaming.  # noqa: E501

        :return: The allow_multiplayer_gaming of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501
        :rtype: bool
        """
        return self._allow_multiplayer_gaming

    @allow_multiplayer_gaming.setter
    def allow_multiplayer_gaming(self, allow_multiplayer_gaming):
        """Sets the allow_multiplayer_gaming of this AppleOsXRestrictionGameCentrePayloadEntity_.

        Gets or sets a value indicating whether if set to false, disables multiplayer gaming.  # noqa: E501

        :param allow_multiplayer_gaming: The allow_multiplayer_gaming of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501
        :type: bool
        """

        self._allow_multiplayer_gaming = allow_multiplayer_gaming

    @property
    def allow_adding_game_center_friends(self):
        """Gets the allow_adding_game_center_friends of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501

        Gets or sets a value indicating whether if set to false, disables adding Game Center friends.  # noqa: E501

        :return: The allow_adding_game_center_friends of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501
        :rtype: bool
        """
        return self._allow_adding_game_center_friends

    @allow_adding_game_center_friends.setter
    def allow_adding_game_center_friends(self, allow_adding_game_center_friends):
        """Sets the allow_adding_game_center_friends of this AppleOsXRestrictionGameCentrePayloadEntity_.

        Gets or sets a value indicating whether if set to false, disables adding Game Center friends.  # noqa: E501

        :param allow_adding_game_center_friends: The allow_adding_game_center_friends of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501
        :type: bool
        """

        self._allow_adding_game_center_friends = allow_adding_game_center_friends

    @property
    def allow_game_center_modification(self):
        """Gets the allow_game_center_modification of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501

        Gets or sets a value indicating whether if set to false, disables account modifications.  # noqa: E501

        :return: The allow_game_center_modification of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501
        :rtype: bool
        """
        return self._allow_game_center_modification

    @allow_game_center_modification.setter
    def allow_game_center_modification(self, allow_game_center_modification):
        """Sets the allow_game_center_modification of this AppleOsXRestrictionGameCentrePayloadEntity_.

        Gets or sets a value indicating whether if set to false, disables account modifications.  # noqa: E501

        :param allow_game_center_modification: The allow_game_center_modification of this AppleOsXRestrictionGameCentrePayloadEntity_.  # noqa: E501
        :type: bool
        """

        self._allow_game_center_modification = allow_game_center_modification

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AppleOsXRestrictionGameCentrePayloadEntity_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AppleOsXRestrictionGameCentrePayloadEntity_):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AppleOsXRestrictionGameCentrePayloadEntity_):
            return True

        return self.to_dict() != other.to_dict()

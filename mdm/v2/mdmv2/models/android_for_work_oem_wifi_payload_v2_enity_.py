# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class AndroidForWorkOemWifiPayloadV2Enity_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fusion_settings': 'bool',
        'fusion80211d_set': 'bool',
        'fusion80211d_enable': 'bool',
        'fusion_rf_band_set': 'bool',
        'fusion_country_code_set': 'bool',
        'fusion_country_code': 'str',
        'fusion24_rf_band_set': 'bool',
        'fusion24_rf_band_enable': 'bool',
        'fusion24_rf_band_channel': 'str',
        'fusion5_rf_band_set': 'bool',
        'fusion5_rf_band_enable': 'bool',
        'fusion5_rf_band_channel': 'str'
    }

    attribute_map = {
        'fusion_settings': 'FusionSettings',
        'fusion80211d_set': 'Fusion80211dSet',
        'fusion80211d_enable': 'Fusion80211dEnable',
        'fusion_rf_band_set': 'FusionRFBandSet',
        'fusion_country_code_set': 'FusionCountryCodeSet',
        'fusion_country_code': 'FusionCountryCode',
        'fusion24_rf_band_set': 'Fusion24RFBandSet',
        'fusion24_rf_band_enable': 'Fusion24RFBandEnable',
        'fusion24_rf_band_channel': 'Fusion24RFBandChannel',
        'fusion5_rf_band_set': 'Fusion5RFBandSet',
        'fusion5_rf_band_enable': 'Fusion5RFBandEnable',
        'fusion5_rf_band_channel': 'Fusion5RFBandChannel'
    }

    def __init__(self, fusion_settings=None, fusion80211d_set=None, fusion80211d_enable=None, fusion_rf_band_set=None, fusion_country_code_set=None, fusion_country_code=None, fusion24_rf_band_set=None, fusion24_rf_band_enable=None, fusion24_rf_band_channel=None, fusion5_rf_band_set=None, fusion5_rf_band_enable=None, fusion5_rf_band_channel=None, _configuration=None):  # noqa: E501
        """AndroidForWorkOemWifiPayloadV2Enity_ - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._fusion_settings = None
        self._fusion80211d_set = None
        self._fusion80211d_enable = None
        self._fusion_rf_band_set = None
        self._fusion_country_code_set = None
        self._fusion_country_code = None
        self._fusion24_rf_band_set = None
        self._fusion24_rf_band_enable = None
        self._fusion24_rf_band_channel = None
        self._fusion5_rf_band_set = None
        self._fusion5_rf_band_enable = None
        self._fusion5_rf_band_channel = None
        self.discriminator = None

        if fusion_settings is not None:
            self.fusion_settings = fusion_settings
        if fusion80211d_set is not None:
            self.fusion80211d_set = fusion80211d_set
        if fusion80211d_enable is not None:
            self.fusion80211d_enable = fusion80211d_enable
        if fusion_rf_band_set is not None:
            self.fusion_rf_band_set = fusion_rf_band_set
        if fusion_country_code_set is not None:
            self.fusion_country_code_set = fusion_country_code_set
        if fusion_country_code is not None:
            self.fusion_country_code = fusion_country_code
        if fusion24_rf_band_set is not None:
            self.fusion24_rf_band_set = fusion24_rf_band_set
        if fusion24_rf_band_enable is not None:
            self.fusion24_rf_band_enable = fusion24_rf_band_enable
        if fusion24_rf_band_channel is not None:
            self.fusion24_rf_band_channel = fusion24_rf_band_channel
        if fusion5_rf_band_set is not None:
            self.fusion5_rf_band_set = fusion5_rf_band_set
        if fusion5_rf_band_enable is not None:
            self.fusion5_rf_band_enable = fusion5_rf_band_enable
        if fusion5_rf_band_channel is not None:
            self.fusion5_rf_band_channel = fusion5_rf_band_channel

    @property
    def fusion_settings(self):
        """Gets the fusion_settings of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether indicates whether fusion settings are included.  # noqa: E501

        :return: The fusion_settings of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion_settings

    @fusion_settings.setter
    def fusion_settings(self, fusion_settings):
        """Sets the fusion_settings of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether indicates whether fusion settings are included.  # noqa: E501

        :param fusion_settings: The fusion_settings of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion_settings = fusion_settings

    @property
    def fusion80211d_set(self):
        """Gets the fusion80211d_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether indicates whether fusion settings are enabled.  # noqa: E501

        :return: The fusion80211d_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion80211d_set

    @fusion80211d_set.setter
    def fusion80211d_set(self, fusion80211d_set):
        """Sets the fusion80211d_set of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether indicates whether fusion settings are enabled.  # noqa: E501

        :param fusion80211d_set: The fusion80211d_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion80211d_set = fusion80211d_set

    @property
    def fusion80211d_enable(self):
        """Gets the fusion80211d_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether enable Fusion802.11d.  # noqa: E501

        :return: The fusion80211d_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion80211d_enable

    @fusion80211d_enable.setter
    def fusion80211d_enable(self, fusion80211d_enable):
        """Sets the fusion80211d_enable of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether enable Fusion802.11d.  # noqa: E501

        :param fusion80211d_enable: The fusion80211d_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion80211d_enable = fusion80211d_enable

    @property
    def fusion_rf_band_set(self):
        """Gets the fusion_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether enable FusionRFBandSet.  # noqa: E501

        :return: The fusion_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion_rf_band_set

    @fusion_rf_band_set.setter
    def fusion_rf_band_set(self, fusion_rf_band_set):
        """Sets the fusion_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether enable FusionRFBandSet.  # noqa: E501

        :param fusion_rf_band_set: The fusion_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion_rf_band_set = fusion_rf_band_set

    @property
    def fusion_country_code_set(self):
        """Gets the fusion_country_code_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether indicates whether country code is set.  # noqa: E501

        :return: The fusion_country_code_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion_country_code_set

    @fusion_country_code_set.setter
    def fusion_country_code_set(self, fusion_country_code_set):
        """Sets the fusion_country_code_set of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether indicates whether country code is set.  # noqa: E501

        :param fusion_country_code_set: The fusion_country_code_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion_country_code_set = fusion_country_code_set

    @property
    def fusion_country_code(self):
        """Gets the fusion_country_code of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets country code.  # noqa: E501

        :return: The fusion_country_code of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: str
        """
        return self._fusion_country_code

    @fusion_country_code.setter
    def fusion_country_code(self, fusion_country_code):
        """Sets the fusion_country_code of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets country code.  # noqa: E501

        :param fusion_country_code: The fusion_country_code of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: str
        """

        self._fusion_country_code = fusion_country_code

    @property
    def fusion24_rf_band_set(self):
        """Gets the fusion24_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether enable Fusion24RFBandSet.  # noqa: E501

        :return: The fusion24_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion24_rf_band_set

    @fusion24_rf_band_set.setter
    def fusion24_rf_band_set(self, fusion24_rf_band_set):
        """Sets the fusion24_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether enable Fusion24RFBandSet.  # noqa: E501

        :param fusion24_rf_band_set: The fusion24_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion24_rf_band_set = fusion24_rf_band_set

    @property
    def fusion24_rf_band_enable(self):
        """Gets the fusion24_rf_band_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether enable Fusion 2.4 GHz RF Band.  # noqa: E501

        :return: The fusion24_rf_band_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion24_rf_band_enable

    @fusion24_rf_band_enable.setter
    def fusion24_rf_band_enable(self, fusion24_rf_band_enable):
        """Sets the fusion24_rf_band_enable of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether enable Fusion 2.4 GHz RF Band.  # noqa: E501

        :param fusion24_rf_band_enable: The fusion24_rf_band_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion24_rf_band_enable = fusion24_rf_band_enable

    @property
    def fusion24_rf_band_channel(self):
        """Gets the fusion24_rf_band_channel of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets fusion 2.4 GHz RF Band Channel value.  # noqa: E501

        :return: The fusion24_rf_band_channel of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: str
        """
        return self._fusion24_rf_band_channel

    @fusion24_rf_band_channel.setter
    def fusion24_rf_band_channel(self, fusion24_rf_band_channel):
        """Sets the fusion24_rf_band_channel of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets fusion 2.4 GHz RF Band Channel value.  # noqa: E501

        :param fusion24_rf_band_channel: The fusion24_rf_band_channel of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: str
        """

        self._fusion24_rf_band_channel = fusion24_rf_band_channel

    @property
    def fusion5_rf_band_set(self):
        """Gets the fusion5_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether fusion 5.0 GHz RF Band Channel value.  # noqa: E501

        :return: The fusion5_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion5_rf_band_set

    @fusion5_rf_band_set.setter
    def fusion5_rf_band_set(self, fusion5_rf_band_set):
        """Sets the fusion5_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether fusion 5.0 GHz RF Band Channel value.  # noqa: E501

        :param fusion5_rf_band_set: The fusion5_rf_band_set of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion5_rf_band_set = fusion5_rf_band_set

    @property
    def fusion5_rf_band_enable(self):
        """Gets the fusion5_rf_band_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets a value indicating whether enable Fusion 5.0 GHz RF Band.  # noqa: E501

        :return: The fusion5_rf_band_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: bool
        """
        return self._fusion5_rf_band_enable

    @fusion5_rf_band_enable.setter
    def fusion5_rf_band_enable(self, fusion5_rf_band_enable):
        """Sets the fusion5_rf_band_enable of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets a value indicating whether enable Fusion 5.0 GHz RF Band.  # noqa: E501

        :param fusion5_rf_band_enable: The fusion5_rf_band_enable of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: bool
        """

        self._fusion5_rf_band_enable = fusion5_rf_band_enable

    @property
    def fusion5_rf_band_channel(self):
        """Gets the fusion5_rf_band_channel of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501

        Gets or sets fusion 5.0 GHz RF Band Channel value.  # noqa: E501

        :return: The fusion5_rf_band_channel of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :rtype: str
        """
        return self._fusion5_rf_band_channel

    @fusion5_rf_band_channel.setter
    def fusion5_rf_band_channel(self, fusion5_rf_band_channel):
        """Sets the fusion5_rf_band_channel of this AndroidForWorkOemWifiPayloadV2Enity_.

        Gets or sets fusion 5.0 GHz RF Band Channel value.  # noqa: E501

        :param fusion5_rf_band_channel: The fusion5_rf_band_channel of this AndroidForWorkOemWifiPayloadV2Enity_.  # noqa: E501
        :type: str
        """

        self._fusion5_rf_band_channel = fusion5_rf_band_channel

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AndroidForWorkOemWifiPayloadV2Enity_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AndroidForWorkOemWifiPayloadV2Enity_):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AndroidForWorkOemWifiPayloadV2Enity_):
            return True

        return self.to_dict() != other.to_dict()

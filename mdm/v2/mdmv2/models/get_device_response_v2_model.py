# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class GetDeviceResponseV2Model(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'udid': 'str',
        'serial_number': 'str',
        'mac_address': 'str',
        'imei': 'str',
        'friendly_name': 'str',
        'organization_group_name': 'str',
        'total_storage_bytes': 'str',
        'available_storage_bytes': 'str',
        'battery_level_percentage': 'str',
        'computer_name': 'str',
        'supervised': 'bool',
        'data_encrypted': 'bool',
        'platform_info': 'GetPlatformDetailsResponseV2Model',
        'carrier_info': 'GetDeviceCarrierDetailsResponseV2Model',
        'enrollment_info': 'GetDeviceEnrollmentDetailsResponseV2Model',
        'os_build_version': 'str',
        'wifi_ssid': 'str',
        'links': 'list[Link]',
        'id': 'int',
        'uuid': 'str'
    }

    attribute_map = {
        'udid': 'udid',
        'serial_number': 'serialNumber',
        'mac_address': 'macAddress',
        'imei': 'imei',
        'friendly_name': 'friendlyName',
        'organization_group_name': 'organizationGroupName',
        'total_storage_bytes': 'totalStorageBytes',
        'available_storage_bytes': 'availableStorageBytes',
        'battery_level_percentage': 'batteryLevelPercentage',
        'computer_name': 'computerName',
        'supervised': 'supervised',
        'data_encrypted': 'dataEncrypted',
        'platform_info': 'platformInfo',
        'carrier_info': 'carrierInfo',
        'enrollment_info': 'enrollmentInfo',
        'os_build_version': 'OSBuildVersion',
        'wifi_ssid': 'WifiSsid',
        'links': 'Links',
        'id': 'id',
        'uuid': 'uuid'
    }

    def __init__(self, udid=None, serial_number=None, mac_address=None, imei=None, friendly_name=None, organization_group_name=None, total_storage_bytes=None, available_storage_bytes=None, battery_level_percentage=None, computer_name=None, supervised=None, data_encrypted=None, platform_info=None, carrier_info=None, enrollment_info=None, os_build_version=None, wifi_ssid=None, links=None, id=None, uuid=None, _configuration=None):  # noqa: E501
        """GetDeviceResponseV2Model - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._udid = None
        self._serial_number = None
        self._mac_address = None
        self._imei = None
        self._friendly_name = None
        self._organization_group_name = None
        self._total_storage_bytes = None
        self._available_storage_bytes = None
        self._battery_level_percentage = None
        self._computer_name = None
        self._supervised = None
        self._data_encrypted = None
        self._platform_info = None
        self._carrier_info = None
        self._enrollment_info = None
        self._os_build_version = None
        self._wifi_ssid = None
        self._links = None
        self._id = None
        self._uuid = None
        self.discriminator = None

        if udid is not None:
            self.udid = udid
        if serial_number is not None:
            self.serial_number = serial_number
        if mac_address is not None:
            self.mac_address = mac_address
        if imei is not None:
            self.imei = imei
        if friendly_name is not None:
            self.friendly_name = friendly_name
        if organization_group_name is not None:
            self.organization_group_name = organization_group_name
        if total_storage_bytes is not None:
            self.total_storage_bytes = total_storage_bytes
        if available_storage_bytes is not None:
            self.available_storage_bytes = available_storage_bytes
        if battery_level_percentage is not None:
            self.battery_level_percentage = battery_level_percentage
        if computer_name is not None:
            self.computer_name = computer_name
        if supervised is not None:
            self.supervised = supervised
        if data_encrypted is not None:
            self.data_encrypted = data_encrypted
        if platform_info is not None:
            self.platform_info = platform_info
        if carrier_info is not None:
            self.carrier_info = carrier_info
        if enrollment_info is not None:
            self.enrollment_info = enrollment_info
        if os_build_version is not None:
            self.os_build_version = os_build_version
        if wifi_ssid is not None:
            self.wifi_ssid = wifi_ssid
        if links is not None:
            self.links = links
        if id is not None:
            self.id = id
        if uuid is not None:
            self.uuid = uuid

    @property
    def udid(self):
        """Gets the udid of this GetDeviceResponseV2Model.  # noqa: E501

        UDID of the device  # noqa: E501

        :return: The udid of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._udid

    @udid.setter
    def udid(self, udid):
        """Sets the udid of this GetDeviceResponseV2Model.

        UDID of the device  # noqa: E501

        :param udid: The udid of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._udid = udid

    @property
    def serial_number(self):
        """Gets the serial_number of this GetDeviceResponseV2Model.  # noqa: E501

        Serial number of the device  # noqa: E501

        :return: The serial_number of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this GetDeviceResponseV2Model.

        Serial number of the device  # noqa: E501

        :param serial_number: The serial_number of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._serial_number = serial_number

    @property
    def mac_address(self):
        """Gets the mac_address of this GetDeviceResponseV2Model.  # noqa: E501

        MacAddress of the device  # noqa: E501

        :return: The mac_address of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this GetDeviceResponseV2Model.

        MacAddress of the device  # noqa: E501

        :param mac_address: The mac_address of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._mac_address = mac_address

    @property
    def imei(self):
        """Gets the imei of this GetDeviceResponseV2Model.  # noqa: E501

        Device IMEI hardware identifier  # noqa: E501

        :return: The imei of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._imei

    @imei.setter
    def imei(self, imei):
        """Sets the imei of this GetDeviceResponseV2Model.

        Device IMEI hardware identifier  # noqa: E501

        :param imei: The imei of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._imei = imei

    @property
    def friendly_name(self):
        """Gets the friendly_name of this GetDeviceResponseV2Model.  # noqa: E501

        Friendly name of the device  # noqa: E501

        :return: The friendly_name of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this GetDeviceResponseV2Model.

        Friendly name of the device  # noqa: E501

        :param friendly_name: The friendly_name of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._friendly_name = friendly_name

    @property
    def organization_group_name(self):
        """Gets the organization_group_name of this GetDeviceResponseV2Model.  # noqa: E501

        Device organization group name  # noqa: E501

        :return: The organization_group_name of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._organization_group_name

    @organization_group_name.setter
    def organization_group_name(self, organization_group_name):
        """Sets the organization_group_name of this GetDeviceResponseV2Model.

        Device organization group name  # noqa: E501

        :param organization_group_name: The organization_group_name of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._organization_group_name = organization_group_name

    @property
    def total_storage_bytes(self):
        """Gets the total_storage_bytes of this GetDeviceResponseV2Model.  # noqa: E501

        Total storage capacity in bytes  # noqa: E501

        :return: The total_storage_bytes of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._total_storage_bytes

    @total_storage_bytes.setter
    def total_storage_bytes(self, total_storage_bytes):
        """Sets the total_storage_bytes of this GetDeviceResponseV2Model.

        Total storage capacity in bytes  # noqa: E501

        :param total_storage_bytes: The total_storage_bytes of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._total_storage_bytes = total_storage_bytes

    @property
    def available_storage_bytes(self):
        """Gets the available_storage_bytes of this GetDeviceResponseV2Model.  # noqa: E501

        Available storage capacity in bytes  # noqa: E501

        :return: The available_storage_bytes of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._available_storage_bytes

    @available_storage_bytes.setter
    def available_storage_bytes(self, available_storage_bytes):
        """Sets the available_storage_bytes of this GetDeviceResponseV2Model.

        Available storage capacity in bytes  # noqa: E501

        :param available_storage_bytes: The available_storage_bytes of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._available_storage_bytes = available_storage_bytes

    @property
    def battery_level_percentage(self):
        """Gets the battery_level_percentage of this GetDeviceResponseV2Model.  # noqa: E501

        Battery level of the iOS device in percentage  # noqa: E501

        :return: The battery_level_percentage of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._battery_level_percentage

    @battery_level_percentage.setter
    def battery_level_percentage(self, battery_level_percentage):
        """Sets the battery_level_percentage of this GetDeviceResponseV2Model.

        Battery level of the iOS device in percentage  # noqa: E501

        :param battery_level_percentage: The battery_level_percentage of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._battery_level_percentage = battery_level_percentage

    @property
    def computer_name(self):
        """Gets the computer_name of this GetDeviceResponseV2Model.  # noqa: E501

        Desktop name of the device  # noqa: E501

        :return: The computer_name of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._computer_name

    @computer_name.setter
    def computer_name(self, computer_name):
        """Sets the computer_name of this GetDeviceResponseV2Model.

        Desktop name of the device  # noqa: E501

        :param computer_name: The computer_name of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._computer_name = computer_name

    @property
    def supervised(self):
        """Gets the supervised of this GetDeviceResponseV2Model.  # noqa: E501

        Supervised status of the device  # noqa: E501

        :return: The supervised of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: bool
        """
        return self._supervised

    @supervised.setter
    def supervised(self, supervised):
        """Sets the supervised of this GetDeviceResponseV2Model.

        Supervised status of the device  # noqa: E501

        :param supervised: The supervised of this GetDeviceResponseV2Model.  # noqa: E501
        :type: bool
        """

        self._supervised = supervised

    @property
    def data_encrypted(self):
        """Gets the data_encrypted of this GetDeviceResponseV2Model.  # noqa: E501

        Data encryption status  # noqa: E501

        :return: The data_encrypted of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: bool
        """
        return self._data_encrypted

    @data_encrypted.setter
    def data_encrypted(self, data_encrypted):
        """Sets the data_encrypted of this GetDeviceResponseV2Model.

        Data encryption status  # noqa: E501

        :param data_encrypted: The data_encrypted of this GetDeviceResponseV2Model.  # noqa: E501
        :type: bool
        """

        self._data_encrypted = data_encrypted

    @property
    def platform_info(self):
        """Gets the platform_info of this GetDeviceResponseV2Model.  # noqa: E501

        Contains basic details about the device platform  # noqa: E501

        :return: The platform_info of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: GetPlatformDetailsResponseV2Model
        """
        return self._platform_info

    @platform_info.setter
    def platform_info(self, platform_info):
        """Sets the platform_info of this GetDeviceResponseV2Model.

        Contains basic details about the device platform  # noqa: E501

        :param platform_info: The platform_info of this GetDeviceResponseV2Model.  # noqa: E501
        :type: GetPlatformDetailsResponseV2Model
        """

        self._platform_info = platform_info

    @property
    def carrier_info(self):
        """Gets the carrier_info of this GetDeviceResponseV2Model.  # noqa: E501

        Contains carrier details about the device platform  # noqa: E501

        :return: The carrier_info of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: GetDeviceCarrierDetailsResponseV2Model
        """
        return self._carrier_info

    @carrier_info.setter
    def carrier_info(self, carrier_info):
        """Sets the carrier_info of this GetDeviceResponseV2Model.

        Contains carrier details about the device platform  # noqa: E501

        :param carrier_info: The carrier_info of this GetDeviceResponseV2Model.  # noqa: E501
        :type: GetDeviceCarrierDetailsResponseV2Model
        """

        self._carrier_info = carrier_info

    @property
    def enrollment_info(self):
        """Gets the enrollment_info of this GetDeviceResponseV2Model.  # noqa: E501

        Contains enrollment details of the device  # noqa: E501

        :return: The enrollment_info of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: GetDeviceEnrollmentDetailsResponseV2Model
        """
        return self._enrollment_info

    @enrollment_info.setter
    def enrollment_info(self, enrollment_info):
        """Sets the enrollment_info of this GetDeviceResponseV2Model.

        Contains enrollment details of the device  # noqa: E501

        :param enrollment_info: The enrollment_info of this GetDeviceResponseV2Model.  # noqa: E501
        :type: GetDeviceEnrollmentDetailsResponseV2Model
        """

        self._enrollment_info = enrollment_info

    @property
    def os_build_version(self):
        """Gets the os_build_version of this GetDeviceResponseV2Model.  # noqa: E501

        OS build version of the device  # noqa: E501

        :return: The os_build_version of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._os_build_version

    @os_build_version.setter
    def os_build_version(self, os_build_version):
        """Sets the os_build_version of this GetDeviceResponseV2Model.

        OS build version of the device  # noqa: E501

        :param os_build_version: The os_build_version of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._os_build_version = os_build_version

    @property
    def wifi_ssid(self):
        """Gets the wifi_ssid of this GetDeviceResponseV2Model.  # noqa: E501

        WiFi SSID which device is connected to  # noqa: E501

        :return: The wifi_ssid of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._wifi_ssid

    @wifi_ssid.setter
    def wifi_ssid(self, wifi_ssid):
        """Sets the wifi_ssid of this GetDeviceResponseV2Model.

        WiFi SSID which device is connected to  # noqa: E501

        :param wifi_ssid: The wifi_ssid of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._wifi_ssid = wifi_ssid

    @property
    def links(self):
        """Gets the links of this GetDeviceResponseV2Model.  # noqa: E501

        Gets list of hypermedia link.  # noqa: E501

        :return: The links of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: list[Link]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this GetDeviceResponseV2Model.

        Gets list of hypermedia link.  # noqa: E501

        :param links: The links of this GetDeviceResponseV2Model.  # noqa: E501
        :type: list[Link]
        """

        self._links = links

    @property
    def id(self):
        """Gets the id of this GetDeviceResponseV2Model.  # noqa: E501

        Gets or sets identifier.  # noqa: E501

        :return: The id of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetDeviceResponseV2Model.

        Gets or sets identifier.  # noqa: E501

        :param id: The id of this GetDeviceResponseV2Model.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def uuid(self):
        """Gets the uuid of this GetDeviceResponseV2Model.  # noqa: E501

        Gets or sets current objects UUID.  # noqa: E501

        :return: The uuid of this GetDeviceResponseV2Model.  # noqa: E501
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this GetDeviceResponseV2Model.

        Gets or sets current objects UUID.  # noqa: E501

        :param uuid: The uuid of this GetDeviceResponseV2Model.  # noqa: E501
        :type: str
        """

        self._uuid = uuid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetDeviceResponseV2Model, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetDeviceResponseV2Model):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetDeviceResponseV2Model):
            return True

        return self.to_dict() != other.to_dict()

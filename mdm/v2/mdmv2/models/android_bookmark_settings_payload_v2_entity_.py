# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class AndroidBookmarkSettingsPayloadV2Entity_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'icon': 'int',
        'label': 'str',
        'add_to_homescreen': 'bool',
        'url': 'str'
    }

    attribute_map = {
        'icon': 'Icon',
        'label': 'Label',
        'add_to_homescreen': 'AddToHomescreen',
        'url': 'URL'
    }

    def __init__(self, icon=None, label=None, add_to_homescreen=None, url=None, _configuration=None):  # noqa: E501
        """AndroidBookmarkSettingsPayloadV2Entity_ - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._icon = None
        self._label = None
        self._add_to_homescreen = None
        self._url = None
        self.discriminator = None

        if icon is not None:
            self.icon = icon
        if label is not None:
            self.label = label
        if add_to_homescreen is not None:
            self.add_to_homescreen = add_to_homescreen
        if url is not None:
            self.url = url

    @property
    def icon(self):
        """Gets the icon of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501

        Gets or sets the icon id.  # noqa: E501

        :return: The icon of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501
        :rtype: int
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this AndroidBookmarkSettingsPayloadV2Entity_.

        Gets or sets the icon id.  # noqa: E501

        :param icon: The icon of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501
        :type: int
        """

        self._icon = icon

    @property
    def label(self):
        """Gets the label of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501

        Gets or sets the label.  # noqa: E501

        :return: The label of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this AndroidBookmarkSettingsPayloadV2Entity_.

        Gets or sets the label.  # noqa: E501

        :param label: The label of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._label = label

    @property
    def add_to_homescreen(self):
        """Gets the add_to_homescreen of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501

        Gets or sets a value indicating whether add to homescreen.  # noqa: E501

        :return: The add_to_homescreen of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501
        :rtype: bool
        """
        return self._add_to_homescreen

    @add_to_homescreen.setter
    def add_to_homescreen(self, add_to_homescreen):
        """Sets the add_to_homescreen of this AndroidBookmarkSettingsPayloadV2Entity_.

        Gets or sets a value indicating whether add to homescreen.  # noqa: E501

        :param add_to_homescreen: The add_to_homescreen of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501
        :type: bool
        """

        self._add_to_homescreen = add_to_homescreen

    @property
    def url(self):
        """Gets the url of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501

        Gets or sets the url.  # noqa: E501

        :return: The url of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AndroidBookmarkSettingsPayloadV2Entity_.

        Gets or sets the url.  # noqa: E501

        :param url: The url of this AndroidBookmarkSettingsPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._url = url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AndroidBookmarkSettingsPayloadV2Entity_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AndroidBookmarkSettingsPayloadV2Entity_):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AndroidBookmarkSettingsPayloadV2Entity_):
            return True

        return self.to_dict() != other.to_dict()

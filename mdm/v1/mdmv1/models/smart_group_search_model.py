# coding: utf-8

"""
    MDM API V1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv1.configuration import Configuration


class SmartGroupSearchModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'smart_group_id': 'int',
        'smart_group_uuid': 'str',
        'managed_by_organization_group_id': 'str',
        'managed_by_organization_group_uuid': 'str',
        'managed_by_organization_group_name': 'str',
        'devices': 'int',
        'assignments': 'int',
        'exclusions': 'int'
    }

    attribute_map = {
        'name': 'Name',
        'smart_group_id': 'SmartGroupID',
        'smart_group_uuid': 'SmartGroupUuid',
        'managed_by_organization_group_id': 'ManagedByOrganizationGroupId',
        'managed_by_organization_group_uuid': 'ManagedByOrganizationGroupUuid',
        'managed_by_organization_group_name': 'ManagedByOrganizationGroupName',
        'devices': 'Devices',
        'assignments': 'Assignments',
        'exclusions': 'Exclusions'
    }

    def __init__(self, name=None, smart_group_id=None, smart_group_uuid=None, managed_by_organization_group_id=None, managed_by_organization_group_uuid=None, managed_by_organization_group_name=None, devices=None, assignments=None, exclusions=None, _configuration=None):  # noqa: E501
        """SmartGroupSearchModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._name = None
        self._smart_group_id = None
        self._smart_group_uuid = None
        self._managed_by_organization_group_id = None
        self._managed_by_organization_group_uuid = None
        self._managed_by_organization_group_name = None
        self._devices = None
        self._assignments = None
        self._exclusions = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if smart_group_id is not None:
            self.smart_group_id = smart_group_id
        if smart_group_uuid is not None:
            self.smart_group_uuid = smart_group_uuid
        if managed_by_organization_group_id is not None:
            self.managed_by_organization_group_id = managed_by_organization_group_id
        if managed_by_organization_group_uuid is not None:
            self.managed_by_organization_group_uuid = managed_by_organization_group_uuid
        if managed_by_organization_group_name is not None:
            self.managed_by_organization_group_name = managed_by_organization_group_name
        if devices is not None:
            self.devices = devices
        if assignments is not None:
            self.assignments = assignments
        if exclusions is not None:
            self.exclusions = exclusions

    @property
    def name(self):
        """Gets the name of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets smart Group Name.  # noqa: E501

        :return: The name of this SmartGroupSearchModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SmartGroupSearchModel.

        Gets or sets smart Group Name.  # noqa: E501

        :param name: The name of this SmartGroupSearchModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def smart_group_id(self):
        """Gets the smart_group_id of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets smart Group Identifier.  # noqa: E501

        :return: The smart_group_id of this SmartGroupSearchModel.  # noqa: E501
        :rtype: int
        """
        return self._smart_group_id

    @smart_group_id.setter
    def smart_group_id(self, smart_group_id):
        """Sets the smart_group_id of this SmartGroupSearchModel.

        Gets or sets smart Group Identifier.  # noqa: E501

        :param smart_group_id: The smart_group_id of this SmartGroupSearchModel.  # noqa: E501
        :type: int
        """

        self._smart_group_id = smart_group_id

    @property
    def smart_group_uuid(self):
        """Gets the smart_group_uuid of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets smart Group Identifier.  # noqa: E501

        :return: The smart_group_uuid of this SmartGroupSearchModel.  # noqa: E501
        :rtype: str
        """
        return self._smart_group_uuid

    @smart_group_uuid.setter
    def smart_group_uuid(self, smart_group_uuid):
        """Sets the smart_group_uuid of this SmartGroupSearchModel.

        Gets or sets smart Group Identifier.  # noqa: E501

        :param smart_group_uuid: The smart_group_uuid of this SmartGroupSearchModel.  # noqa: E501
        :type: str
        """

        self._smart_group_uuid = smart_group_uuid

    @property
    def managed_by_organization_group_id(self):
        """Gets the managed_by_organization_group_id of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets managedBy Organization Group Identifier.  # noqa: E501

        :return: The managed_by_organization_group_id of this SmartGroupSearchModel.  # noqa: E501
        :rtype: str
        """
        return self._managed_by_organization_group_id

    @managed_by_organization_group_id.setter
    def managed_by_organization_group_id(self, managed_by_organization_group_id):
        """Sets the managed_by_organization_group_id of this SmartGroupSearchModel.

        Gets or sets managedBy Organization Group Identifier.  # noqa: E501

        :param managed_by_organization_group_id: The managed_by_organization_group_id of this SmartGroupSearchModel.  # noqa: E501
        :type: str
        """

        self._managed_by_organization_group_id = managed_by_organization_group_id

    @property
    def managed_by_organization_group_uuid(self):
        """Gets the managed_by_organization_group_uuid of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets managedBy Organization Group Identifier.  # noqa: E501

        :return: The managed_by_organization_group_uuid of this SmartGroupSearchModel.  # noqa: E501
        :rtype: str
        """
        return self._managed_by_organization_group_uuid

    @managed_by_organization_group_uuid.setter
    def managed_by_organization_group_uuid(self, managed_by_organization_group_uuid):
        """Sets the managed_by_organization_group_uuid of this SmartGroupSearchModel.

        Gets or sets managedBy Organization Group Identifier.  # noqa: E501

        :param managed_by_organization_group_uuid: The managed_by_organization_group_uuid of this SmartGroupSearchModel.  # noqa: E501
        :type: str
        """

        self._managed_by_organization_group_uuid = managed_by_organization_group_uuid

    @property
    def managed_by_organization_group_name(self):
        """Gets the managed_by_organization_group_name of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets managedBy Organization Group Name.  # noqa: E501

        :return: The managed_by_organization_group_name of this SmartGroupSearchModel.  # noqa: E501
        :rtype: str
        """
        return self._managed_by_organization_group_name

    @managed_by_organization_group_name.setter
    def managed_by_organization_group_name(self, managed_by_organization_group_name):
        """Sets the managed_by_organization_group_name of this SmartGroupSearchModel.

        Gets or sets managedBy Organization Group Name.  # noqa: E501

        :param managed_by_organization_group_name: The managed_by_organization_group_name of this SmartGroupSearchModel.  # noqa: E501
        :type: str
        """

        self._managed_by_organization_group_name = managed_by_organization_group_name

    @property
    def devices(self):
        """Gets the devices of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets number of devices in Smart Group.  # noqa: E501

        :return: The devices of this SmartGroupSearchModel.  # noqa: E501
        :rtype: int
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this SmartGroupSearchModel.

        Gets or sets number of devices in Smart Group.  # noqa: E501

        :param devices: The devices of this SmartGroupSearchModel.  # noqa: E501
        :type: int
        """

        self._devices = devices

    @property
    def assignments(self):
        """Gets the assignments of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets number of entities to which smart group is assigned.  # noqa: E501

        :return: The assignments of this SmartGroupSearchModel.  # noqa: E501
        :rtype: int
        """
        return self._assignments

    @assignments.setter
    def assignments(self, assignments):
        """Sets the assignments of this SmartGroupSearchModel.

        Gets or sets number of entities to which smart group is assigned.  # noqa: E501

        :param assignments: The assignments of this SmartGroupSearchModel.  # noqa: E501
        :type: int
        """

        self._assignments = assignments

    @property
    def exclusions(self):
        """Gets the exclusions of this SmartGroupSearchModel.  # noqa: E501

        Gets or sets number of entities from which the smart group is excluded.  # noqa: E501

        :return: The exclusions of this SmartGroupSearchModel.  # noqa: E501
        :rtype: int
        """
        return self._exclusions

    @exclusions.setter
    def exclusions(self, exclusions):
        """Sets the exclusions of this SmartGroupSearchModel.

        Gets or sets number of entities from which the smart group is excluded.  # noqa: E501

        :param exclusions: The exclusions of this SmartGroupSearchModel.  # noqa: E501
        :type: int
        """

        self._exclusions = exclusions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SmartGroupSearchModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SmartGroupSearchModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SmartGroupSearchModel):
            return True

        return self.to_dict() != other.to_dict()

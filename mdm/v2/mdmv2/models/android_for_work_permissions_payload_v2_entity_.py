# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class AndroidForWorkPermissionsPayloadV2Entity_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'master_runtime_permission': 'str',
        'app_level_runtime_permissions_list': 'list[AndroidForWorkAppPermissionsV2Entity]'
    }

    attribute_map = {
        'master_runtime_permission': 'MasterRuntimePermission',
        'app_level_runtime_permissions_list': 'AppLevelRuntimePermissionsList'
    }

    def __init__(self, master_runtime_permission=None, app_level_runtime_permissions_list=None, _configuration=None):  # noqa: E501
        """AndroidForWorkPermissionsPayloadV2Entity_ - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._master_runtime_permission = None
        self._app_level_runtime_permissions_list = None
        self.discriminator = None

        if master_runtime_permission is not None:
            self.master_runtime_permission = master_runtime_permission
        if app_level_runtime_permissions_list is not None:
            self.app_level_runtime_permissions_list = app_level_runtime_permissions_list

    @property
    def master_runtime_permission(self):
        """Gets the master_runtime_permission of this AndroidForWorkPermissionsPayloadV2Entity_.  # noqa: E501

        Gets or sets the master runtime permission.  # noqa: E501

        :return: The master_runtime_permission of this AndroidForWorkPermissionsPayloadV2Entity_.  # noqa: E501
        :rtype: str
        """
        return self._master_runtime_permission

    @master_runtime_permission.setter
    def master_runtime_permission(self, master_runtime_permission):
        """Sets the master_runtime_permission of this AndroidForWorkPermissionsPayloadV2Entity_.

        Gets or sets the master runtime permission.  # noqa: E501

        :param master_runtime_permission: The master_runtime_permission of this AndroidForWorkPermissionsPayloadV2Entity_.  # noqa: E501
        :type: str
        """

        self._master_runtime_permission = master_runtime_permission

    @property
    def app_level_runtime_permissions_list(self):
        """Gets the app_level_runtime_permissions_list of this AndroidForWorkPermissionsPayloadV2Entity_.  # noqa: E501

        Gets or sets app Level Runtime Permissions.  # noqa: E501

        :return: The app_level_runtime_permissions_list of this AndroidForWorkPermissionsPayloadV2Entity_.  # noqa: E501
        :rtype: list[AndroidForWorkAppPermissionsV2Entity]
        """
        return self._app_level_runtime_permissions_list

    @app_level_runtime_permissions_list.setter
    def app_level_runtime_permissions_list(self, app_level_runtime_permissions_list):
        """Sets the app_level_runtime_permissions_list of this AndroidForWorkPermissionsPayloadV2Entity_.

        Gets or sets app Level Runtime Permissions.  # noqa: E501

        :param app_level_runtime_permissions_list: The app_level_runtime_permissions_list of this AndroidForWorkPermissionsPayloadV2Entity_.  # noqa: E501
        :type: list[AndroidForWorkAppPermissionsV2Entity]
        """

        self._app_level_runtime_permissions_list = app_level_runtime_permissions_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AndroidForWorkPermissionsPayloadV2Entity_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AndroidForWorkPermissionsPayloadV2Entity_):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AndroidForWorkPermissionsPayloadV2Entity_):
            return True

        return self.to_dict() != other.to_dict()

# coding: utf-8

"""
    MDM API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from mdmv2.configuration import Configuration


class AppleOsXRestrictionSafariPayloadEntity_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'allow_safari_auto_fill': 'bool',
        'allow_deprecated_web_kit_tls': 'bool'
    }

    attribute_map = {
        'allow_safari_auto_fill': 'AllowSafariAutoFill',
        'allow_deprecated_web_kit_tls': 'AllowDeprecatedWebKitTls'
    }

    def __init__(self, allow_safari_auto_fill=None, allow_deprecated_web_kit_tls=None, _configuration=None):  # noqa: E501
        """AppleOsXRestrictionSafariPayloadEntity_ - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._allow_safari_auto_fill = None
        self._allow_deprecated_web_kit_tls = None
        self.discriminator = None

        if allow_safari_auto_fill is not None:
            self.allow_safari_auto_fill = allow_safari_auto_fill
        if allow_deprecated_web_kit_tls is not None:
            self.allow_deprecated_web_kit_tls = allow_deprecated_web_kit_tls

    @property
    def allow_safari_auto_fill(self):
        """Gets the allow_safari_auto_fill of this AppleOsXRestrictionSafariPayloadEntity_.  # noqa: E501

        Gets or sets a value indicating whether if set to false, Safari auto-fill is disabled.  # noqa: E501

        :return: The allow_safari_auto_fill of this AppleOsXRestrictionSafariPayloadEntity_.  # noqa: E501
        :rtype: bool
        """
        return self._allow_safari_auto_fill

    @allow_safari_auto_fill.setter
    def allow_safari_auto_fill(self, allow_safari_auto_fill):
        """Sets the allow_safari_auto_fill of this AppleOsXRestrictionSafariPayloadEntity_.

        Gets or sets a value indicating whether if set to false, Safari auto-fill is disabled.  # noqa: E501

        :param allow_safari_auto_fill: The allow_safari_auto_fill of this AppleOsXRestrictionSafariPayloadEntity_.  # noqa: E501
        :type: bool
        """

        self._allow_safari_auto_fill = allow_safari_auto_fill

    @property
    def allow_deprecated_web_kit_tls(self):
        """Gets the allow_deprecated_web_kit_tls of this AppleOsXRestrictionSafariPayloadEntity_.  # noqa: E501

        Gets or sets a value indicating whether gets or sets a value which indicates whether the deprecated TLS 1.0/1.1 behavior in Safari is allowed. Available in macOS 10.15.4 and later.  # noqa: E501

        :return: The allow_deprecated_web_kit_tls of this AppleOsXRestrictionSafariPayloadEntity_.  # noqa: E501
        :rtype: bool
        """
        return self._allow_deprecated_web_kit_tls

    @allow_deprecated_web_kit_tls.setter
    def allow_deprecated_web_kit_tls(self, allow_deprecated_web_kit_tls):
        """Sets the allow_deprecated_web_kit_tls of this AppleOsXRestrictionSafariPayloadEntity_.

        Gets or sets a value indicating whether gets or sets a value which indicates whether the deprecated TLS 1.0/1.1 behavior in Safari is allowed. Available in macOS 10.15.4 and later.  # noqa: E501

        :param allow_deprecated_web_kit_tls: The allow_deprecated_web_kit_tls of this AppleOsXRestrictionSafariPayloadEntity_.  # noqa: E501
        :type: bool
        """

        self._allow_deprecated_web_kit_tls = allow_deprecated_web_kit_tls

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AppleOsXRestrictionSafariPayloadEntity_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AppleOsXRestrictionSafariPayloadEntity_):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AppleOsXRestrictionSafariPayloadEntity_):
            return True

        return self.to_dict() != other.to_dict()
